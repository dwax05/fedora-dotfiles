{
  "groups" : [ {
    "id" : "actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#action}", "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{util#action}", "{util#rider_backend_action}", "{enum:com.intellij.microservices.ui.diagrams.model.MsDiagramDataModel$showNotificationIfNoDataFound$1}" ],
        "additional.same_window" : [ "{enum#boolean}" ],
        "additional.toolwindow" : [ "{util#toolwindow}" ],
        "class" : [ "{util#class_name}", "{enum:com.intellij.microservices.ui.diagrams.actions.MsShowWholeProjectDiagramAction|com.intellij.microservices.ui.diagrams.model.MsDiagramDataModel$showNotificationIfNoDataFound$1}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb" : [ "{enum#boolean}" ],
        "dumb_start" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "enable" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "isSubmenu" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "parent" : [ "{enum#parent}", "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "result.error" : [ "{util#class_name}" ],
        "result.type" : [ "{enum:ignored|performed|failed|unknown}" ],
        "size" : [ "{regexp#integer}" ],
        "start_time" : [ "{regexp#integer}" ],
        "toolwindow" : [ "{util#toolwindow}" ]
      },
      "enums" : {
        "__event_id" : [ "action.invoked", "custom.action.invoked", "action.finished", "action.updated", "action.group.expanded" ],
        "parent" : [ "LineMarkerActionWrapper", "TreeActionWrapper", "MyTreeActionWrapper" ]
      }
    }
  }, {
    "id" : "actions.gtdu",
    "builds" : [ ],
    "versions" : [ {
      "from" : "53"
    } ],
    "rules" : {
      "event_id" : [ "{enum:performed|navigated}" ],
      "event_data" : {
        "choice" : [ "{enum:SU|GTD}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "input_event" : [ "{util#shortcut}" ],
        "navigation_provider_class" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "actions.on.save",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:reformat.code|rearrange.code|optimize.imports|cleanup.code}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "actions.runAnything",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#run_anything_class}:_RunAnything_-_execution_-_{enum#run_anything_title}", "{enum#run_anything_class}:_RunAnything_-_more_-_{enum#run_anything_title}", "{enum#_}" ],
      "event_data" : {
        "group" : [ "{enum#group}", "{util#class_name}" ],
        "list" : [ "{enum#list}", "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "with_alt" : [ "{enum#boolean}" ],
        "with_shift" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "RunAnything_-_SHIFT_HOLD", "execute", "click.more" ],
        "group" : [ "Bundler", "rails_generators", "Gradle_tasks", "npm_scripts", "Maven_goals", "rvm_use", "rake", "rbenv_shell", "General", "Recent", "Run_configurations", "Gradle", "Maven", "npm", "Python", "Recent_projects", "ruby", "Grunt", "third.party" ],
        "list" : [ "RunAnythingMainListModel", "RunAnythingHelpListModel", "third.party" ],
        "run_anything_class" : [ "RunAnythingMainListModel", "RunAnythingHelpListModel" ],
        "run_anything_title" : [ "Run_configurations", "Recent", "rake", "rails_generators", "Recent_projects", "Bundler", "rvm_use", "ruby", "third.party", "run.anything.group.unknown.title", "Gradle", "Maven", "Python", "npm", "General", "Gradle_tasks", "Maven_goals", "npm_scripts" ]
      }
    }
  }, {
    "id" : "aqua.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum:selection.updated|url.updated|locator.evaluated}" ],
      "event_data" : {
        "isAqua" : [ "{enum#boolean}" ],
        "locatorType" : [ "{enum:XPATH|CSS|TAG_WITH_CLASSES|ID|NAME|TEXT|DATA|ARIA_LABEL}" ],
        "source" : [ "{enum:NONE|BROWSER|PAGE_STRUCTURE|EVALUATOR|CODE_EDITOR|CACHE}", "{enum:intention|navigation}" ]
      }
    }
  }, {
    "id" : "automated.edit.prediction",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:suggestion.accepted|edit.detected|prediction.finished|prediction}" ],
      "event_data" : {
        "detection_mechanism" : [ "{enum:document_changed}", "{enum:DOCUMENT_CHANGED|RENAME_REFACTORING}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "edit_length" : [ "{regexp#integer}" ],
        "edit_prediction.explanation_provider" : [ "{util#class_name}" ],
        "edit_prediction.max_grouped_edit_length" : [ "{regexp#integer}" ],
        "edit_prediction.synthesizer" : [ "{util#class_name}" ],
        "edit_prediction.tokenizer" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ],
        "location_prediction.location_pred_algorithm" : [ "{enum:levenshtein}" ],
        "location_prediction.similarity_threshold" : [ "{regexp#float}" ],
        "num_suggestions" : [ "{regexp#integer}" ],
        "orig_psi_element" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "prediction_delay_ms" : [ "{regexp#integer}" ],
        "prev_pred_running" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "balloons",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:balloon.shown}" ],
      "event_data" : {
        "balloon_id" : [ "{enum#__balloon_id}", "{enum:cwm.contols.hidden}", "{enum:cwm.host.builtinserver.port_bind_error}", "{enum:cwm.controls.hidden}" ]
      },
      "enums" : {
        "__balloon_id" : [ "cwm.telephony.text_message", "cwm.host.session.nmins_left", "cwm.telephony.participant_enabled_video", "cwm.host.connection.version_mismatch_error", "cwm.host.action.getjoinlink.link_copied", "cwm.permissions.accept_decline", "cwm.host.action.copyjoinlink.link_copied", "cwm.following.started", "cwm.host.terminal.shared.status", "cwm.host.connection.user_left", "cwm.telephony.customize_audio_video_settings", "cwm.host.connection.user_joined", "cwm.following.request", "cwm.guest.telephony.voice_chat_enabled", "cwm.guest.following.stopped" ]
      }
    }
  }, {
    "id" : "bigdatatools.connections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "6"
    } ],
    "rules" : {
      "event_id" : [ "{enum:configured}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "is_depend" : [ "{enum#boolean}" ],
        "per_project" : [ "{enum#boolean}" ],
        "type" : [ "{enum:LOCAL|SFTP|YARN|HIVE|GLUE|EMR|DATAPROC|TENCENT_COS|HDFS|GCS|YANDEX|ALIBABA_OSS|AZURE|MINIO|LINODE|DOS|S3|KAFKA|ZEPPELIN|SPARK_MONITORING|FLINK|DATABRICKS|TEST}", "{enum:SPARK_SUBMIT_CLUSTER}", "{enum:ARBITRARY_CLUSTER}" ]
      }
    }
  }, {
    "id" : "bookmarks",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{util#favorite_type}" ]
      },
      "enums" : {
        "__event_id" : [ "bookmarks.total", "bookmarks.with.letter.mnemonic", "bookmarks.with.line", "bookmarks.with.number.mnemonic", "favorites.directories", "favorites.files", "favorites.lists", "favorites.total", "favorites.custom", "bookmarks.lists" ]
      }
    }
  }, {
    "id" : "bookmarks.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:bookmark.navigate|favorites.navigate}" ],
      "event_data" : {
        "mnemonicType" : [ "{enum:Number|None|Letter}" ],
        "navigatable" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "withLine" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "build",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|finished}" ],
      "event_data" : {
        "build_originator" : [ "{util#class_name}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "has_errors" : [ "{enum#boolean}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "incremental" : [ "{enum#boolean}" ],
        "modules" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "task_runner_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "build.gradle.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "executed" : [ "{regexp#integer}" ],
        "failed_count" : [ "{regexp#integer}" ],
        "from_cache_count" : [ "{regexp#integer}" ],
        "gradle_plugin" : [ "{util#build_gradle_performance_task_plugin}" ],
        "name" : [ "{util#build_gradle_performance_task_name}" ],
        "sum_duration_from_cache_ms" : [ "{regexp#integer}" ],
        "sum_duration_ms" : [ "{regexp#integer}" ],
        "sum_duration_up_to_date_ms" : [ "{regexp#integer}" ],
        "task_id" : [ "{regexp#integer}" ],
        "up_to_date_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "settings.evaluated", "container.callback.executed", "task.executed", "build.loaded", "project.loaded", "task.graph.calculated", "task.graph.executed", "execution.completed" ]
      }
    }
  }, {
    "id" : "build.jps",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:rebuild.completed|autobuild.completed|build.completed}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "bundled.resource.reference",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:ide.file|plugin.file}" ],
      "event_data" : {
        "path" : [ "{util#bundled_resource_path}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "cache.recovery.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:perform}" ],
      "event_data" : {
        "action-id" : [ "{enum:refresh|hammer|reindex|drop-shared-index|rescan|stop|reload-workspace-model}", "{enum:recover-from-log}" ],
        "from-guide" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "cloud.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:tool.installed|config.exists}" ],
      "event_data" : {
        "config" : [ "{enum:kubeconfig}" ],
        "tool" : [ "{enum:docker|helm|kubectl|minikube|podman|telepresence|terraform|ansible}", "{enum:packer|kind|pulumi|skaffold}", "{enum:tfswitch}", "{enum#__tool}", "{enum:bicep|localstack|okteto}" ]
      },
      "enums" : {
        "__tool" : [ "puppet", "dsc", "gcloud", "chef", "rancher", "microk8s", "aws", "eksctl" ]
      }
    }
  }, {
    "id" : "commit.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "commit_check_class" : [ "{util#class_name}" ],
        "commit_option" : [ "{enum:SIGN_OFF|RUN_HOOKS|AMEND}" ],
        "commit_problem_class" : [ "{util#class_name}" ],
        "commit_problem_place" : [ "{enum:NOTIFICATION|COMMIT_TOOLWINDOW|PUSH_DIALOG}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "errors_count" : [ "{regexp#integer}" ],
        "execution_order" : [ "{enum:EARLY|MODIFICATION|LATE|POST_COMMIT}" ],
        "files_included" : [ "{regexp#integer}" ],
        "files_total" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "input_event" : [ "{util#shortcut}" ],
        "is_from_settings" : [ "{enum#boolean}" ],
        "is_success" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "unversioned_included" : [ "{regexp#integer}" ],
        "unversioned_total" : [ "{regexp#integer}" ],
        "warnings_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "select.item", "session.started", "session.finished", "show.diff", "close.diff", "commit", "jump.to.source", "commit.and.push", "include.file", "exclude.file", "toggle.commit.check", "commit_check_session.finished", "code.analysis.warning", "commit_check_session.started", "toggle.commit.option", "view.commit.problem" ]
      }
    }
  }, {
    "id" : "completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished}" ],
      "event_data" : {
        "additional.full_line.added" : [ "{enum#boolean}" ],
        "additional.full_line.enabled" : [ "{enum#boolean}" ],
        "additional.full_line.finished" : [ "{enum#boolean}", "{regexp#integer}" ],
        "additional.full_line.finished_cancelled" : [ "{regexp#integer}" ],
        "additional.full_line.finished_exception" : [ "{regexp#integer}" ],
        "additional.full_line.finished_timed_out" : [ "{regexp#integer}" ],
        "additional.full_line.finished_times" : [ "{regexp#integer}" ],
        "additional.full_line.hardware_fast_enough" : [ "{enum#boolean}" ],
        "additional.full_line.inapplicable" : [ "{enum:LANGUAGE_IS_NOT_SUPPORTED|DISABLED_IN_RIDER|DISABLED_LANGUAGE|UNSUPPORTED_COMPLETION_MODE|SLOW_MACHINE|IS_NOT_MAIN_EDITOR|NOT_A_BASIC_COMPLETION|UNSUPPORTED_PLATFORM}" ],
        "additional.full_line.items_analyzed" : [ "{regexp#integer}" ],
        "additional.full_line.items_generated" : [ "{regexp#integer}" ],
        "additional.full_line.items_invalid_critical" : [ "{regexp#integer}" ],
        "additional.full_line.items_invalid_syntax" : [ "{regexp#integer}" ],
        "additional.full_line.items_invalid_total" : [ "{regexp#integer}" ],
        "additional.full_line.items_not_analyzed_timeout" : [ "{regexp#integer}" ],
        "additional.full_line.items_not_analyzed_unknown" : [ "{regexp#integer}" ],
        "additional.full_line.items_proposed" : [ "{regexp#integer}" ],
        "additional.full_line.selected" : [ "{enum#boolean}" ],
        "additional.full_line.selected_cache_extension_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_cache_hit_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_checks_time" : [ "{regexp#integer}" ],
        "additional.full_line.selected_code_tokens_count" : [ "{regexp#integer}" ],
        "additional.full_line.selected_inference_time" : [ "{regexp#integer}" ],
        "additional.full_line.selected_last_char" : [ "{enum:LETTER|DIGIT|DOT|SPACE|OPENED_BRACKET|CLOSED_BRACKET|TERMINATION}" ],
        "additional.full_line.selected_local_inference_type" : [ "{enum:K_INFERENCE|ONNX_NATIVE|LLAMA_NATIVE}" ],
        "additional.full_line.selected_prefix_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_provider" : [ "{util#class_name}" ],
        "additional.full_line.selected_score" : [ "{regexp#float}" ],
        "additional.full_line.selected_semantic_state" : [ "{enum:CORRECT|UNKNOWN|INCORRECT_ACCEPTABLE|INCORRECT_CRITICAL}" ],
        "additional.full_line.selected_suffix_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_syntax_state" : [ "{enum:CORRECT|UNKNOWN|INCORRECT_ACCEPTABLE|INCORRECT_CRITICAL}" ],
        "additional.full_line.selected_tokens_count" : [ "{regexp#integer}" ],
        "additional.full_line.skipped_by_trigger_model" : [ "{regexp#integer}" ],
        "additional.full_line.started" : [ "{enum#boolean}", "{regexp#integer}" ],
        "additional.full_line.tracked" : [ "{enum#boolean}" ],
        "additional.full_line.trigger_model_decision" : [ "{enum:SKIP|TRIGGER|RANDOM_TRIGGER|UNAVAILABLE|DISABLED}" ],
        "additional.full_line.trigger_model_enabled" : [ "{enum#boolean}" ],
        "additional.full_line.trigger_model_score" : [ "{regexp#float}" ],
        "additional.full_line.version" : [ "{regexp#version}" ],
        "additional.iren_model_type" : [ "{enum:default|both|ngram|dobf}" ],
        "additional.iren_probability" : [ "{regexp#float}" ],
        "additional.ml_used" : [ "{enum#boolean}" ],
        "additional.r_context_type" : [ "{enum#__r_context_type}" ],
        "additional.r_lookup_element_origin" : [ "{enum:ORIGINAL|ML_COMPLETION|MERGED}" ],
        "additional.r_ml_app_version" : [ "{regexp#version}" ],
        "additional.r_ml_enabled" : [ "{enum#boolean}" ],
        "additional.r_ml_n_proposed_variants" : [ "{regexp#integer}" ],
        "additional.r_ml_response_received" : [ "{enum#boolean}" ],
        "additional.r_ml_time_ms" : [ "{regexp#integer}" ],
        "additional.rider_item_type" : [ "{enum:Default|TemplateItem|PostfixTemplate|NamedParameter}" ],
        "additional.ruby_lookup_usage_location" : [ "{enum#__ruby_lookup_usage_location}", "{enum:PRY|UNKNOWN}" ],
        "additional.spellchecker" : [ "{enum#boolean}" ],
        "additional.total_ml_time" : [ "{regexp#integer}" ],
        "additional.version" : [ "{regexp#version}" ],
        "alphabetically" : [ "{enum#boolean}" ],
        "backspaces" : [ "{regexp#integer}" ],
        "completion_char" : [ "{enum#__completion_char}" ],
        "contributor" : [ "{util#class_name}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb_finish" : [ "{enum#boolean}" ],
        "dumb_start" : [ "{enum#boolean}" ],
        "duration" : [ "{regexp#integer}" ],
        "finish_type" : [ "{enum:TYPED|EXPLICIT|CANCELED_EXPLICITLY|CANCELED_BY_TYPING}" ],
        "iren_model_type" : [ "{enum:default|ngram}" ],
        "iren_probability" : [ "{regexp#float}" ],
        "lang" : [ "{util#lang}" ],
        "ml_used" : [ "{enum#boolean}" ],
        "order_added_correct_element" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "query_length" : [ "{regexp#integer}" ],
        "r_context_type" : [ "{enum#__r_context_type}" ],
        "r_lookup_element_origin" : [ "{enum:ORIGINAL|ML_COMPLETION|MERGED}" ],
        "r_ml_app_version" : [ "{regexp#version}" ],
        "r_ml_enabled" : [ "{enum#boolean}" ],
        "r_ml_model_version" : [ "{regexp#version}" ],
        "r_ml_n_proposed_variants" : [ "{regexp#integer}" ],
        "r_ml_response_received" : [ "{enum#boolean}" ],
        "r_ml_time_ms" : [ "{regexp#integer}" ],
        "ruby_lookup_usage_location" : [ "{enum#__ruby_lookup_usage_location}" ],
        "schema" : [ "{enum:Maven_Groovy|Gradle|Maven|fxml}", "{util#file_type_schema}" ],
        "selected_index" : [ "{regexp#integer}" ],
        "selection_changed" : [ "{regexp#integer}" ],
        "spellchecker" : [ "{enum#boolean}" ],
        "time_to_compute_correct_element" : [ "{regexp#integer}" ],
        "time_to_show" : [ "{regexp#integer}" ],
        "time_to_show_correct_element" : [ "{regexp#integer}" ],
        "time_to_show_first_element" : [ "{regexp#integer}" ],
        "token_length" : [ "{regexp#integer}" ],
        "total_ml_time" : [ "{regexp#integer}" ],
        "typing" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__completion_char" : [ "ENTER", "TAB", "COMPLETE_STATEMENT", "AUTO_INSERT", "OTHER" ],
        "__r_context_type" : [ "IDENTIFIER", "NAMESPACE", "DOLLAR_ACCESS", "AT_ACCESS", "IMPORT", "OPERATOR", "UNKNOWN" ],
        "__ruby_lookup_usage_location" : [ "COMMON", "DEBUG", "EVAL", "IRB", "RAILS" ]
      }
    }
  }, {
    "id" : "completion.postfix",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#completion_template}", "{util#completion_provider_template}", "{enum:expanded}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider" : [ "{util#completion_provider_template}", "{util#completion_template}" ],
        "template" : [ "{util#completion_template}" ]
      }
    }
  }, {
    "id" : "customize.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "group" : [ "{enum:Java_Frameworks|Web_Development|Version_Controls|Test_Tools|Application_Servers|Clouds|Swing|Android|Database_Tools|Other_Tools|Plugin_Development|Build_Tools}" ],
        "page" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "timestamp" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "remaining.pages.skipped", "WizardDisplayed", "UIThemeChanged", "DesktopEntryCreated", "LauncherScriptCreated", "BundledPluginGroupDisabled", "BundledPluginGroupEnabled", "BundledPluginGroupCustomized", "FeaturedPluginInstalled" ]
      }
    }
  }, {
    "id" : "cwm.gateway",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:guestDownload.started|guestDownload.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "isSucceeded" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "cwm.lifecycle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "client_id" : [ "{regexp#hash}" ],
        "connectionType" : [ "{enum:ws_relay|p2p_quic|direct_tcp|unknown}", "{enum:turn_relay_quic}" ],
        "disconnectsCount" : [ "{regexp#integer}" ],
        "guestsCount" : [ "{regexp#integer}" ],
        "id" : [ "{regexp#integer}" ],
        "isUnattended" : [ "{enum#boolean}" ],
        "mode" : [ "{enum:Readonly|EditFiles|FullAccess|Custom}" ],
        "parentProductCode" : [ "{enum:|unknown|IU|RM|WS|PS|PY|DS|OC|CL|DB|RD|GO|GW}" ],
        "participantsMax" : [ "{regexp#integer}" ],
        "participantsSize" : [ "{enum:OneOnOne|Group}" ],
        "permissions.files" : [ "{enum:Readonly|FullAccess}" ],
        "permissions.mode" : [ "{enum:Readonly|EditFiles|FullAccess|Custom}" ],
        "permissions.other_tw" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions.run" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions.terminal" : [ "{enum:Disabled|Readonly|Request|FullAccess}" ],
        "permissions_changed.files" : [ "{enum:Readonly|FullAccess}" ],
        "permissions_changed.mode" : [ "{enum:Readonly|EditFiles|FullAccess|Custom}" ],
        "permissions_changed.other_tw" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions_changed.run" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions_changed.terminal" : [ "{enum:Disabled|Readonly|Request|FullAccess}" ],
        "permissions_request_result" : [ "{enum:Approved|Declined|Ignored}" ],
        "permissions_requested" : [ "{enum:FULL_ACCESS|EDIT_FILES}" ],
        "pingDirect" : [ "{regexp#integer}" ],
        "pingUiThread" : [ "{regexp#integer}" ],
        "place" : [ "{util#place}" ],
        "sessionDurationMinutes" : [ "{regexp#integer}" ],
        "sessionDurationType" : [ "{enum:Below15mins|Below25mins|Below1hr|Above1hr}" ],
        "sessionId" : [ "{regexp#hash}" ],
        "telephonyEnabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "connected", "finished", "onCircleLeftClickStart", "onCircleLeftClickStop", "onCircleRightClick", "onEditorFollowingLabelResume", "onEditorFollowingLabelStop", "onEditorFullSyncLabelStop", "onReconnection", "sessionCreated", "sessionTerminated", "onReconnectionFailed", "sessionFinished", "sessionStarted", "sessionExpired", "onConnectionFailed", "thin.finished", "thin.connected", "onPermissionsChanged", "guest.finished", "guest.connected", "guest.ping", "onPermissionsRequested", "onPermissionsRequestFinished" ]
      }
    }
  }, {
    "id" : "cwm.telephony",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "telephonyEnabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "cwmSessionEnded", "cwmSessionStarted", "enabledFromAction", "leaveSession", "showCallWindow", "leaveCall", "showPortForwardingWindow" ]
      }
    }
  }, {
    "id" : "cwm.telephony.devices",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "cameraEnabled.finished", "cameraEnabled.started", "microphoneEnabled.finished", "microphoneEnabled.started", "voiceCallJoined.finished", "voiceCallJoined.started", "screenSharingEnabled.started", "screenSharingEnabled.finished" ]
      }
    }
  }, {
    "id" : "daemon",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished}" ],
      "event_data" : {
        "canceled" : [ "{enum#boolean}" ],
        "dumb_mode" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "entireFileHighlighted" : [ "{enum#boolean}" ],
        "errors" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "highlighting_completed" : [ "{enum#boolean}" ],
        "lines" : [ "{regexp#integer}" ],
        "warnings" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "daemon.code.vision",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished|vcs.annotation.loaded}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "db.ide.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:config}" ],
      "event_data" : {
        "single_stripe" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "debugger.attach.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "debuggersFilterSet" : [ "{enum#boolean}" ],
        "hostType" : [ "{enum:LOCAL|REMOTE}", "{enum:DOCKER}" ],
        "isMainAction" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "searchFieldUsed" : [ "{enum#boolean}" ],
        "selectedDebugger" : [ "{util#class_name}" ],
        "viewType" : [ "{enum:LIST|TREE}" ]
      },
      "enums" : {
        "__event_id" : [ "attach.button.pressed", "host.switched", "view.switched", "search.filter.used", "debuggers.filter.set" ]
      }
    }
  }, {
    "id" : "debugger.breakpoints",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "total.{regexp#count}", "total.disabled.{regexp#count}", "total.non.suspending.{regexp#count}", "not.default.suspend.ALL.{util#breakpoint}", "not.default.suspend.THREAD.{util#breakpoint}", "not.default.suspend.NONE.{util#breakpoint}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "suspendPolicy" : [ "{enum:ALL|THREAD|NONE}" ],
        "type" : [ "{util#breakpoint}" ]
      },
      "enums" : {
        "__event_id" : [ "using.log.expression", "using.log.message", "using.dependent", "using.temporary", "using.log.stack", "using.condition", "not.default.suspend", "using.groups", "total", "total.non.suspending", "total.disabled" ]
      }
    }
  }, {
    "id" : "debugger.breakpoints.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "verified.{regexp#integer}", "new.custom.{util#plugin}", "new.{util#breakpoint}", "{enum#_}", "{enum:breakpoint.added|breakpoint.verified}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "time" : [ "{regexp#integer}" ],
        "type" : [ "{util#breakpoint}" ],
        "within_session" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "new.breakpoint", "new.within.session", "new.cython-line", "new.custom" ]
      }
    }
  }, {
    "id" : "debugger.breakpoints.usage.java",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:line.breakpoint.added}" ],
      "event_data" : {
        "kind" : [ "{enum:LINE|LAMBDA|LINE_AND_LAMBDAS|RETURN}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "debugger.evaluate.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "input_event" : [ "{util#shortcut}" ],
        "mode" : [ "{enum:CODE_FRAGMENT|EXPRESSION}" ]
      },
      "enums" : {
        "__event_id" : [ "dialog.open", "evaluate", "mode.switch", "inline.evaluate", "history.show", "history.choose", "watch.from.inline.add", "inline.input.focus" ]
      }
    }
  }, {
    "id" : "debugger.frames.view",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:selected}" ],
      "event_data" : {
        "view_id" : [ "{enum:UNKNOWN|Default|Threads|SideBySide|FramesOnly}", "{enum:Hidden}" ]
      }
    }
  }, {
    "id" : "debugger.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:execution.point.reached}" ],
      "event_data" : {
        "action_id" : [ "{util#action}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ]
      }
    }
  }, {
    "id" : "debugger.ui.experiment",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:start|stop}" ],
      "event_data" : {
        "group" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "defender",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:protection|auto_config|notification}" ],
      "event_data" : {
        "reaction" : [ "{enum:Auto|Manual|ProjectMute|GlobalMute}" ],
        "status" : [ "{enum:Skipped|Enabled|Disabled|Error}" ],
        "success" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "deployment.activities",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "finish_time_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "scenario" : [ "{enum#scenario}" ],
        "start_time_ms" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "autoupload.session.finished", "download.action.finished", "download.action.started", "upload.action.finished", "upload.action.started", "create.project.from.existing.sources" ],
        "scenario" : [ "NoServer", "LocalServer", "MountedServer", "FtpSftpServer" ]
      }
    }
  }, {
    "id" : "deployment.publish.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "AutoUpload.{enum#_}", "AutoUpload.external.changes.{enum#_}", "Stop.on.first.error.{enum#_}", "Overwrite.up.to.date.files.{enum#_}", "Delete.target.items.{enum#_}", "Create.empty.dirs.{enum#_}", "Prompt.on.local.overwrite.{enum#_}", "Notify.remote.changes.{enum#_}", "Show.warning.dialog.on.Remote.Host.{enum#_}", "Permissions.on.files.{regexp#integer}", "Permissions.on.files.-{regexp#integer}", "Prompt.on.remote.overwrite.{enum#_}", "Logging.verbosity.{enum#_}", "{enum#_1}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value}", "{regexp#permission}" ]
      },
      "enums" : {
        "_" : [ "ALWAYS", "ON_EXPLICIT_SAVE", "NEVER", "yes", "no", "NONE", "CHECK_TIMESTAMP", "CHECK_CONTENT", "ERRORS", "BRIEF", "DETAILS" ],
        "_1" : [ "AutoUpload", "AutoUpload.external.changes", "Stop.on.first.error", "Overwrite.up.to.date.files", "Delete.target.items", "Create.empty.dirs", "Prompt.on.local.overwrite", "Prompt.on.remote.overwrite", "Permissions.on.files", "Permissions.on.folder", "Notify.remote.changes", "Show.warning.dialog.on.Remote.Host", "Logging.verbosity" ],
        "value" : [ "always", "on_explicit_save", "never", "none", "check_timestamp", "check_content", "errors", "brief", "details" ]
      },
      "regexps" : {
        "permission" : "-?[0-9]{1,3}"
      }
    }
  }, {
    "id" : "deployment.serverSettingsUI",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "deploymentServerSettingsUI.visibility.new{enum#_}LevelGroup", "deploymentServerSettingsUI.visibility.switchGroupTo{enum#_}Level", "defaultServerSettingWithAutouploadOn.{enum#_}", "deploymentServerSettingsUI.{enum#_}", "{enum#_1}" ],
      "event_data" : {
        "decision" : [ "{enum#decision}" ],
        "level" : [ "{enum#level}" ]
      },
      "enums" : {
        "_" : [ "Project", "IDE", "changeDefaultServerCancelled", "changeDefaultServerExplicitly", "changeDefaultServerSilently", "disableDefaultServerCancelled", "disableDefaultServerExplicitly", "disableDefaultServerSilently", "AutodetectPathClick", "ProjectIDELevelCheckBoxClick" ],
        "_1" : [ "NewGroupVisibilityCreated", "NewGroupVisibilitySwitched", "AutodetectPathClicked", "ProjectIDELevelCheckBoxClicked", "defaultServerSettingWithAutoUploadOnSwitched", "defaultServerSettingWithAutoUploadOnDisabled" ],
        "decision" : [ "explicit", "silent", "cancelled" ],
        "level" : [ "project", "IDE" ]
      }
    }
  }, {
    "id" : "devcontainers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:config.exists}" ]
    }
  }, {
    "id" : "directoryIndex",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "buildRequest" : [ "{enum:INITIAL|BRANCH_BUILD|FULL_REBUILD|INCREMENTAL_UPDATE}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "part" : [ "{enum:MAIN|ORDER_ENTRY_GRAPH}" ],
        "reason" : [ "{enum:ROOT_MODEL|VFS_CHANGE|ADDITIONAL_LIBRARIES_PROVIDER}" ]
      },
      "enums" : {
        "__event_id" : [ "reset", "building.finished", "building.additionalLibraryRootsProvider", "building.workspaceModel", "building.exclusionPolicy", "building.finalizing", "building.sdk", "building.started" ]
      }
    }
  }, {
    "id" : "disabled.bundled.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "disabled.listed.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ]
      }
    }
  }, {
    "id" : "docker.connections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:total|connection.used}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "type" : [ "{enum:DOCKER_FOR_MAC|DOCKER_FOR_WINDOWS|UNIX_SOCKET|TCP|MINIKUBE|COLIMA|WSL|SSH|UNKNOWN}" ]
      }
    }
  }, {
    "id" : "ds.tables",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:table.data.loaded|table.info.loaded|table.data.sorted}" ],
      "event_data" : {
        "data_accessor" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "table_type" : [ "{enum:PANDAS_DATA_FRAME|PANDAS_SERIES|NUMPY_ARRAY|POLARS_TABLE|GENERIC_TABLE|PYSPARK_TABLE|EXTERNAL}" ]
      }
    }
  }, {
    "id" : "dumb.mode",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:stage|started|finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "finish_type" : [ "{enum:TERMINATED|FINISHED}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "stage_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "eclipse.projects.detector",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:detected|opened}" ],
      "event_data" : {
        "fromEmptyState" : [ "{enum#boolean}" ],
        "projectsCount" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "editor.notification.panel",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:shown|actionInvoked|notificationShown|handlerInvoked}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "handler_class" : [ "{util#class_name}" ],
        "key" : [ "{util#editor_notification_panel_key}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "editor.settings.ide",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#no_}", "stripTrailingSpaces.{enum#trailingSpaces}", "completionCaseSensitivity.{regexp#integer}", "smartBackspace.{enum#backspace}", "reformatOnPaste.{regexp#integer}", "importsOnPaste.{regexp#integer}", "noBreadcrumbsFor{util#lang}", "breadcrumbsFor{util#lang}", "{enum:not.default}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "setting_id" : [ "{enum:caretAfterLineEnd|caretInsideTabs|virtualSpaceAtFileBottom|softWraps|softWraps.console|softWraps.preview|softWraps.relativeIndent|softWraps.showAll|ensureNewlineAtEOF|quickDocOnMouseHover|blinkingCaret|blockCaret|rightMargin|lineNumbers|gutterIcons|foldingOutline|showLeadingWhitespace|showInnerWhitespace|showTrailingWhitespace|indentGuides|animatedScroll|dragNDrop|wheelZoom|mouseCamel|inplaceRename|preselectOnRename|inlineDialog|minimizeScrolling|afterReformatNotification|afterOptimizeNotification|smartHome|camelWords|editor.inlay.parameter.hints|breadcrumbsAbove|all.breadcrumbs|intentionBulb|renderDoc|intentionPreview|useEditorFontInInlays|breadcrumbs|richCopy|parameterAutoPopup|javadocAutoPopup|completionAutoPopup|autoPopupCharComplete|autoCompleteBasic|autoCompleteSmart|parameterInfoFullSignature|indentOnEnter|braceOnEnter|javadocOnEnter|scriptletEndOnEnter|smartEnd|autoCloseJavadocTags|surroundByQuoteOrBrace|pairBracketAutoInsert|pairQuoteAutoInsert|reformatOnRBrace|bracesHighlight|scopeHighlight|identifierUnderCaretHighlight|autoAddImports|completionHints|tabExitsBracketsAndQuotes|nextErrorActionGoesToErrorsFirst|suppressWarnings|importHintEnabled|showMethodSeparators|openTabsInMainWindow|stripTrailingSpaces|blinkPeriod|completionCaseSensitivity|smartBackspace|reformatOnPaste|importsOnPaste|autoReparseDelay|errorStripeMarkMinHeight|caret.movement.word|caret.movement.line|fileColorsEnabled|fileColorsEnabledForProjectView|fileColorsEnabledForTabs|show.actions.in.tooltip}", "{enum:foldingOutlineOnlyOnHover}" ],
        "value" : [ "{regexp#integer}", "{enum:Whole|Changed|None}", "{enum:OFF|AUTOINDENT|INDENT}", "{enum:NONE|CURRENT|NEIGHBOR|START|END|BOTH|OTHER}" ]
      },
      "enums" : {
        "_" : [ "caretAfterLineEnd", "caretInsideTabs", "virtualSpaceAtFileBottom", "softWraps", "softWraps.console", "softWraps.preview", "softWraps.relativeIndent", "softWraps.showAll", "ensureNewlineAtEOF", "quickDocOnMouseHover", "blinkingCaret", "blockCaret", "rightMargin", "lineNumbers", "gutterIcons", "foldingOutline", "showLeadingWhitespace", "showInnerWhitespace", "showTrailingWhitespace", "indentGuides", "animatedScroll", "dragNDrop", "wheelZoom", "mouseCamel", "inplaceRename", "preselectOnRename", "inlineDialog", "minimizeScrolling", "afterReformatNotification", "afterOptimizeNotification", "smartHome", "camelWords", "editor.inlay.parameter.hints", "breadcrumbsAbove", "all.breadcrumbs", "breadcrumbs", "intentionBulb", "richCopy", "parameterAutoPopup", "javadocAutoPopup", "completionAutoPopup", "autoPopupCharComplete", "autoCompleteBasic", "autoCompleteSmart", "parameterInfoFullSignature", "indentOnEnter", "braceOnEnter", "javadocOnEnter", "smartEnd", "autoCloseJavadocTags", "surroundByQuoteOrBrace", "pairBracketAutoInsert", "pairQuoteAutoInsert", "reformatOnRBrace", "bracesHighlight", "scopeHighlight", "identifierUnderCaretHighlight", "autoAddImports", "completionHints", "externalAnnotationsInline", "inferredAnnotationsInline", "tabExitsBracketsAndQuotes", "stripTrailingSpaces", "completionCaseSensitivity", "smartBackspace", "reformatOnPaste", "importsOnPaste", "show.actions.in.tooltip", "nextErrorActionGoesToErrorsFirst", "autoReparseDelay", "errorStripeMarkMinHeight", "suppressWarnings", "showMethodSeparators", "importHintEnabled", "caret.movement.line", "caret.movement.word", "renderDoc", "scriptletEndOnEnter", "blinkPeriod", "fileColorsEnabledForProjectView", "fileColorsEnabledForTabs", "fileColorsEnabled", "intentionPreview" ],
        "backspace" : [ "OFF", "AUTOINDENT", "INDENT" ],
        "no_" : [ "noCaretAfterLineEnd", "noCaretInsideTabs", "noVirtualSpaceAtFileBottom", "noSoftWraps", "noSoftWraps.console", "noSoftWraps.preview", "noSoftWraps.relativeIndent", "noSoftWraps.showAll", "noEnsureNewlineAtEOF", "noQuickDocOnMouseHover", "noBlinkingCaret", "noBlockCaret", "noRightMargin", "noLineNumbers", "noGutterIcons", "noFoldingOutline", "noShowLeadingWhitespace", "noShowInnerWhitespace", "noShowTrailingWhitespace", "noIndentGuides", "noAnimatedScroll", "noDragNDrop", "noWheelZoom", "noMouseCamel", "noInplaceRename", "noPreselectOnRename", "noInlineDialog", "noMinimizeScrolling", "noAfterReformatNotification", "noAfterOptimizeNotification", "noSmartHome", "noCamelWords", "noEditor.inlay.parameter.hints", "noBreadcrumbsBelow", "noBreadcrumbs", "noIntentionBulb", "noRichCopy", "noParameterAutoPopup", "noJavadocAutoPopup", "noCompletionAutoPopup", "noAutoPopupCharComplete", "noAutoCompleteBasic", "noAutoCompleteSmart", "noParameterInfoFullSignature", "noIndentOnEnter", "noBraceOnEnter", "noJavadocOnEnter", "noSmartEnd", "noAutoCloseJavadocTags", "noSurroundByQuoteOrBrace", "noPairBracketAutoInsert", "noPairQuoteAutoInsert", "noReformatOnRBrace", "noBracesHighlight", "noScopeHighlight", "noIdentifierUnderCaretHighlight", "noAutoAddImports", "noCompletionHints", "noExternalAnnotationsInline", "noInferredAnnotationsInline", "noTabExitsBracketsAndQuotes" ],
        "trailingSpaces" : [ "None", "Changed", "Whole" ]
      }
    }
  }, {
    "id" : "editor.settings.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:autoOptimizeImports|noAutoOptimizeImports}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "editor.typing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:typed|too.many.events|latency}" ],
      "event_data" : {
        "editor_kind" : [ "{enum:UNTYPED|MAIN_EDITOR|CONSOLE|PREVIEW|DIFF}" ],
        "file_type" : [ "{util#file_type}" ],
        "latency_90_ms" : [ "{regexp#integer}" ],
        "latency_max_ms" : [ "{regexp#integer}" ],
        "toolwindow_id" : [ "{util#toolwindow}" ]
      }
    }
  }, {
    "id" : "editorconfig",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:editorconfig.applied}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "property" : [ "{enum:Standard|IntelliJ|Other}" ]
      }
    }
  }, {
    "id" : "enabled.bundled.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "enabled.listed.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ]
      }
    }
  }, {
    "id" : "evaluation.feedback",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:evaluation.feedback.sent|evaluation.feedback.shown|evaluation.feedback.cancelled}" ],
      "event_data" : {
        "feature_set_rating" : [ "{regexp#integer}" ],
        "interface_rating" : [ "{regexp#integer}" ],
        "performance_rating" : [ "{regexp#integer}" ],
        "price_rating" : [ "{regexp#integer}" ],
        "stability_rating" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "event.log",
    "builds" : [ ],
    "versions" : [ {
      "from" : "20"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "code" : [ "{regexp#integer}" ],
        "error" : [ "{enum:NO_LOGS|NO_UPLOADER|NO_LIBRARIES|NO_TEMP_FOLDER}", "{enum:NO_ARGUMENTS|NO_DEVICE_CONFIG|NO_RECORDER_CONFIG|NO_APPLICATION_CONFIG|IDE_NOT_CLOSING|ERROR_ON_SEND|NOT_PERMITTED_SERVER|ERROR_IN_CONFIG|NOTHING_TO_SEND|SENT_WITH_ERRORS}", "{util#class_name}", "{enum:EMPTY_CONTENT|INVALID_JSON|UNKNOWN}", "{enum:EMPTY_SERVICE_URL|UNREACHABLE_SERVICE|EMPTY_RESPONSE_BODY|ERROR_ON_LOAD}" ],
        "error_ts" : [ "{regexp#integer}" ],
        "errors" : [ "{regexp#integer}" ],
        "external" : [ "{enum#boolean}" ],
        "failed" : [ "{regexp#integer}" ],
        "paths" : [ "{regexp#hash}" ],
        "send" : [ "{regexp#integer}" ],
        "send_ts" : [ "{regexp#integer}" ],
        "stage" : [ "{enum:LOADING|PARSING}" ],
        "succeed" : [ "{regexp#integer}", "{enum#boolean}" ],
        "total" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "whitelist.loaded", "whitelist.updated", "logs.send", "external.send.command.creation.started", "external.send.command.creation.finished", "external.send.started", "external.send.finished", "loading.config.failed", "whitelist.update.failed", "whitelist.load.failed", "metadata.loaded", "metadata.updated", "metadata.update.failed", "metadata.load.failed" ]
      }
    }
  }, {
    "id" : "event.log.user.info",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:statistics.test.mode.enabled|team.city.version.detected}" ]
    }
  }, {
    "id" : "experimental.ui.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action" : [ "{enum:NEW_UI_LINK|DENSITY_CLEAN|DENSITY_COMPACT}" ],
        "exp_ui" : [ "{enum#boolean}" ],
        "switch_source" : [ "{enum:ENABLE_NEW_UI_ACTION}", "{enum:WELCOME_PROMO|DISABLE_NEW_UI_ACTION}", "{enum:WHATS_NEW_PAGE}", "{enum:PREFERENCES}", "{enum:SETTINGS}" ],
        "theme_name" : [ "{enum#look_and_feel}" ]
      },
      "enums" : {
        "__event_id" : [ "switch.ui", "meet.new.ui.switch_theme", "meet.new.ui.action", "invite.banner.closed", "invite.banner.shown" ]
      }
    }
  }, {
    "id" : "feedback.in.ide.dont.show.again.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:disabledVersions}" ],
      "event_data" : {
        "versionList" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "feedback.in.ide.notification",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:notification.respond.invoked|notification.disable.invoked|notification.shown}" ],
      "event_data" : {
        "idle_feedback_type" : [ "{enum:NEW_UI_FEEDBACK|PRODUCTIVITY_METRIC_FEEDBACK}", "{enum:PYCHARM_UI_FEEDBACK}", "{enum:AQUA_NEW_USER_FEEDBACK|AQUA_OLD_USER_FEEDBACK}", "{enum:KAFKA_CONSUMER_FEEDBACK|KAFKA_PRODUCER_FEEDBACK}" ]
      }
    }
  }, {
    "id" : "feedback.productivity.metric",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:feedback}" ],
      "event_data" : {
        "experience" : [ "{enum:1 month or less|2-3 months|4-6 months|7-11 months|1-2 years|3-5 years|6-10 years|More than 10 years|No data}", "{regexp#integer}" ],
        "productivity" : [ "{regexp#integer}" ],
        "proficiency" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "feedback.surveys.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:number.of.respond.actions.invoked|number.of.notifications.shown|feedback.survey.answered|number.of.disable.actions.invoked}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "survey_id" : [ "{util#feedback_survey_id}" ]
      }
    }
  }, {
    "id" : "file.structure.popup",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:data.shown|data.filled|popup.disposed}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "file.types",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#file_type}", "{enum:file.in.project}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "file_schema.percent" : [ "{regexp#integer}" ],
        "file_schema.schema" : [ "{util#file_type_schema}" ],
        "file_type" : [ "{util#file_type}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "file.types.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#file_type}", "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "file_editor" : [ "{util#class_name}" ],
        "file_extension" : [ "{util#file_extension}" ],
        "file_name_pattern" : [ "{util#file_name_pattern}" ],
        "file_path" : [ "{regexp#hash}" ],
        "file_type" : [ "{util#file_type}", "{enum:DIFF}" ],
        "is_in_reader_mode" : [ "{enum#boolean}" ],
        "is_preview_tab" : [ "{enum#boolean}" ],
        "is_writable" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "schema" : [ "{enum:Maven_Groovy|Gradle|Maven|fxml}", "{util#file_type_schema}" ],
        "time_to_show" : [ "{regexp#integer}" ],
        "type" : [ "{enum:open|edit}" ]
      },
      "enums" : {
        "__event_id" : [ "open", "edit", "close", "select", "create_by_new_file" ]
      }
    }
  }, {
    "id" : "find",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:search.session.started|check.box.toggled|regexp.help.clicked|pin.toggled}" ],
      "event_data" : {
        "case_sensitive" : [ "{enum#boolean}" ],
        "context" : [ "{enum#__context}" ],
        "option_name" : [ "{enum#__option_name}" ],
        "option_value" : [ "{enum#boolean}" ],
        "regular_expressions" : [ "{enum#boolean}" ],
        "type" : [ "{enum:FindInFile|FindInPath|Unknown}" ],
        "whole_words_only" : [ "{enum#boolean}" ],
        "with_file_filter" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "FindPopupPanel$ToggleCaseSensitive", "FindPopupPanel$TogglePreserveCase", "FindPopupPanel$ToggleWholeWords", "FindPopupPanel$ToggleRegex", "FindPopupPanel$ToggleFileFilter", "FindInEditor.MatchCaseOn", "FindInEditor.WholeWordsOn", "FindInEditor.RegexOn", "FindInEditor.Context.IN_STRING_LITERALS", "FindInEditor.Context.IN_COMMENTS", "FindInEditor.Context.EXCEPT_STRING_LITERALS", "FindInEditor.Context.EXCEPT_COMMENTS", "FindInEditor.Context.EXCEPT_COMMENTS_AND_STRING_LITERALS", "FindInPath.MatchCaseOn", "FindInPath.WholeWordsOn", "FindInPath.RegexOn", "FindInPath.FileFilterOn", "FindInPath.Context.IN_STRING_LITERALS", "FindInPath.Context.IN_COMMENTS", "FindInPath.Context.EXCEPT_STRING_LITERALS", "FindInPath.Context.EXCEPT_COMMENTS", "FindInPath.Context.EXCEPT_COMMENTS_AND_STRING_LITERALS" ],
        "__context" : [ "ANY", "IN_STRING_LITERALS", "IN_COMMENTS", "EXCEPT_STRING_LITERALS", "EXCEPT_COMMENTS", "EXCEPT_COMMENTS_AND_STRING_LITERALS" ],
        "__option_name" : [ "CaseSensitive", "PreserveCase", "WholeWords", "Regex", "FileFilter" ]
      }
    }
  }, {
    "id" : "find.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:options}" ],
      "event_data" : {
        "additional.isIncludeChildMethods" : [ "{enum#boolean}" ],
        "isSearchForTextOccurrences" : [ "{enum#boolean}" ],
        "isUsages" : [ "{enum#boolean}" ],
        "openInNewTab" : [ "{enum#boolean}" ],
        "searchScope" : [ "{enum:All_Places|Project_Files|Project_and_Libraries|Project_Production_Files|Project_Test_Files|Scratches_and_Consoles|Recently_Viewed_Files|Recently_Changed_Files|Open_Files|Current_File]}", "{util#scopeRule}" ]
      }
    }
  }, {
    "id" : "gateway.space.connector",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "auto" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "login_state" : [ "{enum:NOT_LOGGED|LOGGING|ERROR|LOGGED_IN}" ],
        "screen" : [ "{enum:REMOTE_DEVELOPMENT|SPACE_WELCOME|SPACE_LOGIN}" ]
      },
      "enums" : {
        "__event_id" : [ "logout.clicked", "client.launch.started", "tab.selected", "repository.clicked", "organization.clicked", "login.in.browser.clicked", "back.clicked", "project.clicked", "client.launch.finished", "watch.overview.clicked", "workspace.clicked", "logged.in", "connect.clicked", "browse.environments.clicked", "explore.clicked" ]
      }
    }
  }, {
    "id" : "gateway.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "connector" : [ "{enum:unknown|cwm.connector|space.connector|ssh.connector}", "{enum:gitpod.connector}", "{enum:google.cloud.connector}", "{enum:LinkedClientProxyingConnector|WslConnector}", "{enum:WorkstationsConnector|CawsConnector|GitpodConnector|CodespacesConnector}", "{enum:CoderGatewayMainView}", "{enum:SshConnector|SpaceGatewayConnector|CodeWithMeConnector|WslConnector}" ],
        "connectorProvider" : [ "{util#class_name}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "emptyPassword" : [ "{enum#boolean}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "installationSource" : [ "{enum:CustomLink|LocalArchive|SuggestionList}" ],
        "installation_result" : [ "{enum:Success|Error|IncompatibleVersion}" ],
        "isDefaultBackend" : [ "{enum#boolean}" ],
        "isNewConnection" : [ "{enum#boolean}" ],
        "isSucceeded" : [ "{enum#boolean}" ],
        "numberOfBackendChangedClicks" : [ "{regexp#integer}" ],
        "numberOfConnectionChangedClicks" : [ "{regexp#integer}" ],
        "numberOfSshHosts" : [ "{regexp#integer}" ],
        "numberOfWslInstances" : [ "{regexp#integer}" ],
        "panel" : [ "{enum:LocateRemoteProjectPanel|ChooseHostPanel}" ],
        "panelName" : [ "{enum:LocateRemoteProjectPanel|ChooseHostPanel|LocateRemoteSshProjectPanel|LocateWslProjectPanel}" ],
        "parentProductCode" : [ "{enum:|unknown|IU|RM|WS|PS|PY|DS|OC|CL|DB|RD|GO}" ],
        "parentProductId" : [ "{enum:RM|WS|PS|PY|DS|OC|CL|DB|RD|GO|IU|GW|unknown}" ],
        "plugin" : [ "{util#plugin}" ],
        "pluginId" : [ "{enum:io.gitpod.jetbrains.gateway}", "{enum:com.google.cloud.workstations.ide.jetbrains.connector|aws.toolkit|com.github.codespaces.jetbrains.gateway}", "{enum:com.coder.gateway}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "productId" : [ "{enum:unknown|IU|RM|PY|DS|PS|WS|CL|RD|GO}", "{enum:IC}", "{enum:FLL}" ],
        "projectsPerHost" : [ "{regexp#integer}" ],
        "projectsPerWslInstance" : [ "{regexp#integer}" ],
        "savePassUntilRestart" : [ "{enum#boolean}" ],
        "sshAuthType" : [ "{enum:unknown|Password|Key pair (OpenSSH or PuTTY)|OpenSSH config and authentication agent|PASSWORD|OPEN_SSH|KEY_PAIR}" ]
      },
      "enums" : {
        "__event_id" : [ "full.deploy.cycle.activity.started", "full.deploy.cycle.activity.finished", "download.ide.backend.activity.started", "download.ide.backend.activity.finished", "otherOptions.clicked", "useOldBackend.clicked", "openSshTerminal.clicked", "uploadInstaller.clicked", "useNewBackend.clicked", "documentation.clicked", "useDownloadLink.clicked", "checkConnectionAndContinue.clicked", "connect.clicked", "gtwFromStandaloneIde.started", "install_plugin", "ssh.auth.type.selected", "recent.ssh.projects.opened", "projects.per.host.registered", "JBInstaller.clicked", "backend.changed", "checking.connection.activity.finished", "checking.connection.activity.started", "connection.changed", "installation.source.selected", "projects.per.wsl.instance.registered", "recent.wsl.projects.opened", "openSettings.clicked", "leave_panel", "backButton.clicked", "plugin.documentation.clicked", "plugin.install.clicked", "select.different.ide.clicked", "recents.gear.clicked", "manage.backends.clicked", "openProject.clicked", "newProject.clicked", "connectToHost.clicked", "remove.host.clicked", "connect.provider.clicked", "openSshTerminal.recents.clicked", "different.ide.toggle.clicked", "remove.from.recents.clicked", "authenticate.clicked", "authenticate.dialog.ok.clicked", "authenticate.dialog.cancel.clicked" ]
      }
    }
  }, {
    "id" : "git.branches",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_new" : [ "{enum#boolean}" ],
        "is_protected" : [ "{enum#boolean}" ],
        "successfully" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "checkout.started", "checkout.finished", "checkout.checkout_operation.started", "checkout.checkout_operation.finished", "popup_widget_clicked", "checkout.vfs_refresh.started", "checkout.vfs_refresh.finished" ]
      }
    }
  }, {
    "id" : "git.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "common_local_branches" : [ "{regexp#integer}" ],
        "common_remote_branches" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fs_monitor" : [ "{enum:NONE|BUILTIN|EXTERNAL_FS_MONITOR}" ],
        "is_worktree_used" : [ "{enum#boolean}" ],
        "local_branches" : [ "{regexp#integer}" ],
        "multiple_root" : [ "{enum#boolean}" ],
        "recent_checkout_branches" : [ "{regexp#integer}" ],
        "remote_bitbucket" : [ "{regexp#integer}" ],
        "remote_bitbucket_custom" : [ "{regexp#integer}" ],
        "remote_branches" : [ "{regexp#integer}" ],
        "remote_gitee" : [ "{regexp#integer}" ],
        "remote_gitee_custom" : [ "{regexp#integer}" ],
        "remote_github" : [ "{regexp#integer}" ],
        "remote_github_custom" : [ "{regexp#integer}" ],
        "remote_gitlab" : [ "{regexp#integer}" ],
        "remote_gitlab_custom" : [ "{regexp#integer}" ],
        "remote_other" : [ "{regexp#integer}" ],
        "remotes" : [ "{regexp#integer}" ],
        "type" : [ "{enum#__type}" ],
        "value" : [ "{enum:sync|dont_sync|not_decided}", "{enum:branch_default|merge|rebase}", "{enum:stash|shelve}" ],
        "version" : [ "{regexp#version}" ],
        "working_copy_size" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "repo.sync", "update.type", "save.policy", "use.builtin.ssh", "push.autoupdate", "push.update.all.roots", "cherrypick.autocommit", "warn.about.crlf", "warn.about.detached", "executable", "repository", "showGitBranchesInLog", "updateBranchesFilterInLogOnSelection", "staging.area.enabled", "commit_template", "common_branches_count" ],
        "__type" : [ "UNIX", "MSYS", "CYGWIN", "UNDEFINED", "NULL", "WSL1", "WSL2" ]
      }
    }
  }, {
    "id" : "git.status.refresh",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:status.refresh.started|status.refresh.finished|untracked.refresh.started|untracked.refresh.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_full_refresh" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "grazi.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:language.detected|typo.found|quickfix.applied}" ],
      "event_data" : {
        "cancelled" : [ "{enum:true|false}" ],
        "fixes" : [ "{regexp#count}" ],
        "id" : [ "{enum#grazie_rule_long_ids}" ],
        "language" : [ "{enum#__language}" ],
        "spellcheck" : [ "{enum:true|false}" ]
      },
      "enums" : {
        "__language" : [ "", "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl" ]
      }
    }
  }, {
    "id" : "grazi.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:enabled.language|native.language|enabled.spellcheck|rule}" ],
      "event_data" : {
        "enabled" : [ "{enum:true|false}" ],
        "id" : [ "{enum#grazie_rule_long_ids}" ],
        "value" : [ "{enum#__value}", "{enum:true|false}" ]
      },
      "enums" : {
        "__value" : [ "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl" ]
      }
    }
  }, {
    "id" : "grazie.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "cancelled" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fixes" : [ "{regexp#count}", "{regexp#integer}" ],
        "id" : [ "{enum#grazie_rule_long_ids}" ],
        "info" : [ "{regexp#fix_info}", "{enum#__info}" ],
        "language" : [ "{enum#__language}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "value" : [ "{enum:ko}" ]
      },
      "enums" : {
        "__event_id" : [ "language.detected", "typo.found", "quickfix.applied", "language.suggested", "quick.fix.invoked" ],
        "__info" : [ "add.exception", "rule.settings:unmodified", "rule.settings:canceled", "rule.settings:changes:domains", "accept.suggestion", "rule.settings:changes:rules", "rule.settings:changes:languages", "rule.settings:changes:languages,rules", "rule.settings:changes:languages,domains", "rule.settings:changes:languages,domains,rules", "rule.settings:changes:unclassified", "rule.settings:changes:domains,rules" ],
        "__language" : [ "unknown", "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl", "km", "ast", "be", "sv", "gl", "eo", "ta", "br", "ar", "tl", "sl", "ga", "da", "ca" ]
      },
      "regexps" : {
        "fix_info" : "accept\\.suggestion|add\\.exception|rule\\.settings:(canceled|unmodified|changes:(unclassified|(languages,?)?(domains,?)?(rules)?))"
      }
    }
  }, {
    "id" : "grazie.pro.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "client_mode" : [ "{enum:Local|Cloud}" ],
        "completion_length" : [ "{regexp#integer}" ],
        "context_length" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "language" : [ "{enum:ast|de|el|km|en|sl|sv|tl|br|eo|ca|gl|ga|da|es|ta|ar|fa|fr|it|ja|nl|pl|pt|ro|ru|sk|uk|be|zh|unknown}" ],
        "origin" : [ "{enum:Bundled.Yaml|Grazie.RuleEngine|Grazie.MLEC|LanguageTool}" ],
        "prefix_ends_with_whitespace" : [ "{enum#boolean}" ],
        "prefix_length" : [ "{regexp#integer}" ],
        "profile" : [ "{enum:Always|Moderate}" ],
        "result" : [ "{enum:FullyAccepted|Rejected|PartiallyAccepted}" ],
        "rule" : [ "{enum#grazie_rule_ids}" ],
        "source" : [ "{enum:Popup|Inline}" ],
        "word_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "completion.shown", "completion.accepted", "definition.shown", "enable.suggested.rule.applied", "definition.requested", "auto.fix.undone", "enable.suggested.rule.undone", "auto.fix.applied", "completion.requested", "completion.interacted" ]
      }
    }
  }, {
    "id" : "grazie.pro.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "enter_add_newlines" : [ "{enum#boolean}" ],
        "profile" : [ "{enum:Always|Moderate}" ],
        "style" : [ "{enum:INFORMAL|UNSPECIFIED|PUBLIC|FORMAL}" ],
        "type" : [ "{enum:LOCAL|CLOUD}", "{enum:DISABLED|INLAY|POPUP}" ],
        "whitespace_after_enter" : [ "{enum#boolean}" ],
        "whitespace_after_tab" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "settings.wrap.text", "settings.processing", "settings.honor.subphrases", "settings.highlight.pos", "settings.completion", "settings.vale.annotations", "settings.writing.style", "settings.auto.fix" ]
      }
    }
  }, {
    "id" : "grazie.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "comments" : [ "{enum#state}" ],
        "commit" : [ "{enum#state}" ],
        "documentation" : [ "{enum#state}" ],
        "enabled" : [ "{enum#boolean}" ],
        "id" : [ "{enum#grazie_rule_long_ids}", "{util#grazie_strategy_id}" ],
        "language" : [ "{util#lang}" ],
        "literals" : [ "{enum#state}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "userChange" : [ "{enum#state}" ],
        "value" : [ "{enum#__value}", "{enum:ko}" ]
      },
      "enums" : {
        "__event_id" : [ "enabled.language", "native.language", "rule", "strategy", "checkingContext" ],
        "__value" : [ "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl", "km", "ast", "be", "sv", "gl", "eo", "ta", "unknown", "br", "ar", "tl", "sl", "ga", "da", "ca" ]
      }
    }
  }, {
    "id" : "gutter.icon.click",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#gutter_icon}", "{enum:clicked}" ],
      "event_data" : {
        "current_file" : [ "{util#lang}" ],
        "icon_id" : [ "{util#gutter_icon}", "{util#plugin_info}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "highlighting.settings.per.file",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:skip.highlighting.roots|skip.inspection.roots}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "http.client.execution.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:request.execution.started|response.html.preview.opened}" ],
      "event_data" : {
        "hasPreRequestHandler" : [ "{enum#boolean}" ],
        "hasResponseHandler" : [ "{enum#boolean}" ],
        "method" : [ "{util#http_client_valid_method_rule}" ]
      }
    }
  }, {
    "id" : "http.client.microservices",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:generation|navigate.to.error.element}" ],
      "event_data" : {
        "requestsCount" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ide.error.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:report|report.all|report.and.clear.all|clear.all}" ]
    }
  }, {
    "id" : "ide.script.engine",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#class_name}", "{enum#_}", "{enum:used}" ],
      "event_data" : {
        "factory" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "_" : [ "third.party" ]
      }
    }
  }, {
    "id" : "ide.self.update",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "patches" : [ "{enum:not.available|manual|auto}" ],
        "show_in_editor" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "update.failed", "notification.clicked", "dialog.shown", "dialog.update.started", "dialog.shown.no.patch", "dialog.manual.patch.prepared", "dialog.download.clicked", "dialog.shown.manual.patch", "notification.shown", "update.whats.new" ]
      }
    }
  }, {
    "id" : "index.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:lookup.entries|lookup.stub_entries|lookup.all_keys}" ],
      "event_data" : {
        "entries_found" : [ "{regexp#integer}" ],
        "index_id" : [ "{util#index_id}" ],
        "keys" : [ "{regexp#integer}" ],
        "lookup_duration_ms" : [ "{regexp#integer}" ],
        "lookup_failed" : [ "{enum#boolean}" ],
        "lookup_op" : [ "{enum:and|or|unknown}" ],
        "psi_tree_deserializing_ms" : [ "{regexp#integer}" ],
        "total_keys_indexed" : [ "{regexp#integer}" ],
        "up_to_date_check_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "index.usage.aggregates",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:lookup.entries|lookup.all_keys|lookup.stub_entries}" ],
      "event_data" : {
        "index_id" : [ "{util#index_id}" ],
        "lookup_duration_90ile_ms" : [ "{regexp#integer}" ],
        "lookup_duration_95ile_ms" : [ "{regexp#integer}" ],
        "lookup_duration_99ile_ms" : [ "{regexp#integer}" ],
        "lookup_duration_max_ms" : [ "{regexp#integer}" ],
        "lookup_duration_mean_ms" : [ "{regexp#float}" ],
        "lookups_failed" : [ "{regexp#integer}" ],
        "lookups_total" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "indexing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "7"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|stage|finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "finish_type" : [ "{enum:TERMINATED|FINISHED}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "stage_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "inlay.action.handler",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:click.handled}" ],
      "event_data" : {
        "id" : [ "{util#plugin_info}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "inlay.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:model.options|global.inlays.settings|language.inlays.settings|model.inlays.settings}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "enabled_globally" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "model" : [ "{enum#__model}", "{enum:vcs.code.vision|references|inheritors|problems}", "{enum:kotlin.values.hints}", "{enum:go.inlays.display.constant.definition}", "{enum:spring.secured.urls.inlay.hints|rbs.ruby.block.self.type.hints}", "{enum:aqua}", "{enum:MarkdownTableInlayProviderSettingsKey|chain.hints}" ],
        "option_id" : [ "{enum#__option_id}", "{enum:ruby.parameter.name.reflected.in.method.name|kotlin.values.ranges}" ],
        "option_value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__model" : [ "ts.enum.hints", "annotation.hints", "JavaLens", "js.chain.hints", "ts.chain.hints", "composer.package.version.hints", "groovy.parameters.hints", "chain.hints", "ts.type.hints", "js.type.hints", "parameter.hints.old", "return.values.hints", "KotlinLambdasHintsProvider", "KotlinReferencesTypeHintsProvider", "docker.inlay.hints", "kotlin.call.chains.hints", "RelatedProblems", "groovy.implicit.null.argument.hint", "kotlin.lambdas.hints", "oc.type.hints", "kotlin.references.types.hints", "vcs.code.author", "tms.local.md.hints", "draft.inlay.hints", "MethodChainsInlayProvider", "sql.join.cardinality.hints", "microservices.url.path.inlay.hints", "CodeVision", "java.implicit.types", "kotlin.ranges.hints", "groovy.variable.type.hints", "rbs.ruby.return.type.hints", "rbs.ruby.container.type.hints", "rbs.ruby.constant.type.hints", "rbs.ruby.parameter.type.hints", "rbs.ruby.attribute.type.hints", "rbs.ruby.global.variable.type.hints" ],
        "__option_id" : [ "js.param.hints.show.names.for.all.args", "vuejs.show.names.for.filters", "inheritors", "java.clear.expression.type", "variables.and.fields", "ruby.show.param.grouping", "js.only.show.names.for.tagged", "ruby.non.literals", "inferred.annotations", "non.paren.single.param", "js.only.show.names.for.pipes", "oc.clangd.namehints.construct.expr", "ruby.method.name.contains.parameter.name", "usages", "oc.clangd.namehints.non.const.references", "php.pass.by.reference", "java.method.name.contains.parameter.name", "java.multiple.params.same.type", "inferred.parameter.types", "java.enums", "js.only.show.names.for.all.args", "php.show.names.for.all.args", "oc.clangd.namehints.enums", "java.build.like.method", "function.returns", "java.new.expr", "java.simple.sequentially.numbered", "vuejs.show.names.for.all.args", "parameters.in.parens", "oc.clangd.namehints.macro.expr", "js.param.hints.show.names.for.tagged", "type.parameter.list", "external.annotations", "angular.show.names.for.all.args", "angular.show.names.for.pipes", "SHOW_PROPERTY_HINT", "SHOW_LOCAL_VARIABLE_HINT", "SHOW_FUNCTION_HINT", "SHOW_PARAMETER_TYPE_HINT", "SHOW_PARAMETER_HINT", "SHOW_LAMBDA_RETURN_EXPRESSION", "SHOW_LAMBDA_IMPLICIT_PARAMETER_RECEIVER", "SHOW_SUSPENDING_CALL", "R_HINT_OPTION_WRAP_DOTS", "sql.show.column.names.in.insert.values", "sql.show.column.names.in.select", "sql.show.column.names.for.asterisk", "implicit.null.result", "related.problems", "hints.type.property", "hints.type.variable", "hints.type.function.return", "hints.type.function.parameter", "hints.lambda.return", "hints.lambda.receivers.parameters", "go.struct.unnamed.struct.fields", "go.return.parameters", "sql.show.column.names.for.set.operations", "inner.join", "left.join", "full.join", "right.join", "python.show.hints.for.non-literal.arguments", "oc.clangd.namehints.array.indices", "variables", "obvious.types", "parameter.types", "lambdas", "return.types", "python.show.class.constructor.call.parameter.names" ]
      }
    }
  }, {
    "id" : "inline.completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "5"
    } ],
    "rules" : {
      "event_id" : [ "{enum:invoked|shown}" ],
      "event_data" : {
        "context_features.column_number" : [ "{regexp#integer}" ],
        "context_features.line_number" : [ "{regexp#integer}" ],
        "context_features.symbols_in_line_after_caret" : [ "{regexp#integer}" ],
        "context_features.symbols_in_line_before_caret" : [ "{regexp#integer}" ],
        "current_file" : [ "{util#current_file}" ],
        "event" : [ "{util#class_name}" ],
        "finish_type" : [ "{enum:SELECTED|CANCELED}" ],
        "lang" : [ "{util#lang}" ],
        "length" : [ "{regexp#integer}" ],
        "lines" : [ "{regexp#integer}" ],
        "outcome" : [ "{enum:EXCEPTION|CANCELED|SHOW|NO_SUGGESTIONS}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider" : [ "{util#class_name}" ],
        "request_id" : [ "{regexp#integer}" ],
        "showing_time" : [ "{regexp#integer}" ],
        "time_to_compute" : [ "{regexp#integer}" ],
        "time_to_show" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "inspection.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:global.inspection.finished}" ],
      "event_data" : {
        "build_reference_graph_duration_ms" : [ "{regexp#integer}" ],
        "number_of_files" : [ "{regexp#integer}" ],
        "number_of_inspections" : [ "{regexp#integer}" ],
        "total_duration_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "inspection.widget",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:highlight.level.changed}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "level" : [ "{enum:Errors_Only|None|All_Problems}", "{enum:SYNTAX|NONE|ALL}", "{enum:Syntax|Essential}" ]
      }
    }
  }, {
    "id" : "inspections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}", "{enum#__event_id}" ],
      "event_data" : {
        "amount" : [ "{regexp#integer}" ],
        "default" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "inspectionIds" : [ "{util#tool}" ],
        "inspectionSessions" : [ "{regexp#integer}" ],
        "inspection_enabled" : [ "{enum#boolean}" ],
        "inspection_id" : [ "{util#tool}" ],
        "lang" : [ "{util#lang}" ],
        "locked" : [ "{enum#boolean}" ],
        "option_index" : [ "{regexp#integer}" ],
        "option_name" : [ "{util#plugin_info}" ],
        "option_type" : [ "{enum:integer|boolean}" ],
        "option_value" : [ "{enum#boolean}", "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "project_level" : [ "{enum#boolean}" ],
        "scope" : [ "{enum:All|All Changed Files|Generated Files|Project Files and Vendor|Non-Project Files|Project Non-Source Files|Open Files|Project Files|Production|Scratches and Consoles|Project Source Files|Tests}", "{enum:custom}" ],
        "severity" : [ "{enum:INFORMATION|SERVER PROBLEM|INFO|WEAK WARNING|WARNING|ERROR}", "{enum:custom}", "{enum:TYPO}", "{enum:TEXT ATTRIBUTES}" ]
      },
      "enums" : {
        "__event_id" : [ "not.default.state", "setting.non.default.state", "used.profile", "profiles", "not.default.scope.and.severity", "inspections.reporting.problems" ]
      }
    }
  }, {
    "id" : "intentions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#class_name}", "{enum:called|shown|popup.delay}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "id" : [ "{util#class_name}" ],
        "inspection_id" : [ "{util#tool}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "position" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "introduce.parameter.inplace",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:settingsOnHide|started|settingsOnShow}" ],
      "event_data" : {
        "delegate" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "replaceAllOccurrences" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "introduce.variable.inplace",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:settingsOnHide|settingsOnShow|settingsChanged}" ],
      "event_data" : {
        "changed" : [ "{enum#boolean}" ],
        "final" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "varType" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "java.completion.contributors",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:insert.handle}" ],
      "event_data" : {
        "type_completion" : [ "{enum:SMART|BASIC}" ],
        "type_contributor" : [ "{enum:tag|static_qualifier}" ]
      }
    }
  }, {
    "id" : "jdk.downloader",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:selected|download|detected}" ],
      "event_data" : {
        "product" : [ "{enum:AdoptOpenJDK (HotSpot)|AdoptOpenJDK (OpenJ9)|Eclipse Temurin|IBM Semeru|Amazon Corretto|GraalVM|IBM JDK|JetBrains Runtime|BellSoft Liberica|Oracle OpenJDK|SAP SapMachine|Azul Zulu|Unknown}" ],
        "success" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "jps.cache",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2",
      "to" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum:download.through.notification|caches.downloaded}" ],
      "event_data" : {
        "download_binary_size" : [ "{regexp#integer}" ],
        "download_cache_size" : [ "{regexp#integer}" ],
        "duration" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "js.lens",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:usages.clicked|implementations.clicked|code.author.clicked}" ],
      "event_data" : {
        "location" : [ "{enum:interface|class|var_or_field|function|export_assignment|callback|other}" ]
      }
    }
  }, {
    "id" : "json.schema",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:completion.by.schema.invoked}" ],
      "event_data" : {
        "schemaKind" : [ "{enum:builtin|schema|user|remote}" ]
      },
      "enums" : {
        "_" : [ "json.schema.schema.completion", "json.schema.builtin.completion", "json.schema.user.completion", "json.schema.remote.completion" ]
      }
    }
  }, {
    "id" : "jupyter.connections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:jupyter.server.version}" ],
      "event_data" : {
        "managed" : [ "{enum#boolean}" ],
        "server_kind" : [ "{enum:Notebook|Hub}", "{enum:Lab}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "jupyter.remote.debugger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:used}" ]
    }
  }, {
    "id" : "keymap.changes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:keymap.change}" ],
      "event_data" : {
        "action_id" : [ "{util#action}" ],
        "imported" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "keymaps.name",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#keymaps}", "Custom_(Based_on_{enum#keymaps}_keymap)", "Custom_(Based_on_{enum#keymaps})", "{enum:ide.keymap}" ],
      "event_data" : {
        "based_on" : [ "{enum#keymaps}" ],
        "keymap_name" : [ "{enum#keymaps}" ]
      }
    }
  }, {
    "id" : "kotlin.compilation.error",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:error.happened}" ],
      "event_data" : {
        "error_id" : [ "{util#kotlin.compilation.error.id}" ]
      }
    }
  }, {
    "id" : "kotlin.k.two.metrics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:enabled}" ],
      "event_data" : {
        "is_k2_enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "kotlin.notebook",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "cell_execution_status" : [ "{enum:OK|COMPILATION_ERROR|RUNTIME_ERROR|ABORTED}" ],
        "cells_code_count" : [ "{regexp#integer}" ],
        "cells_count" : [ "{regexp#integer}" ],
        "cells_markdown_count" : [ "{regexp#integer}" ],
        "classpath_entries_count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "executed_cells_count" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "library_name" : [ "{util#used_library_name}" ],
        "output_types" : [ "{enum:ERROR|STREAM_ERROR|STREAM_TEXT|OTHER|PLAIN_TEXT|HTML|MARKDOWN|JSON|RASTER_IMAGE|VECTOR_IMAGE|SWING_LETS_PLOT|SWING_DATAFRAME}" ],
        "project_libraries_v1_included" : [ "{enum#boolean}" ],
        "project_libraries_v2_count" : [ "{regexp#integer}" ],
        "project_sources_v1_included" : [ "{enum#boolean}" ],
        "project_sources_v2_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "output.updated", "cell.result.received", "library.used", "notebook.opened", "kernel.restarted", "notebook.cells.all.run" ]
      }
    }
  }, {
    "id" : "kotlin.onboarding.j2k",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "build_system" : [ "{enum:GRADLE|MAVEN|MULTIPLE|UNKNOWN|JPS}" ],
        "build_system_version" : [ "{regexp#version}" ],
        "onboarding_session_id" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "project_sync.completed", "configure_kt_notification.clicked", "first_kt_file.created", "configured_kt_notification.shown", "project_sync.started", "configure_kt_window.shown", "project_sync.failed", "configure_kt.started", "first_kt_file.dialog_opened", "configure_kt_panel.shown", "configure_kt_notification.shown" ]
      }
    }
  }, {
    "id" : "kubernetes.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:k8sVersion}" ],
      "event_data" : {
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "kubernetes.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "navigation.gutter.label.container", "inspection.remove.duplicate.envvar", "completion.kind", "completion.label.key", "completion.schema" ]
      }
    }
  }, {
    "id" : "leftover.dirs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cleanup.complete|scan.scheduled|scan.started}" ],
      "event_data" : {
        "delay_days" : [ "{regexp#integer}" ],
        "groups" : [ "{regexp#integer}" ],
        "total_mb" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "libraryUsage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:library_used}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "library_name" : [ "{enum#library_names}", "{util#used_library_name}" ],
        "version" : [ "{regexp#version}", "{enum:unknown}" ]
      },
      "enums" : {
        "library_names" : [ "activemq", "activiti", "aeron", "akka-actor-typed", "akka-http", "akka-java", "akka-stream", "algebird", "allure1", "allure2", "androidx-compose", "apache-bval", "apache-camel", "apache-cayenne", "apache-collections", "apache-deltaspike", "apache-deltaspike-data", "apache-dubbo", "apache-flink", "apache-hc", "apache-http", "apache-ignite", "apache-mina", "apache-pdfbox", "apache-poi", "apache-pulsar", "apache-rocketmq", "apache-shiro", "apache-spark", "apache-thrift", "apache-tiles", "apollo", "appium", "armeria", "arquillian", "arrowkt", "asm", "aspectj", "async-http-client", "atlas", "avro", "aws-s3", "aws-sdk", "aws-sqs", "awspring", "axonframework", "axoniq", "blade", "breeze", "bytebuddy", "caliban", "camunda", "cats", "cats-effect", "chimney", "chisel3", "circe", "citrus", "clikt", "coherence", "consul", "corda", "coroutineworker", "crashkios", "cucumber", "dagger", "datanucleus-jpa", "debezium", "decompose", "deequ", "delta-core", "documents4j", "dokka", "doobie", "doodle", "drools", "dropwizard", "easymock", "ebean", "eclipse-collections", "eclipselink", "eclipselink-jpa", "ehcache", "elastic4s", "elasticmq", "eureka", "exposed", "fastutil", "finagle", "finatra", "firebase-kotlin-sdk", "flexy-pool", "flowable", "fluentlenium", "flyway", "freemarker", "fritz2", "fs2", "fuel", "gatling", "gauge-java", "geb", "google-cloud-pubsub", "google-http-java-client", "gorm", "grails", "graphql-java", "graphql-kotlin", "groovy", "gson", "guice", "gwt", "h2", "hazelcast", "helidon", "hexagonkt", "hibernate", "hibernate-envers", "hibernate-reactive", "hibernate-validator", "hikaricp", "htmlelements", "http4k", "http4s", "hystrix", "infinispan", "io.grpc", "itextpdf", "jackson", "jaegertracing", "jakarta-batch", "jakarta-cdi", "jakarta-ejb", "jakarta-jms", "jakarta-jpa", "jakarta-jsf", "jakarta-nosql", "jakarta-rs", "jakarta-validation", "jakarta-websocket", "jakarta-ws", "java-swing", "java-websocket", "javafx", "javalin", "javax-batch", "javax-cdi", "javax-ejb", "javax-jms", "javax-jpa", "javax-jsf", "javax-rs", "javax-validation", "javax-websocket", "jbehave", "jbpm", "jdbi", "jdi-light", "jedis", "jetbrains-annotations", "jetbrains-compose", "jhipster", "jmockit", "jodd-db", "jooby", "jooq", "js-externals", "json4s", "jsoniter-scala", "jsonpath", "jsoup", "junit", "junit5", "kafka", "karate", "klaxon", "klock", "kodein", "kodein-db", "kodein-di", "koin", "korge", "kotest", "kotless", "kotlin", "kotlin-material-ui", "kotlin-test", "kotlinx-benchmark", "kotlinx-browser", "kotlinx-cli", "kotlinx-collections-immutable", "kotlinx-coroutines", "kotlinx-datetime", "kotlinx-html", "kotlinx-io", "kotlinx-serialization", "ktlint", "ktor", "ktorm", "kvision", "lagom", "laminar", "liquibase", "log4j", "logback", "lombok", "lucene", "macwire", "magnolia", "mapstruct", "micrometer", "micronaut", "microprofile", "mleap", "mockito", "mockk", "mockserver", "moko-mvvm", "monix", "monocle", "multik", "multiplatform-settings", "munit", "mvikotlin", "mybatis", "napier", "netty", "npm-publish", "okhttp3", "okio", "opencv", "openfeign", "openjpa", "opentelemetry", "opentracing", "optaplanner", "osgi", "play", "play-json", "playwright-java", "protobuf", "pureconfig", "quarkus", "quarkus-qute", "quartz", "querydsl", "quill", "r2dbc", "rabbitmq", "rabbitmq-java-client", "reactor", "reaktive", "refined", "resilience4j", "restassured", "retrofit2", "robotframework", "rsocket-java", "rsocket-kotlin", "rxdownload", "rxjava", "rxjava3", "rxkotlin", "sangria", "scala", "scala-async", "scalacheck", "scalafx", "scalalikejdbc", "scalameta", "scalamock", "scalapb", "scalatest", "scalatra", "scalaz", "scio", "selenide", "selenium", "serenity", "shapeless", "skunk", "slf4j", "slick", "smallrye-mutiny", "spark", "specs2", "spek", "spire", "spock", "spring-amqp", "spring-batch", "spring-boot", "spring-cloud", "spring-cloud-gateway", "spring-cloud-kubernetes", "spring-cloud-openfeign", "spring-cloud-retrofit", "spring-cloud-stream", "spring-core", "spring-data-commons", "spring-data-hadoop", "spring-data-jdbc-ext", "spring-data-jpa", "spring-data-mongo", "spring-data-neo4j", "spring-data-r2dbc", "spring-data-rest", "spring-data-solr", "spring-graphql", "spring-integration", "spring-integration-amqp", "spring-kafka", "spring-osgi", "spring-security", "spring-security-oauth2", "spring-session", "spring-web", "spring-webflow", "spring-webflux", "spring-websocket", "spring-ws", "springfox", "sqldelight", "stately", "streamex", "struts2", "sttp", "swagger-v2", "swagger-v3", "tapestry5", "tapir", "testcontainers", "testng", "thymeleaf", "tornadofx", "twitter-server", "twitter-util", "unfiltered", "unirest", "upickle", "utest", "vaadin-flow", "vavr", "velocity", "vertx", "webtau", "weld", "wiremock", "xmlgraphics", "zio", "zio-test", "zipkin2", "zookeeper", "zuul" ]
      }
    }
  }, {
    "id" : "lifecycle",
    "builds" : [ {
      "from" : "191.4738"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "closing_duration_ms" : [ "{regexp#integer}" ],
        "command_line" : [ "{enum#boolean}" ],
        "debug_agent" : [ "{enum#boolean}" ],
        "dispose_duration_ms" : [ "{regexp#integer}" ],
        "duration_grouped" : [ "{regexp#integer}", "{regexp#integer}+", "{regexp#integer}s", "{regexp#integer}s+" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "duration_s" : [ "{regexp#integer}" ],
        "eap" : [ "{enum#boolean}" ],
        "error" : [ "{util#class_name}" ],
        "error_frames" : [ "{util#method_name}" ],
        "error_hash" : [ "{regexp#integer}" ],
        "error_size" : [ "{regexp#integer}" ],
        "headless" : [ "{enum#boolean}" ],
        "internal" : [ "{enum#boolean}" ],
        "mapping_failed" : [ "{enum#boolean}" ],
        "memory_error_kind" : [ "{enum#__memory_error_kind}", "{enum:direct_buffers}" ],
        "mode" : [ "{enum:new|same|attach}" ],
        "oom" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "project_tab" : [ "{enum#boolean}" ],
        "restart" : [ "{enum#boolean}" ],
        "save_duration_ms" : [ "{regexp#integer}" ],
        "test" : [ "{enum#boolean}" ],
        "time_ms" : [ "{regexp#integer}" ],
        "too_many_errors" : [ "{enum#boolean}" ],
        "total_duration_ms" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "ide.error", "ide.freeze", "ide.start", "ide.close", "project.opening.finished", "project.opened", "project.closed", "frame.activated", "frame.deactivated", "project.module.attached", "project.frame.selected", "ide.crash.detected", "protocol.open.command.handled", "ide.deadlock.detected", "project.closed.and.disposed" ],
        "__memory_error_kind" : [ "heap", "min_heap", "perm_gen", "metaspace", "code_cache" ]
      }
    }
  }, {
    "id" : "light.edit",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:autosave.mode|open.file|open.in.project}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "open_place" : [ "{enum#__open_place}" ],
        "project_status" : [ "{enum:Open|Existing|New}" ]
      },
      "enums" : {
        "__open_place" : [ "LightEditOpenAction", "WelcomeScreenOpenAction", "CommandLine", "DragAndDrop", "RecentFiles" ]
      }
    }
  }, {
    "id" : "line.profiler",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:navigation.popup.shown|navigated.via.line.marker}" ],
      "event_data" : {
        "anonymous_id" : [ "{regexp#hash}" ],
        "navigation_choice_count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "live.templates",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#live_template}", "{enum:started}" ],
      "event_data" : {
        "changedByUser" : [ "{enum#boolean}" ],
        "group" : [ "{util#live_template_group}", "{util#live_template}" ],
        "key" : [ "{util#live_template}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "llm.action.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "documentation_invoke_state" : [ "{enum:INLAY_BUTTON|INTENTION|INSPECTION}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "lang_detection_mechanism" : [ "{enum:JET_ENRY}" ],
        "lang_pasted_snippet" : [ "{enum:C|C_SHARP|C_PLUSPLUS|COFFEESCRIPT|CSS|DART|DM|ELIXIR|GO|GROOVY|HTML|JAVA|JAVASCRIPT|KOTLIN|OBJECTIVE_C|PERL|PHP|POWERSHELL|PYTHON|RUBY|RUST|SCALA|SHELL|SWIFT|TYPESCRIPT|UNKNOWN}" ],
        "number_of_files" : [ "{regexp#integer}" ],
        "pasted_snippet_length" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "score" : [ "{enum:YES|NO}" ],
        "state" : [ "{enum:SUCCEED|ERROR|CANCEL}" ],
        "target" : [ "{util#class_name}" ],
        "time_to_show" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "completion.request.started", "edit.request.sent", "completion.request.finished", "edit.request.score", "name.suggestion.score", "name.suggestion.request", "documentation.generation.sent", "edit.request.finished", "documentation.generation.score", "documentation.generation.finished", "edit.request.started", "documentation.generation.started", "commit.generation.sent", "commit.generation.score", "name.suggestion.started", "name.suggestion.finished", "completion.request.sent", "completion.request.score", "commit.generation.started", "commit.generation.finished", "name.suggestion.show", "name.suggestion.response", "language.conversion.finished", "language.conversion.started", "language.conversion.score" ]
      }
    }
  }, {
    "id" : "llm.budget",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:feature.budget.sent|feature.budget.received}" ],
      "event_data" : {
        "feature" : [ "{util#class_name}" ],
        "number_of_characters" : [ "{regexp#integer}" ],
        "number_of_characters_system" : [ "{regexp#integer}" ],
        "number_of_tokens" : [ "{regexp#integer}" ],
        "number_of_tokens_system" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "llm.chat",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "chat_kind" : [ "{util#class_name}" ],
        "chat_session_id" : [ "{regexp#date_short_hash}" ],
        "dialog.id" : [ "{regexp#integer}" ],
        "dialog.number_of_disliked_message" : [ "{regexp#integer}" ],
        "dialog.number_of_liked_message" : [ "{regexp#integer}" ],
        "dialog.number_of_messages" : [ "{regexp#integer}" ],
        "dialog.source_action" : [ "{util#llm_parameters}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "is_collapsed" : [ "{enum#boolean}" ],
        "message_id" : [ "{regexp#short_hash}" ],
        "number_of_characters" : [ "{regexp#integer}" ],
        "number_of_disliked_message" : [ "{regexp#integer}" ],
        "number_of_liked_message" : [ "{regexp#integer}" ],
        "number_of_lines" : [ "{regexp#integer}" ],
        "number_of_messages" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "rating" : [ "{enum:None|Like|Dislike}" ],
        "result" : [ "{enum:SUCCEED|WAIT_LIST|FAILED|EXCEPTION}" ],
        "source" : [ "{enum:CHAT_LOGIN_BUTTON|CHAT_RETRY_BUTTON|CHAT_WAIT_LIST|SETTINGS_PAGE|SETTINGS_PAGE_WAIT_LIST|NOTIFICATION|FULL_LINE}" ],
        "source_action" : [ "{enum:UNKNOWN|NEW_CHAT|EXPLAIN_CODE_INTENTION|FIND_PROBLEMS_INTENTION|REFACTOR_THIS|UNKNOWN_CHAT_INTENTION|LOAD_STATE|RUNTIME_ERROR_EXPLANATION|UNITY_CREATE_NEW_FILE|UNITY_GENERATE_CODE}", "{enum:EXPLAIN_COMMIT}", "{enum:GENERATE_CODE_INPLACE}", "{enum:ERROR_MESSAGE}", "{enum:CUSTOM_CHAT|PROMPT_LIBRARY}" ],
        "start_time" : [ "{regexp#integer}" ],
        "user_message_id" : [ "{regexp#short_hash}" ]
      },
      "enums" : {
        "__event_id" : [ "editUsageMessageFinished", "codeSnippetPresentationChanged", "editUserMessageStarted", "editUserMessageCancelled", "newChatCreated", "messageSent", "codeCopied", "allChatsClicked", "messageReceived", "messageReacted", "messageReceivingCancelled", "assistantChatSummarySent", "all.chats.clicked", "code.snippet.presentation.changed", "edit.usage.message.finished", "message.reacted", "assistant.chat.summary.sent", "edit.user.message.cancelled", "chat.from.history.opened", "code.copied", "edit.user.message.cancelled.with.mouse", "message.received", "edit.user.message.started", "code.inserted", "message.sent", "new.chat.created", "message.receiving.cancelled", "code.snippet.inserted.at.caret", "send.feedback.clicked", "log.in.to.jetbrains.ai", "log.out.from.jetbrains.ai" ]
      }
    }
  }, {
    "id" : "llm.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:log.in.state|name.suggestion.enabled|generate.commit.summary.enabled}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "state" : [ "{enum:Unknown|NoAuth|InProgress|WaitList|Authed}" ]
      }
    }
  }, {
    "id" : "login",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "activity_id" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_requires_license" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "license" : [ "{enum:none|trial|student|professional|open_source}" ],
        "link_copy" : [ "{enum#boolean}" ],
        "logged_in" : [ "{enum#boolean}" ],
        "login_provider" : [ "{enum:jba|google|github|gitlab|bitbucket}" ],
        "newsletter" : [ "{enum#boolean}" ],
        "onboarding" : [ "{enum#boolean}" ],
        "plugins_require_licenses" : [ "{enum#boolean}" ],
        "session_time_ms" : [ "{regexp#integer}" ],
        "source" : [ "{enum:login_dialog|licenses_user_info|licenses_new_license|licenses_trial}", "{enum:LicenseDialogLink}" ],
        "successful" : [ "{enum#boolean}" ],
        "token_check" : [ "{enum#boolean}" ],
        "token_input" : [ "{enum#boolean}" ],
        "troubles_pressed" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "exit", "licenses.dialog.shown", "request.trial", "continue", "browser.login", "buy.license", "licenses.dialog.closed", "manual.login", "browser.register" ]
      }
    }
  }, {
    "id" : "markdown.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:runner.executed}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "runner" : [ "{util#class_name}" ],
        "type" : [ "{enum:BLOCK|LINE}" ]
      }
    }
  }, {
    "id" : "maven.import",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "after_apply_duration_ms" : [ "{regexp#integer}" ],
        "attempts" : [ "{regexp#integer}" ],
        "before_apply_duration_ms" : [ "{regexp#integer}" ],
        "collect_folders_duration_ms" : [ "{regexp#integer}" ],
        "config_duration_ms" : [ "{regexp#integer}" ],
        "config_modules_duration_ms" : [ "{regexp#integer}" ],
        "configurator_class" : [ "{util#class_name}" ],
        "duration_in_background_ms" : [ "{regexp#integer}" ],
        "duration_in_write_action_ms" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "duration_of_bridges_commit_ms" : [ "{regexp#integer}" ],
        "duration_of_bridges_creation_ms" : [ "{regexp#integer}" ],
        "duration_of_workspace_update_call_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "importer_class" : [ "{util#class_name}" ],
        "number_of_modules" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "total_duration_ms" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "hasUserModifiedImportedLibrary", "hasUserAddedModuleDependency", "hasUserAddedLibraryDependency", "importer_run", "configurator_run", "legacy_import.started", "workspace_folders_update.started", "workspace_import.legacy_importers.finished", "workspace_import.legacy_importers.started", "workspace_import.populate.finished", "workspace_import.configurator_run", "workspace_import.commit.finished", "legacy_import.finished", "legacy_import.create_modules.started", "legacy_import.importers.started", "legacy_import.create_modules.finished", "workspace_import.started", "legacy_import.delete_obsolete.started", "workspace_import.commit.started", "workspace_import.finished", "workspace_import.populate.started", "legacy_import.importers.finished", "legacy_import.delete_obsolete.finished", "workspace_folders_update.finished", "workspace_commit", "post_import_tasks_run", "workspace_import.legacy_importers.stats" ]
      }
    }
  }, {
    "id" : "mermaid.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:diagrams.injected|diagram.used}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "type" : [ "{enum:Pie|Journey|Flowchart|Sequence|Class|State|EntityRelationship|Gantt|Requirement|GitGraph|C4|Mindmap|Timeline|Quadrant|ZenUml|Sankey}" ],
        "types" : [ "{enum:Pie|Journey|Flowchart|Sequence|Class|State|EntityRelationship|Gantt|Requirement|GitGraph|C4|Mindmap|Timeline|Quadrant|ZenUml|Sankey}" ]
      }
    }
  }, {
    "id" : "microservices.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{enum:find_usages|open_endpoints|generate_request|generate_openapi|generate_test}", "{enum:show_secured_urls|show_security_matchers}" ],
        "endpoints_provider" : [ "{util#endpoint_provider_name}" ],
        "filter_id" : [ "{enum:framework|module|type}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "endpoints.groups.requested", "url.path.reference.variants", "url.path.segment.navigate", "mq.reference.variants", "mq.reference.navigate", "url.path.inlay.actions", "endpoints.tab.openapi.activated", "endpoints.tab.http.client.activated", "endpoints.list.filtered", "url.path.inlay.action.triggered" ]
      }
    }
  }, {
    "id" : "ml.completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:decorating.settings.changed|ranking.settings.changed|decorating.opinion.provided}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "enabled_by_default" : [ "{enum#boolean}" ],
        "opinion" : [ "{enum:LIKE|DISLIKE|NEUTRAL}" ],
        "ranker_id" : [ "{util#ml_completion_ranker_id}" ],
        "using_language_checkbox" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "move.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:handler.invoked|move.files.or.directories}" ],
      "event_data" : {
        "handler" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "new.project.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "framework" : [ "{util#framework}" ],
        "generator_id" : [ "{util#class_name}" ],
        "gradle-kotlin-dsl" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "projectType" : [ "{util#project_type}" ]
      },
      "enums" : {
        "__event_id" : [ "finish", "attempt", "finish.add.framework", "attempt.add.framework", "project.generated", "project.created" ]
      }
    }
  }, {
    "id" : "new.project.wizard.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "add_sample_code" : [ "{enum#boolean}" ],
        "add_sample_onboarding_tips" : [ "{enum#boolean}" ],
        "build_system" : [ "{enum:IntelliJ|Gradle|Maven|SBT|other}", "{enum:intellij|gradle|maven|sbt|other}" ],
        "build_system_dsl" : [ "{enum:groovy|kotlin|other}" ],
        "build_system_parent" : [ "{enum#boolean}" ],
        "build_system_sdk_version" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "generator" : [ "{util#class_name}", "{util#npw_generator}" ],
        "git" : [ "{enum#boolean}" ],
        "gradle_distribution" : [ "{enum:BUNDLED|DEFAULT_WRAPPED|WRAPPED|LOCAL}" ],
        "gradle_dsl" : [ "{enum:KOTLIN|GROOVY}" ],
        "gradle_version" : [ "{util#npw_gradle_version}" ],
        "groovy_sdk_type" : [ "{enum:maven|local|null|other}", "{enum:Maven|Local|None}" ],
        "hits" : [ "{regexp#integer}" ],
        "input_mask" : [ "{regexp#integer}" ],
        "language" : [ "{util#class_name}", "{enum#__language}", "{enum:Java|Kotlin|Groovy|JavaScript|HTML|Python|PHP|Ruby|Go|Scala|Rust|other}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_selected" : [ "{enum:Go|Ruby|PHP|Python|Scala}", "{enum#__plugin_selected}", "{enum:Rust}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "project_created" : [ "{enum#boolean}" ],
        "screen" : [ "{regexp#integer}" ],
        "typed_chars" : [ "{regexp#integer}" ],
        "use_compact_project_structure" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#version}" ],
        "wizard_session_id" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "project.location.changed", "navigate.prev", "project.name.changed", "navigate.help", "git.changed", "select.custom.template", "create.git.repo", "generator.finished", "select.language", "wizard.dialog.open", "project.created", "search", "language.finished", "navigate.next", "build.system.add.sample.code.changed", "groovy.lib.changed", "groovy.lib.finished", "build.system.sdk.changed", "build.system.module.name.changed", "build.system.dsl.changed", "build.system.content.root.changed", "build.system.group.id.changed", "build.system.changed", "build.system.artifact.id.changed", "build.system.module.file.location.changed", "build.system.sdk.finished", "build.system.finished", "plugin.selected", "add.plugin.clicked", "generator.selected", "wizard.dialog.finish", "build.system.version.changed", "build.system.parent.changed", "build.system.add.sample.onboarding.tips.changed", "build.system.parent.finished", "git.finished", "gradle.version.finished", "gradle.dsl.finished", "gradle.distribution.finished", "gradle.version.changed", "gradle.dsl.changed", "gradle.distribution.changed", "build.system.use.compact.project.structure.changed" ],
        "__language" : [ "Scala", "Go", "PHP", "Ruby", "Python", "Java", "JavaScript", "HTML", "Groovy", "Kotlin", "python", "other", "java", "groovy", "scala", "kotlin", "go", "php", "html", "javascript", "ruby" ],
        "__plugin_selected" : [ "python", "other", "java", "groovy", "scala", "kotlin", "go", "php", "html", "javascript", "ruby", "Java", "JavaScript", "HTML", "Groovy", "Kotlin" ]
      }
    }
  }, {
    "id" : "new.ui.onboarding",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "last_step_duration_ms" : [ "{regexp#integer}" ],
        "reason" : [ "{enum:SKIP_ALL|ESCAPE_PRESSED|PROJECT_CLOSED}" ],
        "starting_place" : [ "{enum:WELCOME_DIALOG|CONFIGURE_NEW_UI_TOOLWINDOW}" ],
        "step_id" : [ "{util#newUiOnboardingStepId}" ]
      },
      "enums" : {
        "__event_id" : [ "started", "welcome.dialog.shown", "stopped", "welcome.dialog.skip.clicked", "step.started", "step.finished", "finished", "link.clicked" ]
      }
    }
  }, {
    "id" : "node.packages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:node_package}" ],
      "event_data" : {
        "name" : [ "{util#node.packages}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "notification.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:changed}" ],
      "event_data" : {
        "display_type" : [ "{enum:NONE|BALLOON|STICKY_BALLOON|TOOL_WINDOW}" ],
        "notification_group" : [ "{util#notification_group}" ],
        "play_sound" : [ "{enum#boolean}" ],
        "read_aloud" : [ "{enum#boolean}" ],
        "should_log" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "notifications",
    "builds" : [ ],
    "versions" : [ {
      "from" : "40"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{util#class_name}", "{util#action}" ],
        "additional.display_id" : [ "{enum#notification_id}", "{util#notification_display_id}" ],
        "class" : [ "{util#class_name}" ],
        "display_id" : [ "{util#notification_display_id}" ],
        "display_type" : [ "{enum:BALLOON|STICKY_BALLOON|TOOL_WINDOW}", "{enum:NONE}" ],
        "id" : [ "{regexp:\\d+.\\d+}" ],
        "is_expandable" : [ "{enum#boolean}" ],
        "notification_group" : [ "{util#notification_group}", "{enum:JavaScript_Debugger_Console_URL_Starter|New_JVM_Backend|New JVM Backend}" ],
        "notification_place" : [ "{enum:BALLOON|EVENT_LOG}", "{enum:TOOL_WINDOW}", "{enum:ACTION_CENTER}" ],
        "parent" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "severity" : [ "{enum:ERROR|INFORMATION|WARNING}" ]
      },
      "enums" : {
        "__event_id" : [ "action.invoked", "balloon.collapsed", "balloon.expanded", "closed.by.user", "event.log.balloon.shown", "hyperlink.clicked", "logged", "settings.clicked", "shown" ],
        "notification_id" : [ "ignored.to.exclude.synchronization.notification", "externally.added.files.notification", "project.configuration.files.added.notification", "manage.ignore.files.notification", "github.missing.default.account", "github.pull.request.cannot.set.tracking.branch", "github.clone.unable.to.create.destination.dir", "github.clone.unable.to.find.destination", "github.open.in.browser.file.is.not.under.repo", "github.open.in.browser.cannot.get.last.revision", "github.rebase.success", "github.gist.cannot.create", "github.pull.request.cannot.load.branches", "github.pull.request.cannot.collect.additional.data", "github.pull.request.cannot.load.forks", "github.pull.request.failed.to.add.remote", "github.pull.request.push.failed", "github.pull.request.creation.error", "github.pull.request.cannot.collect.diff.data", "github.pull.request.cannot.find.repo", "github.pull.request.created", "github.pull.request.cannot.process.remote", "github.pull.request.no.current.branch", "github.rebase.cannot.validate.upstream.remote", "github.rebase.upstream.is.own.repo", "github.rebase.cannot.get.user.info", "github.rebase.cannot.retrieve.upstream.info", "github.rebase.cannot.configure.upstream.remote", "github.rebase.repo.not.found", "github.rebase.cannot.load.repo.info", "github.rebase.repo.is.not.a.fork", "github.share.cannot.find.git.repo", "github.share.cannot.create.repo", "github.share.project.successfully.shared", "github.share.empty.repo.created", "github.share.project.created.init.commit.failed", "github.share.init.push.failed", "github.gist.created", "github.git.repo.init.error", "unknown", "hg.update.unresolved.conflicts.error", "git.merge.local.changes.detected", "vcs.patch.apply.rollback.failed", "hg.qrefresh.error", "git.revert.abort.failed", "git.fetch.success", "git.branch.operation.success", "git.pull.failed", "hg.merge.warning", "vcs.commit.finished.with.warnings", "vcs.shelve.successful", "git.merge.reset.error", "git.stage.commit.successful", "git.clone.unable.to.create.destination.dir", "git.rebase.cannot.continue", "vcs.commit.canceled", "git.branch.rename.rollback.success", "hg.merge.error", "hg.rebase.error", "git.update.no.tracked.branch.error", "git.rebase.update.project.error", "hg.tag.creation.error", "git.local.changes.not.restored", "hg.clone.destination.error", "vcs.shelve.failed", "hg.merging.with.ancestor.skipped", "vcs.patch.apply.aborted", "hg.pushed.successfully", "git.remote.branch.deletion.success", "hg.repository.created", "git.tag.created", "hg.qpop.completed.with.errors", "git.branch.operation.error", "hg.compare.with.branch.error", "git.fetch.error", "hg.nothing.to.push", "git.rebase.cannot.abort", "hg.unsupported.extensions", "vcs.patch.partially.applied", "git.branches.update.successful", "hg.exception.during.merge.commit", "git.init.failed", "git.rebase.not.allowed", "hg.qfold.error", "hg.qfinish.error", "git.merge.abort.success", "git.init.error", "git.rebase.commit.edit.undo.error.repo.changed", "git.reset.failed", "git.update.detached.head.error", "git.create.branch.rollback.successful", "git.branch.checkout.failed", "git.delete.branch.on.merge", "vcs.root.added", "git.stash.failed", "vcs.patch.copied.to.clipboard", "git.merge.abort.failed", "vcs.could.not.compare.with.branch", "git.reset.successful", "git.branch.creation.failed", "git.branch.deletion.rollback.error", "hg.graft.continue.error", "hg.merge.exception", "git.rebase.abort.succeeded", "hg.debugancestor.error", "hg.log.command.execution.error", "hg.unable.to.run.executable", "hg.bookmark.error", "git.rebase.commit.edit.undo.error", "git.unstash.with.unresolved.conflicts", "git.unstash.failed", "hg.qgoto.error", "hg.clone.error", "git.clone.failed", "git.rebase.abort.failed", "hg.remote.auth.error", "vcs.uncommitted.changes.saving.error", "git.update.nothing.to.update", "git.merge.rollback.error", "hg.qnew.error", "git.checkout.success", "git.update.error", "git.cannot.resolve.conflict", "git.unstash.with.conflicts", "space.sharing.not.finished", "hg.rebase.continue.error", "git.checkout.rollback.error", "git.reset.partially.failed", "git.remote.branch.deletion.error", "hg.qrename.error", "hg.unsupported.version", "hg.repo.creation.error", "space.git.repo.init.error", "git.tag.remote.deletion.error", "hg.push.error", "vcs.cherry.pick.error", "git.repository.created", "vcs.roots.invalid", "git.stash.local.changes.detected", "git.could.not.compare.with.branch", "git.rebase.not.started", "space.project.shared.successfully", "vcs.compare.failed", "vcs.patch.apply.success.applied", "hg.qdelete.error", "hg.branch.creation.error", "git.cherry.pick.abort.failed", "git.rebase.rollback.failed", "git.merge.error", "vcs.patch.apply.cannot.find.patch.file", "git.rebase.commit.edit.undo.error.protected.branch", "git.rebase.successful", "vcs.commit.failed", "git.could.not.load.changes.of.commit", "git.unresolved.conflicts", "vcs.patch.apply.new.files.error", "hg.rebase.abort.error", "git.revert.abort.success", "git.stage.commit.error", "git.tag.not.created", "git.create.branch.rollback.error", "git.fix.tracked.not.on.branch", "vcs.shelve.deletion.undo", "hg.tag.creation.failed", "git.tag.deletion.rollback.error", "hg.update.error", "vcs.roots.registered", "hg.status.command.error", "hg.qimport.error", "vcs.patch.apply.not.patch.type.file", "vcs.commit.finished", "git.could.not.save.uncommitted.changes", "hg.rename.failed", "git.branch.rename.rollback.failed", "git.cherry.pick.abort.success", "hg.qpop.error", "git.conflict.resolving.error", "git.merge.failed", "hg.pull.error", "git.unstash.patch.applied", "hg.bookmark.name.is.empty", "hg.pull.auth.required", "git.rebase.abort", "vcs.patch.already.applied", "git.checkout.new.branch.operation.rollback.error", "hg4idea.changesets.error", "vcs.patch.creation.failed", "hg.graft.error", "hg.qpush.error", "git.checkout.new.branch.operation.rollback.successful", "github.rebase.remote.origin.not.found", "github.rebase.account.not.found", "github.rebase.multi.repo.not.supported", "rebase.error.failed.to.match.gh.repo", "git.branch.set.upstream.failed", "git.log.could.not.load.changes.of.commit", "vcs.project.partially.updated", "vcs.shelf.undo.delete", "vcs.branch.operations.are.executed.on.all.roots", "git.rebase.collect.updated.changes.error", "git.push.not.supported", "vcs.inactive.ranges.damaged", "git.commit.cancelled", "git.fetch.result", "git.tag.remote.deletion.success", "git.fetch.cancelled", "git.fetch.details", "git.project.updated", "git.all.files.are.up.to.date", "git.fetch.result.error", "git.project.partially.updated", "git.push.result", "git.branch.deleted", "git.tag.restored", "git.files.updated.after.merge", "vcs.project.update.finished", "git.tag.deleted", "git.commit.edit.success", "space.other", "gradle.jvm.invalid", "gradle.jvm.configured", "gradle.configuration.error", "sh.update.shellcheck.error", "sh.update.shellcheck.success", "sh.update.formatter.success", "sh.install.formatter.error", "sh.update.formatter.error", "sh.install.formatter", "sh.update.shellcheck", "sh.update.formatter", "sh.install.formatter.success", "git.bad.executable", "git.init.stage.failed", "git.rebase.failed", "diff.external.too.many.selected", "ignored.to.exclude.not.found", "git.rebase.stopped.for.editing", "vcs.cannot.load.annotations", "untracked.files.overwritten", "diff.external.cant.load.changes", "vcs.obsolete.plugin.unbundled", "vcs.suggested.plugin.install.failed", "diff.merge.intenral.error", "git.rebase.stopped.due.to.conflicts", "vcs.commit.checks.failed", "git.tags.loading.failed", "vcs.commit.checks.only.failed", "vcs.add.unversioned.error", "vcs.post.commit.checks.failed", "grazie.pro.advertisement", "git.open.in.browser.error", "git.ignore.file.generation.error", "review.branch.checkout.failed", "space.merge.request.creation.failed", "space.merge.request.created", "space.git.repo.foldernotfound", "git.stage.operation.error", "vcs.log.navigation.error", "vcs.log.commit.not.found", "file.history.load.details.error", "vcs.log.fatal.error", "vcs.log.not.available" ]
      }
    }
  }, {
    "id" : "onboarding.tips.statistics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:tips.disabled|promoted.action.used|hide.disable.proposal|onboarding.tips.installed}" ],
      "event_data" : {
        "action_id" : [ "{enum:SearchEverywhere|ShowIntentionActions|Run|Debug|ToggleLineBreakpoint}", "{enum:DebugClass|RunClass}" ],
        "first_time_used" : [ "{enum#boolean}" ],
        "projects_with_tips" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "os.file.type.association",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:os.association.created}" ],
      "event_data" : {
        "file_type" : [ "{util#file_type}" ]
      }
    }
  }, {
    "id" : "os.linux.wm",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:xdg.current.desktop}" ],
      "event_data" : {
        "value" : [ "{enum#__value}" ]
      },
      "enums" : {
        "_" : [ "KDE", "Gnome", "Ubuntu_Gnome", "Budgie_Gnome", "GNOME_Flashback_Unity", "GNOME_Flashback_Gnome", "pop_GNOME", "Awesome_GNOME", "X-Cinnamon", "Unity", "Unity7", "XFCE", "XDG_CURRENT_DESKTOP_is_empty", "i3", "MATE", "Pantheon", "Deepin", "LXDE", "LXQt", "Enlightenment", "UKUI", "X-Generic", "ICEWM", "Fluxbox", "default.desktop", "Unknown" ],
        "__value" : [ "LG3D", "KDE", "Gnome", "Gnome_Shell", "Gnome_Classic", "Ubuntu_Gnome", "Budgie_Gnome", "GNOME_Flashback_Unity", "GNOME_Flashback_Gnome", "GNOME_Flashback", "pop_GNOME", "Awesome_GNOME", "X-Cinnamon", "Unity", "Unity7", "XFCE", "XDG_CURRENT_DESKTOP_is_empty", "i3", "MATE", "Pantheon", "Deepin", "LXDE", "LXQt", "Enlightenment", "UKUI", "X-Generic", "ICEWM", "Fluxbox", "default.desktop", "Unknown", "empty" ]
      }
    }
  }, {
    "id" : "package.management.ui",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:upgrade|uninstall|install|browseAvailablePackages}" ],
      "event_data" : {
        "service" : [ "{enum#service_name}" ]
      },
      "enums" : {
        "service_name" : [ "Node.js", "Python", "Bower" ]
      }
    }
  }, {
    "id" : "performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "cold_start" : [ "{enum#boolean}" ],
        "cpu_time_ms" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "gc_time_ms" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "place" : [ "{util#place}" ],
        "power_save_mode" : [ "{enum#boolean}" ],
        "power_source" : [ "{enum:UNKNOWN|AC|BATTERY}" ],
        "swap_load" : [ "{regexp#integer}" ],
        "system_cpu_load" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "ui.latency", "ui.lagging", "heartbeat", "popup.latency", "mainmenu.latency" ]
      }
    }
  }, {
    "id" : "php.check.reg.exp",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:check.regexp.tooltip.shown|run.check.regexp.intention}" ]
    }
  }, {
    "id" : "php.composer.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "configured" : [ "{enum#boolean}" ],
        "configured_subprojects" : [ "{regexp#integer}" ],
        "constraint" : [ "{enum:>|>=|-|~|^|=}" ],
        "custom_vendor_dir" : [ "{enum#boolean}" ],
        "default" : [ "{enum#boolean}" ],
        "dev" : [ "{enum#boolean}" ],
        "interpreterType" : [ "{enum#__interpreterType}" ],
        "json_in_subdirs" : [ "{regexp#integer}" ],
        "libs" : [ "{enum#boolean}" ],
        "max_depth" : [ "{regexp#integer}" ],
        "name" : [ "{util#composer_package}" ],
        "php_versions" : [ "{regexp#version}" ],
        "repository_type" : [ "{enum#__repository_type}" ],
        "settings" : [ "{enum:NOT_INITIALIZED|SYNCHRONIZE|DONT_SYNCHRONIZE}" ],
        "state" : [ "{enum:configured|foundInBaseDir|foundOutOfBaseDir|none}" ],
        "type" : [ "{enum:unknown|ExecutableComposerExecution|PharComposerExecution|ComposerRemoteInterpreterExecution}" ],
        "version" : [ "{enum:any|master|branch|undefined}", "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "package", "executor", "sync", "json", "repository", "installed_package" ],
        "__interpreterType" : [ "third.party", "unconfigured", "lost", "corrupted", "local", "vagrant", "docker", "docker-compose", "ssh-credentials", "web-deployment" ],
        "__repository_type" : [ "composer", "vcs", "git", "svn", "fossil", "hg", "pear", "package", "artifact", "path" ]
      }
    }
  }, {
    "id" : "php.composer.files.view",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:add|edit|remove}" ]
    }
  }, {
    "id" : "php.debug.validation",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:debug.config.validated}" ],
      "event_data" : {
        "error_count" : [ "{regexp#integer}" ],
        "type" : [ "{enum:SCRIPT|LOCAL|REMOTE|PHPINFO}" ]
      }
    }
  }, {
    "id" : "php.eval.run",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:action.executed}" ],
      "event_data" : {
        "version" : [ "{enum:git.master_jit|git.master|rfc.literals|8.2.1|8.2.0|8.1.14|8.1.13|8.1.12|8.1.11|8.1.10|8.1.9|8.1.8|8.1.7|8.1.6|8.1.5|8.1.4|8.1.3|8.1.2|8.1.1|8.1.0|8.0.27|8.0.26|8.0.25|8.0.24|8.0.23|8.0.22|8.0.21|8.0.20|8.0.19|8.0.18|8.0.17|8.0.16|8.0.15|8.0.14|8.0.13|8.0.12|8.0.11|8.0.10|8.0.9|8.0.8|8.0.7|8.0.6|8.0.5|8.0.3|8.0.2|8.0.1|8.0.0|7.4.33|7.4.32|7.4.30|7.4.29|7.4.28|7.4.27|7.4.26|7.4.25|7.4.24|7.4.23|7.4.22|7.4.21|7.4.20|7.4.19|7.4.18|7.4.16|7.4.15|7.4.14|7.4.13|7.4.12|7.4.11|7.4.10|7.4.9|7.4.8|7.4.7|7.4.6|7.4.5|7.4.4|7.4.3|7.4.2|7.4.1|7.4.0|7.3.33|7.3.32|7.3.31|7.3.30|7.3.29|7.3.28|7.3.27|7.3.26|7.3.25|7.3.24|7.3.23|7.3.22|7.3.21|7.3.20|7.3.19|7.3.18|7.3.17|7.3.16|7.3.15|7.3.14|7.3.13|7.3.12|7.3.11|7.3.10|7.3.9|7.3.8|7.3.7|7.3.6|7.3.5|7.3.4|7.3.3|7.3.2|7.3.1|7.3.0|7.2.34|7.2.33|7.2.32|7.2.31|7.2.30|7.2.29|7.2.28|7.2.27|7.2.26|7.2.25|7.2.24|7.2.23|7.2.22|7.2.21|7.2.20|7.2.19|7.2.18|7.2.17|7.2.16|7.2.15|7.2.14|7.2.13|7.2.12|7.2.11|7.2.10|7.2.9|7.2.8|7.2.7|7.2.6|7.2.5|7.2.4|7.2.3|7.2.2|7.2.1|7.2.0|7.1.33|7.1.32|7.1.31|7.1.30|7.1.29|7.1.28|7.1.27|7.1.26|7.1.25|7.1.24|7.1.23|7.1.22|7.1.21|7.1.20|7.1.19|7.1.18|7.1.17|7.1.16|7.1.15|7.1.14|7.1.13|7.1.12|7.1.11|7.1.10|7.1.9|7.1.8|7.1.7|7.1.6|7.1.5|7.1.4|7.1.3|7.1.2|7.1.1|7.1.0|7.0.33|7.0.32|7.0.31|7.0.30|7.0.29|7.0.28|7.0.27|7.0.26|7.0.25|7.0.24|7.0.23|7.0.22|7.0.21|7.0.20|7.0.19|7.0.18|7.0.17|7.0.16|7.0.15|7.0.14|7.0.13|7.0.12|7.0.11|7.0.10|7.0.9|7.0.8|7.0.7|7.0.6|7.0.5|7.0.4|7.0.3|7.0.2|7.0.1|7.0.0|5.6.40|5.6.39|5.6.38|5.6.37|5.6.36|5.6.35|5.6.34|5.6.33|5.6.32|5.6.31|5.6.30|5.6.29|5.6.28|5.6.27|5.6.26|5.6.25|5.6.24|5.6.23|5.6.22|5.6.21|5.6.20|5.6.19|5.6.18|5.6.17|5.6.16|5.6.15|5.6.14|5.6.13|5.6.12|5.6.11|5.6.10|5.6.9|5.6.8|5.6.7|5.6.6|5.6.5|5.6.4|5.6.3|5.6.2|5.6.1|5.6.0|5.6.40|5.6.39|5.6.38|5.6.37|5.6.36|5.6.35|5.6.34|5.6.33|5.6.32|5.6.31|5.6.30|5.6.29|5.6.28|5.6.27|5.6.26|5.6.25|5.6.24|5.6.23|5.6.22|5.6.21|5.6.20|5.6.19|5.6.18|5.6.17|5.6.16|5.6.15|5.6.14|5.6.13|5.6.12|5.6.11|5.6.10|5.6.9|5.6.8|5.6.7|5.6.6|5.6.5|5.6.4|5.6.3|5.6.2|5.6.1|5.6.0|5.5.38|5.5.37|5.5.36|5.5.35|5.5.34|5.5.33|5.5.32|5.5.31|5.5.30|5.5.29|5.5.28|5.5.27|5.5.26|5.5.25|5.5.24|5.5.23|5.5.22|5.5.21|5.5.20|5.5.19|5.5.18|5.5.17|5.5.16|5.5.15|5.5.14|5.5.13|5.5.12|5.5.11|5.5.10|5.5.9|5.5.8|5.5.7|5.5.6|5.5.5|5.5.4|5.5.3|5.5.2|5.5.1|5.5.0|5.5.38|5.5.37|5.5.36|5.5.35|5.5.34|5.5.33|5.5.32|5.5.31|5.5.30|5.5.29|5.5.28|5.5.27|5.5.26|5.5.25|5.5.24|5.5.23|5.5.22|5.5.21|5.5.20|5.5.19|5.5.18|5.5.17|5.5.16|5.5.15|5.5.14|5.5.13|5.5.12|5.5.11|5.5.10|5.5.9|5.5.8|5.5.7|5.5.6|5.5.5|5.5.4|5.5.3|5.5.2|5.5.1|5.5.0|5.4.45|5.4.44|5.4.43|5.4.42|5.4.41|5.4.40|5.4.39|5.4.38|5.4.37|5.4.36|5.4.35|5.4.34|5.4.33|5.4.32|5.4.31|5.4.30|5.4.29|5.4.28|5.4.27|5.4.26|5.4.25|5.4.24|5.4.23|5.4.22|5.4.21|5.4.20|5.4.19|5.4.18|5.4.17|5.4.16|5.4.15|5.4.14|5.4.13|5.4.12|5.4.11|5.4.10|5.4.9|5.4.8|5.4.7|5.4.6|5.4.5|5.4.4|5.4.3|5.4.2|5.4.1|5.4.0|5.3.29|5.3.28|5.3.27|5.3.26|5.3.25|5.3.24|5.3.23|5.3.22|5.3.21|5.3.20|5.3.19|5.3.18|5.3.17|5.3.16|5.3.15|5.3.14|5.3.13|5.3.12|5.3.11|5.3.10|5.3.9|5.3.8|5.3.7|5.3.6|5.3.5|5.3.4|5.3.3|5.3.2|5.3.1|5.3.0|5.2.17|5.2.16|5.2.15|5.2.14|5.2.13|5.2.12|5.2.11|5.2.10|5.2.9|5.2.8|5.2.7|5.2.6|5.2.5|5.2.4|5.2.3|5.2.2|5.2.1|5.2.0|5.1.6|5.1.5|5.1.4|5.1.3|5.1.2|5.1.1|5.1.0|5.1.6|5.1.5|5.1.4|5.1.3|5.1.2|5.1.1|5.1.0|5.0.5|5.0.4|5.0.3|5.0.2|5.0.1|5.0.0|4.4.9|4.4.8|4.4.7|4.4.6|4.4.5|4.4.4|4.4.3|4.4.2|4.4.1|4.4.0|4.3.11|4.3.10|4.3.9|4.3.8|4.3.7|4.3.6|4.3.5|4.3.4|4.3.3|4.3.2|4.3.1|4.3.0|eol|}", "{regexp#version}" ]
      }
    }
  }, {
    "id" : "php.external.formatters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:type}" ],
      "event_data" : {
        "value" : [ "{enum:PHP_CS_FIXER|PHP_CBF|NO}", "{enum:LARAVEL_PINT}" ]
      }
    }
  }, {
    "id" : "php.import.class.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:php.import.class.invoked|php.import.class.popup.closed|php.import.class.invoked.from.popup}" ],
      "event_data" : {
        "class_reference_place" : [ "{enum:DOC_COMMENT|FIELD_TYPE|PARAMETER_TYPE|RETURN_TYPE|METHOD_CALL|CLASS_CONSTANT_REFERENCE|RETURN_NEW_EXPRESSION|NEW_EXPRESSION|UNKNOWN}", "{enum:IMPLEMENTS_LIST|EXTENDS_LIST}" ],
        "index_of_selected_candidate_in_popup" : [ "{regexp#integer}" ],
        "number_of_candidates" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "php.jb.attributes.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:attribute.usage}" ],
      "event_data" : {
        "name" : [ "{enum:ArrayShape|Deprecated|ExpectedValues|Immutable|Language|NoReturn|Pure}" ]
      }
    }
  }, {
    "id" : "php.meta.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:meta_directives_used}" ],
      "event_data" : {
        "meta_directive" : [ "{enum:pattern|type|elementType}" ]
      }
    }
  }, {
    "id" : "php.move.dnd.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:php.move.succeeded}" ],
      "event_data" : {
        "succeeded_because_of_psr_detection" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:select}" ],
      "event_data" : {
        "tab" : [ "{enum:INCLUDE_PATH|PHP_RUNTIME|ANALYSIS|COMPOSER_FILES}" ]
      }
    }
  }, {
    "id" : "php.terminal.customizer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:php.path.customization.enabled}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.unit.run.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:configured}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "has_custom_options" : [ "{enum#boolean}" ],
        "scope" : [ "{enum:Directory|Method|Class|XML|Pattern}" ],
        "use_paratest" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.unit.run.configuration.exec",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:execute}" ],
      "event_data" : {
        "has_custom_options" : [ "{enum#boolean}" ],
        "scope" : [ "{enum:Directory|Method|Class|XML|Pattern}" ],
        "use_paratest" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "platform.installer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Update_Manager|Update Manager}" ],
      "event_data" : {
        "value" : [ "{enum:Toolbox_App|Snap|IDE}", "{enum:Other}" ]
      }
    }
  }, {
    "id" : "platform.registry",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:registry|experiment|advanced.setting}" ],
      "event_data" : {
        "id" : [ "{util#registry_key}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "platform.registry.application",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#registry_key}" ]
    }
  }, {
    "id" : "plugin.manager",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "acceptance_result" : [ "{enum:ACCEPTED|DECLINED|AUTO_ACCEPTED}" ],
        "enabled_state" : [ "{enum:ENABLED_ON_DEMAND|ENABLED|DISABLED}" ],
        "group" : [ "{enum:UPDATE|INSTALLING|INSTALLED|SEARCH_INSTALLED|SEARCH|FEATURED|NEW_AND_UPDATED|TOP_DOWNLOADS|TOP_RATED|CUSTOM_REPOSITORY}", "{enum:BUNDLED_UPDATE}", "{enum:SUGGESTED}" ],
        "index" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "previous_version" : [ "{util#plugin_version}" ],
        "signature_check_result" : [ "{enum:INVALID_SIGNATURE|MISSING_SIGNATURE|WRONG_SIGNATURE|SUCCESSFUL}" ],
        "source" : [ "{enum:MARKETPLACE|CUSTOM_REPOSITORY|FROM_DISK}" ],
        "states" : [ "{enum:ENABLE_GLOBALLY|ENABLE_FOR_PROJECT|ENABLE_FOR_PROJECT_DISABLE_GLOBALLY|DISABLE_GLOBALLY|DISABLE_FOR_PROJECT|DISABLE_FOR_PROJECT_ENABLE_GLOBALLY}" ]
      },
      "enums" : {
        "__event_id" : [ "plugin.install.third.party.check", "plugin.installation.finished", "plugin.installation.started", "plugin.signature.check.result", "plugin.signature.warning.shown", "plugin.state.changed", "plugin.was.removed", "plugin.search.card.opened" ]
      }
    }
  }, {
    "id" : "plugins",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "unsafe_id" : [ "{enum:io.zhile.research.ide-eval-resetter}" ]
      },
      "enums" : {
        "__event_id" : [ "disabled.plugin", "enabled.not.bundled.plugin", "per.project.disabled", "per.project.enabled", "unsafe.plugin" ]
      }
    }
  }, {
    "id" : "plugins.advertiser",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "pluginId" : [ "{util#plugin}" ],
        "plugins" : [ "{util#plugin}" ],
        "source" : [ "{enum:editor|notification}", "{enum:search}" ]
      },
      "enums" : {
        "__event_id" : [ "install.plugins", "ignore.extensions", "open.download.page", "ignore.ultimate", "ignore.unknown.features", "enable.plugins", "configure.plugins", "learn.more" ]
      }
    }
  }, {
    "id" : "plugins.disabled",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#plugin}" ]
    }
  }, {
    "id" : "plugins.dynamic",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "load", "unload.fail", "unload.success", "unload.failure", "load.success" ]
      }
    }
  }, {
    "id" : "plugins.non.bundled",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#plugin}" ]
    }
  }, {
    "id" : "productivity",
    "builds" : [ ],
    "versions" : [ {
      "from" : "11"
    } ],
    "rules" : {
      "event_id" : [ "{util#productivity}", "{enum:feature.used}" ],
      "event_data" : {
        "group" : [ "{util#productivity_group}", "{util#productivity}" ],
        "id" : [ "{util#productivity}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "profiler.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum:absolute_time|short_time}", "{enum:SHORT_TIME|ABSOLUTE_TIME|DEFAULT}" ]
      },
      "enums" : {
        "__event_id" : [ "tabNameFormat", "filterCalls", "hideLessOnePercents", "showCalleesList", "showPercentsOfRoot", "icicleGraph", "stickyText", "focusOnSearch", "showChart", "showThreadId", "keepSimilarThreadsClose", "filterSlider", "highlightIdeProcesses", "filterDevelopmentTools", "dragToChangeZoom", "sortThreadsByName", "navigateWithSingleClick" ]
      }
    }
  }, {
    "id" : "profiler.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{enum:JumpToSource|FocusInFlameGraph|FocusInCallTree|FocusInMethodList|MethodMergedCallees|MethodBackTraces|CopyFrame|CopyStackUpToFrame|ExpandTree|CollapseTree|ExpandAll|CollapseAll|PresentationSettings|CompareWithBaseline|CreateDiff|ContextMenu|SpeedSearch|RecursionCheckbox|Drag|Scroll|Zoom|FocusOnNode|ZoomIn|ZoomOut|ResetZoom|IcicleGraph|StickyText|NodesFilter|CaptureImage|CopyImage|SaveImage|SearchToolbar|SelectDiffFlameGraphType|ShowPercentOfTotal|ShowPercentOfParent|FilterCalls|HideCallsLessPercent|ShowCalleeList|FocusOnSubtree|ExcludeSubtree|FocusOnCall|ExcludeCall|RecursionCollapse|ShowChart|ZoomIn|ZoomOut|ZoomReset|ZoomBySelectionWithoutModifier|FilterEvents|ThreadList.SortByName|ThreadList.SortByMetric|ThreadList.ShowIds|ThreadList.KeepSimilarThreadsClose|ThreadList.AllThreadsMergedSelected|ThreadList.CustomThreadSelected|ThreadList.SpeedSearch}", "{enum:GetExpandableEventContents|OpenExpandableEventContentsPanel}", "{enum:ExpandGroup|CollapseGroup}" ],
        "anonymous_dump_id" : [ "{regexp#hash}" ],
        "capture_memory_snapshot_origin" : [ "{enum:WELCOME_SCREEN|CPU_MEMORY_TAB}" ],
        "diff_calc_time" : [ "{regexp#integer}" ],
        "diff_calc_time_ms" : [ "{regexp#integer}" ],
        "diff_flame_graph_type" : [ "{util#class_name}" ],
        "dump_state" : [ "{enum:EMPTY|NON_EMPTY|NOT_EXIST}" ],
        "enabled" : [ "{enum#boolean}" ],
        "folder_state" : [ "{enum:NOT_EXIST|NOT_A_DIRECTORY|NOT_WRITABLE}" ],
        "home_action_id" : [ "{enum:ProcessesList.ShowDevTools|ProcessesList.HighlightIdeProcesses|ProcessesList.EditConfigurations|ProcessesList.SnapshotFolder|Process.LiveCharts|Process.AttachProfiler|Process.MemorySnapshot|Process.ThreadDump|RecentSnapshots.Open.Context|RecentSnapshots.Open.Click|RecentSnapshots.Reveal|RecentSnapshots.Hide.Context|RecentSnapshots.Hide.Click|OpenSnapshot.Button|OpenSnapshot.Hint}" ],
        "id" : [ "{util#run_config_id}" ],
        "input_event" : [ "{util#shortcut}" ],
        "kind" : [ "{enum:ADD|COPY|REMOVE|CHANGE}" ],
        "load_time" : [ "{regexp#integer}" ],
        "load_time_ms" : [ "{regexp#integer}" ],
        "name" : [ "{enum:flameGraph|callTree|methodList}", "{util#profiler_event_id_validator}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "possible_reasons" : [ "{enum:short_session|gradle|duplicate_arguments|incompatible_jdk|jfr_sync_init_failed|jfr_sync_start_failed|stopped_before_flushed|no_data_written}", "{enum:forceful_kill}" ],
        "prev_event_time" : [ "{regexp#integer}" ],
        "prev_event_time_ms" : [ "{regexp#integer}" ],
        "prev_tab_time" : [ "{regexp#integer}" ],
        "prev_tab_time_ms" : [ "{regexp#integer}" ],
        "process_type" : [ "{enum:IDE|IDE_DESCENDANT|EXTERNAL}" ],
        "profiler_configuration_type" : [ "{util#profiler_configuration_type}" ],
        "run_configuration_type" : [ "{util#run_config}" ],
        "run_widget_action_id" : [ "{enum:Widget.StopRecording|Widget.StartRecording|Widget.ShowResults}" ],
        "running_mode" : [ "{enum:RUN|ATTACH}" ],
        "size" : [ "{regexp#integer}" ],
        "snapshot_import_origin" : [ "{enum:RECENT|OPEN_FILE}", "{enum:REOPEN_FROM_WIDGET}" ],
        "snapshot_import_source" : [ "{util#snapshot_import_source_validator}" ],
        "snapshot_size" : [ "{regexp#integer}" ],
        "snapshot_size_bytes" : [ "{regexp#integer}" ],
        "snapshot_type" : [ "{util#profiler_snapshot_type}" ],
        "tab_component_id" : [ "{util#profiler_tab_id_validator}" ],
        "type" : [ "{util#profiler_snapshot_type}" ]
      },
      "enums" : {
        "__event_id" : [ "execute", "start", "snapshot.generated", "attach", "tree.recursion.collapse", "tree.recursion.checkbox", "snapshot.open", "tab.open", "event.open", "configurations.changed", "home.action.invoked", "diff.flamegraph.type.changed", "diff.created", "snapshot.action.invoked", "run.widget.interaction", "bad.snapshot.folder", "profiler.error", "profiler.recoverFromError", "memory.snapshot.generated" ]
      }
    }
  }, {
    "id" : "project.fs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:case-sensitivity|roots-watched}" ],
      "event_data" : {
        "cs-implicit" : [ "{enum#boolean}" ],
        "cs-project" : [ "{enum#boolean}" ],
        "cs-system" : [ "{enum#boolean}" ],
        "pct-non-watched" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "project.import",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "system_id" : [ "{enum#build_tools}" ],
        "task_class" : [ "{util#class_name}" ]
      },
      "enums" : {
        "__event_id" : [ "started", "finished", "import_project.finished", "import_project.stage.started", "import_project.stage.finished", "import_project.started" ]
      }
    }
  }, {
    "id" : "project.indexable.files",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:all.indexable.files|content.indexable.files}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "project.intellij.monorepo",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:is.intellij}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "project.structure",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "modules.count.{regexp#count}", "content.roots.count.{regexp#count}", "source.roots.count.{regexp#count}", "source.root.cookbooks-root.{regexp#count}", "source.root.java-resource.{regexp#count}", "source.root.java-source.{regexp#count}", "source.root.java-test-resource.{regexp#count}", "source.root.java-test.{regexp#count}", "source.root.kotlin-resource.{regexp#count}", "source.root.kotlin-source.{regexp#count}", "source.root.kotlin-test-resource.{regexp#count}", "source.root.kotlin-test.{regexp#count}", "excluded.roots.count.{regexp#count}", "{enum:package.prefix.used|package.prefix.not.used}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#count}", "{regexp#integer}" ],
        "type" : [ "{enum#type}" ]
      },
      "enums" : {
        "__event_id" : [ "modules.total", "content.roots.total", "source.roots.total", "excluded.roots.total", "package.prefix", "source.root", "named.scopes.total.local", "named.scopes.total.shared", "project.in.wsl", "unloaded.modules.total", "module.groups.total" ],
        "type" : [ "cookbooks-root", "java-resource", "java-source", "java-test-resource", "java-test", "kotlin-resource", "kotlin-source", "kotlin-test-resource", "kotlin-test" ]
      }
    }
  }, {
    "id" : "project.view.pane",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:current}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#version}", "{util#plugin_version}" ],
        "scope_class_name" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "project.view.pane.changes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:changed}" ],
      "event_data" : {
        "from_class_name" : [ "{util#class_name}" ],
        "from_scope_class_name" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "to_class_name" : [ "{util#class_name}" ],
        "to_scope_class_name" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "project.view.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dir.expanded}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "proxy.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:proxy.type}" ],
      "event_data" : {
        "name" : [ "{enum:Auto|Socks|Http}" ]
      }
    }
  }, {
    "id" : "qodana.coverage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:input.coverage.loaded|total.coverage.reported|fresh.coverage.reported}" ],
      "event_data" : {
        "fresh_coverage_value" : [ "{regexp#integer}" ],
        "is_fresh_computed" : [ "{enum#boolean}" ],
        "is_total_computed" : [ "{enum#boolean}" ],
        "language" : [ "{enum:JVM|PHP|JavaScript|None|Other}" ],
        "total_coverage_value" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "qodana.plugin",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "ci" : [ "{enum:GITHUB|GITLAB|TEAMCITY}" ],
        "current_step" : [ "{enum:WelcomeRunQodana|YamlAndRunQodana|EditYamlThenSetupCI|SetupCI}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "is_highlight" : [ "{enum#boolean}" ],
        "is_link" : [ "{enum#boolean}" ],
        "is_received" : [ "{enum#boolean}" ],
        "language" : [ "{enum:JVM|PHP|JavaScript|None|Other}" ],
        "new_step" : [ "{enum:WelcomeRunQodana|YamlAndRunQodana|EditYamlThenSetupCI|SetupCI}" ],
        "panel_action" : [ "{enum:OPEN_QODANA_BROWSER_UI_FROM_BANNER|CLOSE_BANNER|OPEN_WEBSITE_FROM_PROMO}" ],
        "problems_count" : [ "{regexp#integer}" ],
        "protocol" : [ "{enum:OPEN_REPORT|SHOW_MARKER}", "{enum:SETUP_CI}" ],
        "publish_cloud" : [ "{enum#boolean}" ],
        "report_type" : [ "{enum:FILE|OPEN_IN_IDE|OPEN_IN_IDE_CLOUD_REPORT|CLOUD|LOCAL_RUN_NOT_PUBLISHED|LOCAL_RUN_PUBLISHED|UNKNOWN|NONE}" ],
        "should_show" : [ "{enum#boolean}" ],
        "source" : [ "{enum:TOOLS_SELECT_SARIF_FILE|OPEN_IN_IDE|CLOUD_HIGHLIGHT_ON_LINK|CLOUD_HIGHLIGHT_NEW_REPORT_APPEARED_NOTIFICATION|REPORT_NOT_AVAILABLE|QODANA_PANEL_CLOSE|QODANA_PANEL_CANCEL_LOADING|TOOLS_LIST|SARIF_FILE}", "{enum:CLOSE_ACTION_PANEL|CLOUD_REFRESH_ACTION_PANEL|RUN_QODANA_DIALOG|EDITOR_INTENTION}", "{enum:REFRESH_TOKEN_EXPIRED|TOOLS_LIST|OAUTH_SUCCEEDED|QODANA_SETTINGS_PANEL}", "{enum:PROMO_PANEL|OPEN_IN_IDE_DIALOG}", "{enum:LINK_WINDOW|UNAUTHORIZED|TOOLS_LIST}", "{enum:LINK_VIEW|AUTO_LINK}", "{enum:CLOUD|LOCAL_REPORT|BANNER|TOOLS_LIST}" ],
        "state" : [ "{enum:FAILED_OPEN_PROJECT|FAILED_CONSTRUCTING_REPORT|SUCCESS}", "{enum:STARTED|SUCCEEDED|CANCELLED|FAILED}" ],
        "tab_state" : [ "{enum:PROMO|ANALYZING|AUTHORIZED|AUTHORIZING|LINKED|LOADING_REPORT|SELECTED_REPORT}" ],
        "transition" : [ "{enum:OPEN|NEXT|PREVIOUS|CLOSE}" ],
        "user_state" : [ "{enum:AUTHORIZED|AUTHORIZING|NOT_AUTHORIZED}" ],
        "with_baseline" : [ "{enum#boolean}" ],
        "wizard" : [ "{enum:RunQodana|YamlAndCI}" ],
        "yaml" : [ "{enum:SAVE|NO_SAVE|ALREADY_PRESENT}" ]
      },
      "enums" : {
        "__event_id" : [ "highlight_report", "cloud_user_state", "open_in_ide", "cloud_link", "run.dialog.started", "tab.unselected", "tab.selected", "report.data.highlighted", "analysis.step.finished", "setup.ci.finished", "setup.ci.opened", "wizard.dialog.step.finished", "panel.action.executed", "report.with.coverage.received" ]
      }
    }
  }, {
    "id" : "qodana.plugin.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "fixed" : [ "{regexp#integer}" ],
        "highlighted_report_state" : [ "{enum:SELECTED|LOADING|NOT_SELECTED}" ],
        "is_link" : [ "{enum#boolean}" ],
        "language" : [ "{enum:JVM|PHP|JavaScript|None|Other}" ],
        "missing" : [ "{regexp#integer}" ],
        "report_type" : [ "{enum:FILE|OPEN_IN_IDE|CLOUD|UNKNOWN|NONE}", "{enum:OPEN_IN_IDE_CLOUD_REPORT|LOCAL_RUN_NOT_PUBLISHED|LOCAL_RUN_PUBLISHED}" ],
        "total" : [ "{regexp#integer}" ],
        "user_state" : [ "{enum:AUTHORIZED|AUTHORIZING|NOT_AUTHORIZED}" ]
      },
      "enums" : {
        "__event_id" : [ "link_state", "user_state", "highlighted_report_state", "problems.data.reported", "coverage.in.report.shown" ]
      }
    }
  }, {
    "id" : "r.interpreters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:setup.interpreter}" ],
      "event_data" : {
        "is_conda" : [ "{enum#boolean}" ],
        "suggested" : [ "{regexp:(\\d+\\.?)*\\d+_(true|false)}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "r.workflow",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:call.method.from.console}" ],
      "event_data" : {
        "name" : [ "{enum:install.packages|install_github}" ]
      }
    }
  }, {
    "id" : "reader.mode",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:see.also.navigation|widget.switched}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "readme.on.start",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:readme.closed}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:handler.invoked|executed|usages.searched}" ],
      "event_data" : {
        "cancelled" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "element" : [ "{util#class_name}" ],
        "handler" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "processor" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "refactoring.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:open.in.editor.saved|open.in.editor.shown}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "selected" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "remote.sdk.type",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:configured.sdk}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "level" : [ "{enum:ide|project}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "sdk_type" : [ "{enum#__sdk_type}", "{util#sdk_type}", "{util#class_name}" ]
      },
      "enums" : {
        "_" : [ "Docker_Compose", "Docker", "Web_Deployment", "Vagrant", "SSH_Credentials", "WSL", "Unknown" ],
        "__sdk_type" : [ "Docker_Compose", "Docker", "Web_Deployment", "Vagrant", "SSH_Credentials", "WSL", "unknown" ]
      }
    }
  }, {
    "id" : "rename.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|executed|reference.processed|local_search_in_comments}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "local_include_comments" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "reference_class" : [ "{util#class_name}" ],
        "rename_processor" : [ "{util#class_name}" ],
        "scope_type" : [ "{enum#__scope_type}" ],
        "search_in_comments" : [ "{enum#boolean}" ],
        "search_in_text_occurrences" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__scope_type" : [ "project", "test", "tests", "production", "module", "current file", "current_file", "third.party", "unknown" ]
      }
    }
  }, {
    "id" : "ruby.brakeman.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:report|execution.failed}" ],
      "event_data" : {
        "exit_code" : [ "{regexp#integer}" ],
        "high_confidence_warnings_count" : [ "{regexp#integer}" ],
        "low_confidence_warnings_count" : [ "{regexp#integer}" ],
        "medium_confidence_warnings_count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ruby.brakeman.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:settings}" ],
      "event_data" : {
        "inspection_enabled" : [ "{enum#boolean}" ],
        "level" : [ "{enum:Weak|Medium|High}" ]
      }
    }
  }, {
    "id" : "run.configuration.exec",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#run_config_factory}", "{enum:started|ui.shown|finished}" ],
      "event_data" : {
        "additional.alternative_jre_version" : [ "{regexp#integer}" ],
        "additional.lang" : [ "{util#lang}" ],
        "additional.launch_settings_command" : [ "{enum:executable|iis|iisexpress|project}" ],
        "additional.node_version_major" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "executor" : [ "{util#run_config_executor}" ],
        "factory" : [ "{util#run_config_factory}", "{util#run_config_id}" ],
        "finish_type" : [ "{enum:FAILED_TO_START|UNKNOWN}", "{enum:TERMINATED}", "{enum:TERMINATED_BY_STOP|TERMINATED_DUE_TO_RERUN}" ],
        "id" : [ "{util#run_config_id}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_rerun" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "target" : [ "{util#run_target}" ]
      }
    }
  }, {
    "id" : "run.configuration.type",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#run_config_factory}", "{enum:configured.in.project|feature.used|total.configurations.registered}" ],
      "event_data" : {
        "activate_before_run" : [ "{enum#boolean}" ],
        "additional.alternative_jre_version" : [ "{regexp#integer}" ],
        "additional.lang" : [ "{util#lang}" ],
        "additional.node_version_major" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "edit_before_run" : [ "{enum#boolean}" ],
        "factory" : [ "{util#run_config_factory}", "{util#run_config_id}" ],
        "featureName" : [ "{util#plugin_info}" ],
        "id" : [ "{util#run_config_id}" ],
        "parallel" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "shared" : [ "{enum#boolean}" ],
        "target" : [ "{util#run_target}" ],
        "temp_count" : [ "{regexp#integer}" ],
        "temporary" : [ "{enum#boolean}" ],
        "total_count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "run.configuration.type.temp",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#run_config}" ],
      "event_data" : {
        "activate_before_run" : [ "{enum#boolean}" ],
        "edit_before_run" : [ "{enum#boolean}" ],
        "parallel" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "shared" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "run.dashboard",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "run.dashboard.{enum#state}", "{enum:run.dashboard|third.party}", "{util#run_config}", "{enum:run.dashboard|added.run.configuration|removed.run.configuration}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "factory" : [ "{util#run_config_factory}" ],
        "id" : [ "{util#run_config_id}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "rust.advanced.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cargo_test_tool_window|macros_maximum_recursion|external_doc_url|convert_json_to_struct}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "is_docs_rs" : [ "{enum#boolean}" ],
        "limit" : [ "{regexp#integer}" ],
        "preference" : [ "{enum:Yes|No|Ask every time}" ]
      }
    }
  }, {
    "id" : "rust.cargo.build",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:error.emitted}" ],
      "event_data" : {
        "error_code" : [ "{regexp:E0\\d{3}}" ]
      }
    }
  }, {
    "id" : "rust.code.vision",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:author.clicked|usages.clicked}" ],
      "event_data" : {
        "location" : [ "{enum:function|struct_item|enum_item|enum_variant|named_field_decl|trait_item|impl_item|type_alias|constant|macro_def|mod_item|unknown}" ]
      }
    }
  }, {
    "id" : "rust.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:new_project_creation}" ],
      "event_data" : {
        "template" : [ "{enum:binary|library|wasm|proc_macro|custom}" ]
      }
    }
  }, {
    "id" : "rust.debug.evaluate.expression",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:evaluated|element.used}" ],
      "event_data" : {
        "debugger_kind" : [ "{enum:GDB|LLDB|Unknown}" ],
        "element" : [ "{enum:MethodCall|InherentImplMethodCall|TraitImplMethodCall|FunctionCall|TypeQualifiedPath|PathToGenericItem|MacroCall|Lambda|UnresolvedReference|Unknown}" ],
        "success" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "rust.generate.type.from.json.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:pasted.json.converted|json.paste.dialog.remember.choice.result|json.like.text.pasted}" ],
      "event_data" : {
        "result" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "rust.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "build_script_dependency" : [ "{regexp#integer}" ],
        "build_script_workspace" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "dependencies" : [ "{enum:2015|2018|2021}" ],
        "dependency" : [ "{regexp#integer}" ],
        "direct_dependency" : [ "{regexp#integer}" ],
        "name" : [ "{enum:syn|rand|libc|rand_core|quote|proc-macro2|cfg-if|serde|autocfg|itoa|unicode-xid|bitflags|getrandom|log|rand_chacha|lazy_static|serde_derive|time|serde_json|base64|memchr|regex|num-traits|parking_lot_core|regex-syntax|cc|smallvec|parking_lot|version_check|ryu|once_cell|strsim|aho-corasick|semver|clap|bytes|hashbrown|digest|crossbeam-utils|lock_api|scopeguard|block-buffer|generic-array|num_cpus|byteorder|textwrap|atty|indexmap|num-integer|mio|percent-encoding|idna|either|pin-project-lite|url|ppv-lite86|tokio|itertools|unicode-width|heck|slab|thiserror|thiserror-impl|futures|ansi_term|unicode-normalization|chrono|memoffset|rustc_version|miniz_oxide|fnv|typenum|unicode-bidi|anyhow|pkg-config|termcolor|env_logger|futures-core|hyper|socket2|tokio-util|toml|futures-util|futures-task|crossbeam-epoch|futures-sink|futures-channel|crossbeam-channel|winapi|thread_local|http|sha2|futures-io|arrayvec|matches|tracing|nom|pin-utils|opaque-debug|tracing-core|httparse|tinyvec|h2|crossbeam-deque|humantime|pin-project|unicode-segmentation|pin-project-internal|crc32fast|nix|remove_dir_all|tempfile|instant|futures-macro|http-body|backtrace|uuid|adler|rustc-demangle|proc-macro-hack|futures-executor|hex|vec_map|mime|want|form_urlencoded|semver-parser|flate2|openssl-sys|ahash|proc-macro-error|serde_urlencoded|try-lock|tinyvec_macros|tokio-macros|wasi|quick-error|walkdir|proc-macro-error-attr|object|spin|same-file|async-trait|sha-1|tower-service|glob|num-bigint|httpdate|encoding_rs|gimli|signal-hook-registry|openssl|rayon|subtle|unicode-ident|hmac|rayon-core|rand_hc|reqwest|cpufeatures|openssl-probe|addr2line|tracing-attributes|linked-hash-map|foreign-types|foreign-types-shared|redox_syscall|which|regex-automata|unicase|paste|synstructure|rustls|static_assertions|native-tls|fastrand|bstr|ipnet|crypto-mac|winapi-x86_64-pc-windows-gnu|winapi-i686-pc-windows-gnu|ring|untrusted|time-macros|dirs|hyper-tls|fixedbitset|sct|webpki|num-rational|petgraph|darling_macro|darling_core|darling|libloading|rand_pcg|block-padding|tracing-subscriber|jobserver|crossbeam-queue|hermit-abi|zeroize|phf_shared|bumpalo|crypto-common|os_str_bytes|siphasher|winapi-util|tokio-rustls|wasm-bindgen|wasm-bindgen-backend|wasm-bindgen-shared|wasm-bindgen-macro|wasm-bindgen-macro-support|yaml-rust|net2|lazycell|stable_deref_trait|dtoa|strum_macros|iovec|num-iter|pest|sharded-slab|proc-macro-crate|num-complex|js-sys|webpki-roots|filetime|rustc-hash|rustversion|mime_guess|shlex|tokio-stream|dirs-sys|miow|strum|phf|rand_xorshift|tracing-log|void|ucd-trie|derive_more|sha1|structopt|libz-sys|ident_case|byte-tools|structopt-derive|bincode|core-foundation-sys|tracing-futures|web-sys|proc-macro-nested|ctor|clap_derive|prost-derive|prost|serde_yaml|matchers|half|csv|phf_generator|num|fake-simd|tokio-native-tls|csv-core|prost-types|core-foundation|scoped-tls|term|failure|vcpkg|bindgen|ordered-float|minimal-lexical|lexical-core|clap_lex|arrayref|failure_derive|windows_x86_64_msvc|convert_case|async-stream|error-chain|maplit|hostname|async-stream-impl|arc-swap|clang-sys|winreg|console|cookie|wasm-bindgen-futures|const_fn|constant_time_eq|cexpr|prost-build|cipher|maybe-uninit|derivative|multimap|bit-vec|hyper-rustls|dirs-sys-next|zstd-sys|signal-hook|windows-sys|schannel|serde_cbor|tower-layer|security-framework|adler32|xml-rs|aes|windows_x86_64_gnu|terminal_size|zstd-safe|windows_i686_msvc|zstd|windows_i686_gnu|security-framework-sys|tower|event-listener|peeking_take_while|windows_aarch64_msvc|dashmap|pest_derive|crunchy|rand_isaac|rand_os|dirs-next|md-5|bitvec|match_cfg|data-encoding|cast|standback|rustls-pemfile|pest_meta|pest_generator|time-macros-impl|vsdb|fxhash|globset|vsdb_derive|vsdbsled|concurrent-queue|rand_jitter|nodrop|phf_codegen|radium|criterion|winapi-build|safemem|utf-8|crossbeam|kernel32-sys|criterion-plot|redox_users|num_threads|pretty_assertions|threadpool|fallible-iterator|colored|tinytemplate|cargo_metadata|cmake|diff|combine|libm|futures-lite|serde_bytes|parking|zeroize_derive|indoc|async-channel|tar|crc|utf8-ranges|waker-fn|pem|bit-set|cache-padded|oorandom|curve25519-dalek|tungstenite|md5|tracing-serde|language-tags|plotters|mio-uds|funty|sha3|iana-time-zone|num-derive|protobuf|lru-cache|rustls-native-certs|wyz|unindent|aead|async-task|difference|bytemuck|Inflector|tap|libgit2-sys|git2|approx|ntapi|tiny-keccak|tonic|tokio-io|memmap2|xattr|trust-dns-proto|doc-comment|ctr|polling|unreachable|fs2|async-io|keccak|universal-hash|pbkdf2|owning_ref|lru|cpuid-bool|signature|float-cmp|tokio-timer|fs_extra|string_cache|backtrace-sys|tokio-executor|plotters-backend|trust-dns-resolver|plotters-svg|tonic-build|enum-as-inner|rustc-serialize|polyval|getopts|serde_with|resolv-conf|ignore|serde_with_macros|precomputed-hash|tempdir|number_prefix|aes-gcm|encode_unicode|tokio-reactor|ghash|new_debug_unreachable|futures-timer|wait-timeout|async-executor|num_enum|num_enum_derive|tokio-tungstenite|zip|async-lock|headers|predicates|errno|tokio-threadpool|png|dyn-clone|prometheus|quick-xml|blocking|home|tokio-tcp|openssl-macros|target-lexicon|tokio-io-timeout|headers-core|serde_repr|atomic-waker|gcc|indicatif|predicates-core|predicates-tree|async-std|curl-sys|pulldown-cmark|ws2_32-sys|paste-impl|hyper-timeout|tokio-current-thread|tokio-sync|notify|inotify|image|io-lifetimes|config|pyo3|cloudabi|hkdf|cloudabi}" ],
        "proc_macro_dependency" : [ "{regexp#integer}" ],
        "proc_macro_workspace" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ],
        "workspace" : [ "{regexp#integer}", "{enum:2015|2018|2021}" ]
      },
      "enums" : {
        "__event_id" : [ "cargo_projects", "compile_time_targets", "packages", "editions", "dependency" ]
      }
    }
  }, {
    "id" : "rust.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:rustfmt|project|external_linter|cargo}" ],
      "event_data" : {
        "auto_show_errors_in_editor" : [ "{enum#boolean}" ],
        "channel" : [ "{enum:[default]|stable|beta|nightly|dev}" ],
        "compile_all_targets" : [ "{enum#boolean}" ],
        "doctest_injection" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "macro_expansion_engine" : [ "{enum:disabled|old|new}" ],
        "offline" : [ "{enum#boolean}" ],
        "run_on_fly" : [ "{enum#boolean}" ],
        "run_on_save" : [ "{enum#boolean}" ],
        "tool" : [ "{enum:cargo check|clippy}" ]
      }
    }
  }, {
    "id" : "rust.toolchain",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:compiler|rustup|type}" ],
      "event_data" : {
        "channel" : [ "{enum#channel}" ],
        "host_target" : [ "{enum#host_target}" ],
        "type" : [ "{enum#type}" ],
        "used" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "channel" : [ "stable", "beta", "nightly", "dev", "[default]" ],
        "host_target" : [ "i686-pc-windows-gnu", "i686-pc-windows-msvc", "i686-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-pc-windows-gnu", "x86_64-pc-windows-msvc", "x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu", "aarch64-apple-darwin", "aarch64-pc-windows-msvc" ],
        "type" : [ "local", "wsl", "none", "other" ]
      }
    }
  }, {
    "id" : "scala.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "optimize.imports", "convert.javatext", "desugar.code", "compiler.inc.type.set.sbt", "show.implicit.parameters", "sc.file.set.ammonite", "rearrange", "type.info", "createFromUsage", "worksheet", "sc.file.set.worksheet", "sc.file.set.auto", "overrideImplement", "go.to.implicit.conversion", "compiler.inc.type.set.idea", "structure.view" ]
      }
    }
  }, {
    "id" : "scala.annotator",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "file.without.type.aware.annotated", "structural.type", "file.with.type.aware.annotated", "collection.pack.highlighting", "macro.definition", "existential.type" ]
      }
    }
  }, {
    "id" : "scala.debugger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "lambda.breakpoint", "evaluator", "debugger", "compiling.evaluator", "smart.step.into" ]
      }
    }
  }, {
    "id" : "scala.js",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dynamic.completion|dynamic.resolve}" ]
    }
  }, {
    "id" : "scala.project.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "compiler.inc.type.used.idea", "compiler.inc.type.used.sbt", "sbt.idea.build", "sbt.shell.build", "project.view.highlighting", "compiler.compile.server.used" ]
      }
    }
  }, {
    "id" : "scala.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "introduce.field", "rename.local", "introduce.type.alias", "move.class", "inline", "introduce.variable", "introduce.parameter", "change.signature", "rename.member", "move.file", "extract.method", "extract.trait" ]
      }
    }
  }, {
    "id" : "scala.sbt",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:shell.execute.command|shell.test.run.command|shell.test.command}" ]
    }
  }, {
    "id" : "search.everywhere.process",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:firs.element.shown|contributor.search.started|first.element.found}" ],
      "event_data" : {
        "contributorID" : [ "{enum:FileSearchEverywhereContributor|SearchEverywhereContributor.All|ClassSearchEverywhereContributor|RecentFilesSEContributor|ActionSearchEverywhereContributor|SymbolSearchEverywhereContributor|TopHitSEContributor|RunConfigurationsSEContributor|YAMLKeysSearchEverywhereContributor|CommandsContributor|third.party|Vcs.Git|UrlSearchEverywhereContributor|GitSearchEverywhereContributor|TextSearchContributor}" ]
      }
    }
  }, {
    "id" : "serial.monitor.connects",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:serial.monitor.connected}" ],
      "event_data" : {
        "baudRate" : [ "{regexp#integer}" ],
        "success" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "serial.monitor.profiles",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:serial.profiles}" ],
      "event_data" : {
        "defaultBaudrate" : [ "{regexp#integer}" ],
        "saved" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "component" : [ "{util#component_name}" ],
        "default_project" : [ "{enum#boolean}" ],
        "id" : [ "{regexp#integer}" ],
        "name" : [ "{util#option_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum#__type}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}", "{regexp#float}", "{util#setting_value}" ]
      },
      "enums" : {
        "_" : [ "GeneralSettings", "NotRoamableUiSettings", "UISettings", "PhpDebugGeneral", "PhpRefactoringSettings", "not.default", "invoked" ],
        "__type" : [ "bool", "int", "float", "enum", "string" ]
      }
    }
  }, {
    "id" : "settings.changes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "47"
    } ],
    "rules" : {
      "event_id" : [ "{enum:component_changed_option|component_changed}" ],
      "event_data" : {
        "component" : [ "{util#component_name}" ],
        "default_project" : [ "{enum#boolean}" ],
        "id" : [ "{regexp#integer}" ],
        "name" : [ "{util#option_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum#__type}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}", "{regexp#float}", "{util#setting_value}" ]
      },
      "enums" : {
        "__type" : [ "bool", "int", "float", "enum", "string" ]
      }
    }
  }, {
    "id" : "settings.repository",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:sync.settings}" ],
      "event_data" : {
        "sync_type" : [ "{enum:merge|overwrite_local|overwrite_remote}" ]
      }
    }
  }, {
    "id" : "settings.sync.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action" : [ "{enum:INSTALL_SETTINGS_REPOSITORY|USE_NEW_SETTINGS_SYNC}" ],
        "method" : [ "{enum:GET_FROM_SERVER|PUSH_LOCAL|PUSH_LOCAL_WAS_ONLY_WAY|CANCELED}", "{enum:DISABLED_ONLY|DISABLED_AND_REMOVED_DATA_FROM_SERVER|CANCEL}" ],
        "reason" : [ "{enum:REMOVED_FROM_SERVER|EXCEPTION}" ]
      },
      "enums" : {
        "__event_id" : [ "enabled.manually", "migrated.from.old.plugin", "invoked.settings.repository.notification.action", "disabled.automatically", "disabled.manually", "migrated.from.settings.repository" ]
      }
    }
  }, {
    "id" : "settings.sync.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:general.state|editor.font.state|disabled.bundled.plugins|disabled.categories}" ],
      "event_data" : {
        "category" : [ "{enum:UI|KEYMAP|CODE|TOOLS|SYSTEM|PLUGINS|OTHER}" ],
        "disabled" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "shared.indexes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "averageDownloadSpeed" : [ "{regexp#integer}" ],
        "downloadTime" : [ "{regexp#integer}" ],
        "finishType" : [ "{enum:success|cancelled|error}" ],
        "indexId" : [ "{regexp#hash}" ],
        "kind" : [ "{enum#kind_enum}" ],
        "matchingFbIndexes" : [ "{regexp#integer}" ],
        "matchingStubIndexes" : [ "{regexp#integer}" ],
        "mismatchingFbIndexes" : [ "{util#index_id}" ],
        "mismatchingStubIndexes" : [ "{util#index_id}" ],
        "numberOfLocalSharedIndexes" : [ "{regexp#integer}" ],
        "packedSize" : [ "{regexp#integer}" ],
        "redundantFbIndexes" : [ "{regexp#integer}" ],
        "redundantStubIndexes" : [ "{regexp#integer}" ],
        "totalSizeOfLocalSharedIndexes" : [ "{regexp#integer}" ],
        "unpackedSize" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "local.index.loaded", "downloaded", "attached", "attach.failed.incompatible", "download.started", "download.finished", "attach.failed.notFound", "attach.failed.excluded" ],
        "kind_enum" : [ "project", "jdk", "mvn", "other", "python", "php" ]
      }
    }
  }, {
    "id" : "shared.indexes.app.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:shared.indexes.excluded.chunks|shared.indexes.stored.chunks}" ],
      "event_data" : {
        "number" : [ "{regexp#integer}" ],
        "size_in_bytes" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "shared.indexes.project.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "kinds" : [ "{enum:PROJECT|JDK|MVN|PYTHON|PHP|OTHER}" ],
        "value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "denied.shared.indexes", "allowed.shared.indexes", "no.decision.shared.indexes", "wait.shared.indexes", "attached.shared.indexes" ]
      }
    }
  }, {
    "id" : "similar.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "component" : [ "{util#class_name}" ],
        "id" : [ "{regexp#integer}" ],
        "number_of_loaded" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "usage_view" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "most.common.usages.shown", "link.to.similar.usage.clicked", "more.clusters.loaded", "more.usages.loaded", "show.similar.usages.link.clicked", "most.common.usage.patterns.refresh.clicked", "more.non.clustered.usage.loaded", "navigate.to.usage.clicked", "more.snippets.loaded.in.clusters.preview" ]
      }
    }
  }, {
    "id" : "smart.update",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vcs.update|build.project}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "success" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "spellchecker.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:add.to.accepted.words.ui|remove.from.accepted.words.ui}" ]
    }
  }, {
    "id" : "ssh",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:custom.ssh.tool.path|config.parser|openssh.version}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "kind" : [ "{enum:LEGACY|OPENSSH}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "startup",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ],
        "projects_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "bootstrap", "splash", "appInit", "totalDuration", "projectFrameVisible", "splashShown", "splashHidden" ]
      }
    }
  }, {
    "id" : "stash.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "create_branch" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "keep_index" : [ "{enum#boolean}" ],
        "message_entered" : [ "{enum#boolean}" ],
        "pop_stash" : [ "{enum#boolean}" ],
        "reinstate_index" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "stash.pop.started", "stash.push.dialog", "stash.pop.dialog", "stash.push.finished", "stash.pop.finished", "stash.push.started" ]
      }
    }
  }, {
    "id" : "suggested.refactorings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "declaration_type" : [ "{util#class_name}" ],
        "id" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "rename.suggested", "rename.popup.shown", "rename.popup.canceled", "rename.performed", "changeSignature.performed", "changeSignature.popup.canceled", "changeSignature.popup.shown", "changeSignature.suggested" ]
      }
    }
  }, {
    "id" : "surround.with",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#surround_with_id}", "{enum:surrounder.executed|live.template.executed|custom.template.executed}" ],
      "event_data" : {
        "changedByUser" : [ "{enum#boolean}" ],
        "class" : [ "{util#class_name}" ],
        "group" : [ "{util#live_template_group}", "{util#live_template}" ],
        "key" : [ "{util#live_template}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "title" : [ "{enum#server_title}" ],
        "type" : [ "{enum#surround_with_type}" ]
      },
      "enums" : {
        "server_title" : [ "Postfix", "TextMate snippet", "Emmet" ],
        "surround_with_type" : [ "surrounder", "template", "custom.template" ]
      }
    }
  }, {
    "id" : "svn.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:working.copy}" ],
      "event_data" : {
        "format" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "swagger.features",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "run.codegen.configuration.action", "edit.codegen.configuration.action", "edit.remote.specifications.endpoints", "add.remote.specification", "swagger.ui.requests.try.out", "swagger.ui.requests.execute", "redoc.requests.try.it", "redoc.requests.send" ]
      }
    }
  }, {
    "id" : "symsrv",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:storages|ms.server.added|enabled|servers}" ],
      "event_data" : {
        "enabled" : [ "{regexp#integer}", "{enum#boolean}" ],
        "total" : [ "{regexp#integer}" ],
        "value" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "system.os",
    "builds" : [ {
      "from" : "191.4738"
    } ],
    "rules" : {
      "event_id" : [ "{enum#os}", "{enum#__event_id}" ],
      "event_data" : {
        "build" : [ "{regexp#integer}" ],
        "distro" : [ "{enum:almalinux|alpine|amzn|arch|bunsenlabs|centos|chromeos|debian|deepin|devuan|elementary|fedora|galliumos|garuda|gentoo|kali|linuxmint|mageia|manjaro|neon|nixos|ol|opensuse-leap|opensuse-tumbleweed|parrot|pop|pureos|raspbian|rhel|rocky|rosa|sabayon|slackware|solus|ubuntu|void|zorin|other|unknown}", "{enum:endeavouros}" ],
        "id" : [ "{regexp#hash}", "{enum:unknown}" ],
        "locale" : [ "{enum#__locale}" ],
        "name" : [ "{enum#os}" ],
        "release" : [ "{enum#linux}", "{regexp#version}" ],
        "revision" : [ "{regexp#integer}" ],
        "shell" : [ "{enum:sh|ash|bash|csh|dash|fish|ksh|tcsh|xonsh|zsh|nu|other|unknown}" ],
        "time_zone" : [ "{regexp#time_zone}" ],
        "value" : [ "{regexp#time_zone}", "{regexp#hash}", "{enum:unknown}" ],
        "version" : [ "{regexp#version}", "{enum:unknown.format}", "{enum#__version}" ],
        "wsl" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "os.name", "os.timezone", "machine.id", "linux", "windows" ],
        "__locale" : [ "cs", "da", "de", "en", "es", "fr", "hi", "ja", "ko", "nb", "nl", "nn", "no", "pl", "pt", "ro", "ru", "sv", "tr", "uk", "vi", "zh", "hu", "yo", "ur", "ig", "ml", "in", "mr", "uz", "el", "it", "am", "my", "ar", "as", "ne", "az", "fa", "zu", "rw", "bn", "sd", "si", "so", "kk", "kn", "or", "ta", "gu", "pa", "te", "th", "ha" ],
        "__version" : [ "6.0", "6.1", "6.2", "6.3", "10.0" ],
        "linux" : [ "unknown", "alpine", "amzn", "antergos", "arch", "centos", "debian", "deepin", "elementary", "fedora", "galliumos", "gentoo", "kali", "linuxmint", "manjaro", "neon", "nixos", "ol", "opensuse", "opensuse-leap", "opensuse-tumbleweed", "freedesktop", "parrot", "raspbian", "rhel", "sabayon", "solus", "ubuntu", "zorin", "custom" ]
      },
      "regexps" : {
        "time_zone" : "((\\+|\\-)\\d\\d(\\:|\\_)\\d\\d)|Z"
      }
    }
  }, {
    "id" : "system.runtime",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "arch" : [ "{enum#__arch}" ],
        "bit" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "gigabytes" : [ "{regexp#integer}" ],
        "index_partition_free" : [ "{regexp#integer}" ],
        "index_partition_size" : [ "{regexp#integer}" ],
        "name" : [ "{enum#gc}", "{enum#jvm_option}", "{enum#__name}", "{enum:splash|nosplash}", "{enum:Metal|OpenGL}" ],
        "value" : [ "{regexp#integer}", "{enum#boolean}" ],
        "vendor" : [ "{enum#jvm_vendor}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "_" : [ "cores", "garbage.collector", "jvm", "jvm.bit", "jvm.option" ],
        "__arch" : [ "x86", "x86_64", "arm64", "other", "unknown" ],
        "__event_id" : [ "cores", "garbage.collector", "jvm.option", "jvm", "debug.agent", "memory.size", "swap.size", "disk.size", "jvm.client.properties", "rendering.pipeline" ],
        "__name" : [ "Serial", "Unknown", "CMS", "Epsilon", "G1", "Z", "Parallel", "Other" ],
        "gc" : [ "Shenandoah", "G1_Young_Generation", "G1_Old_Generation", "Copy", "MarkSweepCompact", "PS_MarkSweep", "PS_Scavenge", "ParNew", "ConcurrentMarkSweep" ],
        "jvm_option" : [ "Xmx", "Xms", "SoftRefLRUPolicyMSPerMB", "ReservedCodeCacheSize" ],
        "jvm_vendor" : [ "JetBrains", "Apple", "Oracle", "Sun", "IBM", "Azul", "Other" ]
      }
    }
  }, {
    "id" : "task.management",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:create.local.task.manually|open.remote.task|collect.remote.tasks|explicitly.activated.task}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "repository_type" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "task.management.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:configured.repository}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "repository_type" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "tasks.state.collector",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:combo_on_toolbar}" ],
      "event_data" : {
        "visible" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "terminalShell",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "command" : [ "{enum:<relative path>|<absolute path>|curl|ps|g++|gcc|systeminfo|ssh|del|echo|rmdir|type|helm|hostname|java|telnet|powershell|vim|cargo|mkdir|zip|scp|python|apt|gdb|xcopy|ip|tracert|subst|cls|brew|taskmgr|exit|node|rd|route|az|rm|tasklist|pwd|ping|wget|unzip|pnpm|rustup|sc|eslint|top|where|copy|sudo|free|cd|karma|set|more|msbuild|svn|kill|cp|cypress|prettier|gradle|help|rsync|yarn|apt-get|ipconfig|df|javac|dig|compact|ls|nano|mocha|screen|source|dir|chkdsk|docker-compose|netsh|mode|du|playwright|reg|webpack|find|md|assoc|net|vitest|export|valgrind|which|ver|nvm|tar|chown|format|pwsh|rvm|tree|mv|touch|history|less|sort|netstat|pause|expand|vi|nslookup|pathping|kubectl|ng|shutdown|systemctl|gulp|code|ifconfig|nodejs|traceroute|title|docker|yum|grunt|git|attrib|whois|cat|vagrant|alias|chmod|htop|make|cipher|move|mvn|whence|ant|grep|clear|start|npm|jest|command|ruby|apt-cache|service|npx|ssh-keygen|taskkill|prompt|hg}", "{enum:<empty>|<whitespaces>}", "{enum:composer}", "{enum#__command}" ],
        "os-version" : [ "{regexp#version}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "runAnythingProvider" : [ "{util#class_name}" ],
        "shell" : [ "{enum#__shell}", "{enum:unspecified}" ],
        "subCommand" : [ "{enum:test|run|install|update|status|checkout|commit|install|test|run|compose|tag|add|pull|status|push|checkout|merge|init|diff|branch|log|reset|commit|clone|stash|install|run|test}", "{enum:rebase}", "{enum#__subCommand}", "{enum:miri|fmt}" ],
        "terminalCommandHandler" : [ "{util#class_name}" ]
      },
      "enums" : {
        "__command" : [ "unalias", "ll", "egrep", "tail", "gitk", "pacman", "wc", "zsh", "bazel", "head", "fgrep", "sh", "whatis", "fish", "shred", "terraform", "bash", "cmd", "man", "aws", "rgrep" ],
        "__event_id" : [ "ssh.exec", "local.exec", "terminal.command.executed", "terminal.smart.command.executed", "terminal.smart.command.not.executed" ],
        "__shell" : [ "bash", "cmd", "zsh", "other", "fish", "powershell", "sh", "wsl", "cmder_shell", "tcsh", "git-bash", "cmder", "pwsh", "git-cmd", "git", "activate", "init", "ubuntu", "ubuntu1804", "anaconda3", "cexec", "cygwin", "miniconda3", "msys2_shell", "mksh", "ksh", "xonsh", "ion", "hamilton", "es", "nushell", "scsh", "rc", "eshell", "ash", "csh", "fsh", "bbsh", "dash" ],
        "__subCommand" : [ "new", "metadata", "rustc", "bench", "tree", "check", "clean", "rustdoc", "version", "remove", "help", "search", "generate-lockfile", "verify-project", "fix", "uninstall", "build", "vendor", "fetch", "report", "doc", "locale-project", "pkgid", "create-project", "completion", "depends", "show", "require", "global", "prohibits", "list", "clear-cache", "self-update", "suggests", "licenses", "outdated", "audit", "reinstall", "run-script", "diagnose", "bump", "dump-autoload", "check-platform-reqs", "config", "exec", "validate", "repack", "restore", "apply", "grep", "mv", "cherry-pick", "revert", "switch", "bisect", "prune", "difftool", "submodule", "mergetool", "rm", "gc" ]
      }
    }
  }, {
    "id" : "toolbar",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#action}", "{enum:clicked}" ],
      "event_data" : {
        "action_id" : [ "{util#action}" ],
        "class" : [ "{util#class_name}", "{enum:com.intellij.microservices.ui.diagrams.actions.MsShowWholeProjectDiagramAction}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb" : [ "{enum#boolean}" ],
        "enable" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "parent" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "tooltip.action.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:execute|show.all|show.description}" ],
      "event_data" : {
        "input_event" : [ "{util#shortcut}" ],
        "source" : [ "{enum:gear|shortcut|more.link}" ]
      }
    }
  }, {
    "id" : "toolwindow",
    "builds" : [ ],
    "versions" : [ {
      "from" : "6"
    } ],
    "rules" : {
      "event_id" : [ "{util#toolwindow}", "{enum:activated|shown|hidden}" ],
      "event_data" : {
        "Location" : [ "{enum#__Location}" ],
        "Source" : [ "{enum:StripeButton|ToolWindowHeader|ToolWindowHeaderAltClick|Content|Switcher|SwitcherSearch|ToolWindowsWidget|RemoveStripeButtonAction|HideOnShowOther|HideSide|CloseFromSwitcher|ActivateActionMenu|ActivateActionKeyboardShortcut|ActivateActionGotoAction|ActivateActionOther|CloseAction|HideButton|HideToolWindowAction|HideSideWindowsAction|HideAllWindowsAction|JumpToLastWindowAction}", "{enum:ToolWindowSwitcher}", "{enum:SquareStripeButton}", "{enum:InspectionsWidget}" ],
        "ViewMode" : [ "{enum#__ViewMode}" ],
        "id" : [ "{util#toolwindow}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__Location" : [ "Left_Top", "Left_Bottom", "Bottom_Left", "Bottom_Right", "Right_Bottom", "Right_Top", "Top_Right", "Top_Left", "BottomRight", "BottomLeft", "LeftTop", "LeftBottom", "RightTop", "TopRight", "RightBottom", "TopLeft" ],
        "__ViewMode" : [ "Dock_Pinned", "DockPinned", "Dock_Unpinned", "DockUnpinned", "Undock", "Float", "Window" ]
      }
    }
  }, {
    "id" : "ui.accessibility.screen.reader",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "screen.reader.{enum:ENABLED|DISABLED}" ]
    }
  }, {
    "id" : "ui.dialogs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "6"
    } ],
    "rules" : {
      "event_id" : [ "{util#dialog_class}", "{enum:show|close|help.clicked}" ],
      "event_data" : {
        "code" : [ "{enum:0|1|2}" ],
        "dialog_class" : [ "{util#dialog_class}", "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum:show|close}" ]
      }
    }
  }, {
    "id" : "ui.editor.color.schemes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:enabled.color.scheme}" ],
      "event_data" : {
        "is_dark" : [ "{enum#boolean}" ],
        "scheme" : [ "{enum#__scheme}", "{enum:New Dark|Light|Dark|Monokai}", "{enum:New Dark RC}", "{enum:Darcula Contrast}" ],
        "value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "Default", "Darcula", "Obsidian", "Visual_Studio", "Solarized", "Wombat", "Monkai", "XCode", "Sublime", "Oblivion", "Zenburn", "Cobalt", "Netbeans", "Eclipse", "Aptana", "Flash_Builder", "IdeaLight", "High_contrast", "ReSharper", "Rider", "Other" ],
        "__scheme" : [ "Default", "Darcula", "Obsidian", "Visual_Studio", "Solarized", "Wombat", "Monkai", "XCode", "Sublime", "Oblivion", "Zenburn", "Cobalt", "Netbeans", "Eclipse", "Aptana", "Flash_Builder", "IdeaLight", "High_contrast", "ReSharper", "Rider", "Other", "IntelliJ_Light" ]
      }
    }
  }, {
    "id" : "ui.event",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "applied" : [ "{enum#boolean}" ],
        "autodetect" : [ "{enum#boolean}" ],
        "class" : [ "{util#class_name}" ],
        "count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "expand" : [ "{enum#boolean}" ],
        "final_zoom_scale_percent" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "presentation_mode" : [ "{enum#boolean}" ],
        "recursive" : [ "{enum#boolean}" ],
        "target_class" : [ "{util#class_name}" ],
        "with_selection" : [ "{enum#boolean}" ],
        "zoom_mode" : [ "{enum:ZOOM_IN|ZOOM_OUT}" ],
        "zoom_place" : [ "{enum:SETTINGS|SWITCHER}" ],
        "zoom_scale_percent" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "ProgressPaused", "ProgressResumed", "NavBarShowPopup", "NavBarNavigate", "BreadcrumbShowTooltip", "BreadcrumbNavigate", "DumbModeDialogWasNotNeeded", "DumbModeDialogRequested", "DumbModeDialogShown", "DumbModeDialogCancelled", "DumbModeDialogFinished", "DumbModeDialogProceededToActions", "IncrementalSearchActivated", "IncrementalSearchKeyTyped", "IncrementalSearchCancelled", "IncrementalSearchNextPrevItemSelected", "DumbModeBalloonWasNotNeeded", "DumbModeBalloonRequested", "DumbModeBalloonShown", "DumbModeBalloonCancelled", "DumbModeBalloonProceededToActions", "ShowUsagesPopupShowSettings", "LookupExecuteElementAction", "ToolWindowsWidgetPopupClicked", "ToolWindowsWidgetPopupShown", "LookupShowElementActions", "ImplementationViewComboBoxSelected", "ImplementationViewToolWindowOpened", "DaemonEditorPopupInvoked", "HectorPopupDisplayed", "EditorFoldingIconClicked", "QuickNavigateInfoPopupShown", "EditorAnnotationClicked", "StatusBarWidgetClicked", "StatusBarPopupShown", "CtrlMouseHintShown", "ide.zoom.switcher.closed", "ide.zoom.changed", "theme.autodetect.selector" ]
      }
    }
  }, {
    "id" : "ui.fonts",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "UI.font.size[{regexp#integer}]", "Presentation.mode.font.size[{regexp#integer}]", "Editor.font.size[{regexp#integer}]", "IDE.editor.font.size[{regexp#integer}]", "Console.font.size[{regexp#integer}]", "QuickDoc.font.size[{enum#_}]", "UI.font.name[{enum#font}]", "Editor.font.name[{enum#font}]", "IDE.editor.font.name[{enum#font}]", "Console.font.name[{enum#font}]", "{enum#metrics}" ],
      "event_data" : {
        "font_name" : [ "{enum#font}", "{enum:Inter}" ],
        "font_size" : [ "{regexp#integer}", "{enum#_}" ],
        "font_size_2d" : [ "{regexp#float}" ],
        "line_spacing" : [ "{regexp#float}" ],
        "value" : [ "{regexp#float}" ]
      },
      "enums" : {
        "_" : [ "X_SMALL", "X_LARGE", "XX_SMALL", "XX_LARGE", "SMALL", "MEDIUM", "LARGE" ],
        "font" : [ "Monospaced", "Menlo", "DejaVu_Sans_Mono", ".SFNSText-Regular", "Fira_Code", "Lucida_Grande", "Source_Code_Pro", "Segoe_UI", "Ubuntu", ".SF_NS_Text", "Consolas", "Noto_Sans_Regular", "Microsoft_YaHei", "Fira_Code_Retina", "Cantarell_Regular", "Microsoft_YaHei_UI", "Monaco", "Noto_Sans", "Dialog.plain", "Fira_Code_Medium", "Courier_New", "Tahoma", "Hack", "DejaVu_Sans", "Ubuntu_Mono", "Droid_Sans_Mono", "Dialog", "Inconsolata", "Malgun_Gothic", "Cantarell", "DialogInput", "Yu_Gothic_UI_Regular", "Roboto", "Liberation_Mono", "Lucida_Console", "D2Coding", "Lucida_Sans_Typewriter", "Fira_Code_Light", "Droid_Sans", "Verdana", "Arial", "Roboto_Mono", "Segoe_UI_Semibold", "SF_Mono", "Droid_Sans_Mono_Slashed", "LucidaGrande", "Operator_Mono", "Ayuthaya", "Hasklig", "Iosevka", "Andale_Mono", "Anonymous_Pro", "Anonymous_Pro_for_Powerline", "D2Coding_ligature", "Dank_Mono", "DejaVu_Sans_Mono_for_Powerline", "Fantasque_Sans_Mono", "Fira_Mono_for_Powerline", "Hack_Nerd_Font", "IBM_Plex_Mono", "Meslo_LG_L_DZ_for_Powerline", "Meslo_LG_M_for_Powerline", "Meslo_LG_S_for_Powerline", "Microsoft_YaHei_Mono", "Noto_Mono_for_Powerline", "Noto_Sans_Mono", "PT_Mono", "PragmataPro", "SourceCodePro+Powerline+Awesome_Regular", "Source_Code_Pro_Semibold", "Source_Code_Pro_for_Powerline", "Ubuntu_Mono_derivative_Powerline", "YaHei_Consolas_Hybrid", "mononoki", "Bitstream_Vera_Sans_Mono", "Comic_Sans_MS", "Courier_10_Pitch", "Cousine", "2Coding_ligature", "Droid_Sans_Mono_Dotted", "Inconsolata-dz", "Input", "Input_Mono", "Meslo_LG_M_DZ_for_Powerline", "Migu_2M", "Monoid", "Operator_Mono_Book", "Operator_Mono_Lig", "Operator_Mono_Medium", "Abadi_MT_Condensed_Extra_Bold", "Al_Bayan", "Meiryo", "Microsoft_JhengHei", "Microsoft_Yahei_UI", "SansSerif", "Ubuntu_Light", "JetBrains_Mono", ".AppleSystemUIFont", ".SFNS-Regular" ],
        "metrics" : [ "UI", "Presentation.mode", "Editor", "IDE.editor", "Console", "QuickDoc", "editor.lineSpacing" ]
      }
    }
  }, {
    "id" : "ui.hidpi.mode",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:per_monitor_dpi|system_dpi}" ]
    }
  }, {
    "id" : "ui.info.features",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "Recent.Files[{enum:30_50|more.than.50|15_30|15}]", "Tabs.{enum:Top|None|Right|Left|Bottom}", "Allow.merging.buttons.{enum#state}", "Tool.Window.buttons.{enum:hidden|visible}", "Toolbar.and.NavBar.{enum:hidden|visible}", "Toolbar.{enum:hidden|visible}", "Nav.Bar.{enum:hidden|visible|floating}", "Status.bar.{enum:visible|hidden}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "display_id" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "grouped" : [ "{enum:[30_50]|[more.than.50]|[15_30]|[15]}" ],
        "navbar" : [ "{enum:visible|hidden}" ],
        "scale" : [ "{regexp#float}" ],
        "scale_mode" : [ "{enum#boolean}" ],
        "toolbar" : [ "{enum:visible|hidden}" ],
        "user_scale" : [ "{regexp#float}" ],
        "value" : [ "{enum:visible|floating}", "{enum:visible|hidden}", "{enum:Top|None|Right|Left|Bottom}", "{enum#look_and_feel}", "{enum:per_monitor_dpi|system_dpi}", "{regexp#integer}", "{regexp#integer}x{regexp#integer}", "{regexp#integer}x{regexp#integer}_({regexp#integer}%)" ]
      },
      "enums" : {
        "_" : [ "recent.files", "Gutter.Icons", "Line.Numbers", "Toolbar.and.NavBar", "Show.tips.on.startup", "Retina", "Soft.Wraps", "Block.cursor", "QuickDoc.Show.Toolwindow", "QuickDoc.AutoUpdate" ],
        "__event_id" : [ "Nav.Bar", "Toolbar", "Status.bar", "Tool.Window.buttons", "Toolbar.and.NavBar", "Recent.files.limit", "Show.Editor.Tabs.In.Single.Row", "Hide.Editor.Tabs.If.Needed", "Block.cursor", "Line.Numbers", "Gutter.Icons", "Soft.Wraps", "Tabs", "Retina", "Show.tips.on.startup", "Allow.merging.buttons", "QuickDoc.Show.Toolwindow", "QuickDoc.AutoUpdate", "Look.and.Feel", "Hidpi.Mode", "Screen.Reader", "Screen.Scale", "Nav.Bar.members", "QuickListsCount", "Number.Of.Monitors", "Screen.Resolution", "laf.autodetect", "tool.window.layouts" ]
      }
    }
  }, {
    "id" : "ui.look.and.feel",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "IntelliJ", "Gray", "High_contrast", "Light", "Dark_purple", "Cyan_light", "Rider_Dark", "Darcula" ]
      }
    }
  }, {
    "id" : "ui.mnemonic",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:mnemonic.used}" ],
      "event_data" : {
        "type" : [ "{enum:mac.alt.based|regular|mac.regular}" ]
      }
    }
  }, {
    "id" : "ui.screen.scale",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#integer}", "{regexp#integer}.{regexp#integer}", "ScaledMode_{regexp#integer}", "ScaledMode_{regexp#integer}.{regexp#integer}" ]
    }
  }, {
    "id" : "ui.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "20"
    } ],
    "rules" : {
      "event_id" : [ "{util#class_name}", "{enum#__event_id}" ],
      "event_data" : {
        "characters" : [ "{regexp#integer}" ],
        "configurable" : [ "{util#class_name}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "hits" : [ "{regexp#integer}" ],
        "loaded_from_cache" : [ "{enum#boolean}" ],
        "modifiedOnly" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum#type}" ]
      },
      "enums" : {
        "__event_id" : [ "select", "reset", "apply", "search", "advanced.settings.search" ],
        "type" : [ "select", "apply", "reset" ]
      }
    }
  }, {
    "id" : "ui.tips",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "algorithm" : [ "{enum#__algorithm}", "{enum:ONE_TIP_SURROUNDWITH_SUMMER2020|ONE_TIP_EXTENDSELECTION_SUMMER2020|ONE_TIP_SWITCHER_SUMMER2020|LOCAL_SORT_SUMMER2020}", "{enum:tip_utility_and_ignore_used|tip_utility}", "{enum:random_ignore_used}", "{enum:usage_and_applicability|shuffle}" ],
        "feature_id" : [ "{util#tip_info}" ],
        "filename" : [ "{util#tip_info}" ],
        "keep_showing_after" : [ "{enum#boolean}" ],
        "keep_showing_before" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "time_passed" : [ "{regexp#integer}" ],
        "tip_id" : [ "{util#tip_info}" ],
        "type" : [ "{enum#type}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "_" : [ "shown.automatically", "shown.manually", "dialog.shown", "next.tip", "previous.tip" ],
        "__algorithm" : [ "TOP", "MATRIX_ALS", "MATRIX_BPR", "PROB", "WIDE", "CODIS", "RANDOM", "WEIGHTS_LIN_REG", "default_shuffle", "unknown", "ONE_TIP_SUMMER2020", "RANDOM_SUMMER2020" ],
        "__event_id" : [ "tip.shown", "dialog.shown", "next.tip", "previous.tip", "dialog.closed", "tip.performed" ],
        "type" : [ "automatically", "manually" ]
      }
    }
  }, {
    "id" : "usage.view",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_first_results_ms" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "id" : [ "{regexp#integer}" ],
        "is_among_recent_files" : [ "{enum#boolean}" ],
        "is_file_already_opened" : [ "{enum#boolean}" ],
        "is_similar_usage" : [ "{enum#boolean}" ],
        "is_the_same_file" : [ "{enum#boolean}" ],
        "item_chosen" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "new" : [ "{util#scopeRule}" ],
        "number_of_letters_typed" : [ "{regexp#integer}" ],
        "number_of_targets" : [ "{regexp#integer}" ],
        "number_of_usages" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "preselected_usage" : [ "{regexp#integer}" ],
        "previous" : [ "{util#scopeRule}" ],
        "primary_target" : [ "{util#class_name}" ],
        "reference_class" : [ "{util#class_name}" ],
        "results_total" : [ "{regexp#integer}" ],
        "scope" : [ "{util#scopeRule}" ],
        "search_cancelled" : [ "{enum#boolean}" ],
        "selected_element.is_in_injected_file" : [ "{enum#boolean}" ],
        "selected_element.is_in_test_sources" : [ "{enum#boolean}" ],
        "selected_element.lang" : [ "{util#lang}" ],
        "selected_element.reference_class" : [ "{util#class_name}" ],
        "selected_usage" : [ "{regexp#integer}" ],
        "symbol" : [ "{util#class_name}" ],
        "target_element.is_in_injected_file" : [ "{enum#boolean}" ],
        "target_element.is_in_test_sources" : [ "{enum#boolean}" ],
        "target_element.lang" : [ "{util#lang}" ],
        "target_element.reference_class" : [ "{util#class_name}" ],
        "too_many_result_warning" : [ "{enum#boolean}" ],
        "ui_location" : [ "{enum:ShowUsagesPopup|FindToolWindow}" ],
        "usage_view" : [ "{regexp#integer}" ],
        "userAction" : [ "{enum:Shown|Aborted|Continued}" ]
      },
      "enums" : {
        "__event_id" : [ "usage.navigate", "usage.shown", "tooManyResultsDialog", "scope.changed", "switch.tab", "item.chosen", "finished", "started", "open.in.tool.window", "cancelled", "popup.closed", "item.chosen.in.popup.features" ]
      }
    }
  }, {
    "id" : "user.advanced.info",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "is_jb_team" : [ "{enum#boolean}" ],
        "login_hash" : [ "{regexp#hash}" ],
        "metadata" : [ "{regexp#license_metadata}", "{enum:unknown}" ],
        "value" : [ "{enum#value}" ]
      },
      "enums" : {
        "_" : [ "eap", "release", "evaluation", "license", "build", "licencing" ],
        "value" : [ "eap", "release", "evaluation", "license" ]
      }
    }
  }, {
    "id" : "vcs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "changesDelta" : [ "{regexp#integer}" ],
        "clone_dialog_extension" : [ "{util#class_name}", "{enum:org.jetbrains.plugins.github.ui.cloneDialog.GHECloneDialogExtensionComponent|org.jetbrains.plugins.github.ui.cloneDialog.GHCloneDialogExtensionComponent|com.intellij.util.ui.cloneDialog.RepositoryUrlCloneDialogExtension.RepositoryUrlMainExtensionComponent|com.intellij.space.vcs.clone.SpaceCloneComponent}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_full_refresh" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "unversionedDelta" : [ "{regexp#integer}" ],
        "vcs" : [ "{enum#vcs}" ],
        "wasUpdatingBefore" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "update.started", "update.finished", "commit.started", "commit.finished", "fetch.started", "fetch.finished", "non.modal.commit.state.changed", "non.modal.commit.promotion.shown", "non.modal.commit.promotion.accepted", "non.modal.commit.promotion.rejected", "changes.view.refresh", "cloned.project.opened", "clone.invoked", "clm.refresh.finished", "clm.refresh.started" ]
      }
    }
  }, {
    "id" : "vcs.application.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:commit.from.local.changes|non.modal.commit|non.modal.commit.new.installation|non.modal.commit.promotion}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum:shown|accepted|rejected}" ]
      }
    }
  }, {
    "id" : "vcs.back.forward.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "editor", "local.changes", "project.view", "vcs.log", "diff.viewer", "unknown" ]
      }
    }
  }, {
    "id" : "vcs.change.reminder",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:changelist_changed|changes_committed|node_expanded}" ],
      "event_data" : {
        "committed_files" : [ "{regexp#hash}" ],
        "cur_modified_files" : [ "{regexp#hash}" ],
        "displayed_prediction" : [ "{regexp#hash}" ],
        "empty_reason" : [ "{enum#__empty_reason}", "{enum:graph_changed|traverser_invalid}" ],
        "execution.time" : [ "{regexp#integer}" ],
        "execution_time" : [ "{regexp#integer}" ],
        "prediction_for_files" : [ "{regexp#hash}" ],
        "prev_modified_files" : [ "{regexp#hash}" ],
        "show.dialog.time" : [ "{regexp#integer}" ],
        "show_dialog_time" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "_" : [ "handler.registered", "plugin.disabled", "dialog.closed", "committed.anyway", "commit.canceled", "not.showed", "prediction.calculated" ],
        "__empty_reason" : [ "service_init", "too_many_files", "data_manager_removed", "requirements_not_met", "data_pack_is_not_full", "data_pack_changed", "exception_thrown", "calculation_canceled", "unexpected_reason" ]
      }
    }
  }, {
    "id" : "vcs.clone",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cloning.started|cloning.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "status" : [ "{enum:SUCCESS|PROGRESS|FAILURE|CANCEL}" ]
      }
    }
  }, {
    "id" : "vcs.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "is_base_dir" : [ "{enum#boolean}" ],
        "is_project_mapping" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "vcs" : [ "{enum#vcs}", "{enum:None}" ]
      },
      "enums" : {
        "__event_id" : [ "active.vcs", "mapping", "project.mapped.root", "mapped.roots", "changelists", "unversioned.files", "ignored.files" ]
      }
    }
  }, {
    "id" : "vcs.diff",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "ignore.policy.{enum#_}.{enum#_}", "highlight.policy.{enum#_}.{enum#_}", "show.warnings.policy.{enum#_}.{enum#_}", "collapse.unchanged.{enum#_}", "collapse.unchanged.{enum#_}.{enum#_}", "show.line.numbers.{enum#_}.{enum#_}", "use.soft.wraps.{enum#_}", "use.soft.wraps.{enum#_}.{enum#_}", "use.unified.diff.{enum#_}.{enum#_}", "enable.read.lock.{enum#_}.{enum#_}", "iterate.next.file.{enum#_}", "external.diff.{enum#_}", "external.diff.default.{enum#_}", "external.merge.{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "diff_place" : [ "{enum#diff_place}", "{enum:Default|ChangesView|VcsLogView|VcsFileHistoryView|CommitDialog|Merge|TestsFiledAssertions}" ],
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value}", "{enum:TOP|BOTTOM|HIDDEN}", "{regexp#integer}" ]
      },
      "enums" : {
        "_" : [ "Default", "default", "trim_whitespaces", "TRIM_WHITESPACES", "ignore_whitespaces", "IGNORE_WHITESPACES_CHUNKS", "ignore_whitespaces_chunks", "formatting", "by_line", "by_word", "by_word_split", "BY_WORD_SPLIT", "by_char", "do_not_highlight", "inspections", "advanced", "simple", "enabled", "disabled", "ChangesView", "VcsLogView", "CommitDialog", "Merge", "TestsFiledAssertions" ],
        "__event_id" : [ "show.breadcrumbs", "use.external.diff.by.default", "show.indent.lines", "use.unified.diff", "iterate.next.file", "use.soft.wraps", "context.range", "ignore.policy", "show.line.numbers", "collapse.unchanged", "show.white.spaces", "enable.read.lock", "use.external.diff", "show.warnings.policy", "merge.enable.lst.markers", "aligned.changes", "sync.scroll", "merge.apply.non.conflicted", "use.external.merge", "highlight.policy", "enable.external.diff.tools" ],
        "diff_place" : [ "Default", "ChangesView", "VcsLogView", "CommitDialog", "TestsFiledAssertions", "Merge", "DirDiff", "External" ],
        "value" : [ "INSPECTIONS", "ADVANCED", "SIMPLE", "DEFAULT", "TRIM_WHITESPACES", "IGNORE_WHITESPACES", "IGNORE_WHITESPACES_CHUNKS", "FORMATTING", "BY_LINE", "BY_WORD", "BY_WORD_SPLIT", "BY_CHAR", "DO_NOT_HIGHLIGHT", "BOTTOM", "TOP" ]
      }
    }
  }, {
    "id" : "vcs.diff.trigger",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "toggle.highlight.policy.{enum#_}", "toggle.ignore.policy.{enum#_}", "toggle.diff.tool.{enum#_}", "toggle.diff.tool.third.party.other", "{enum#_1}" ],
      "event_data" : {
        "diff_place" : [ "{enum#diff_place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "value" : [ "{enum#value}" ]
      },
      "enums" : {
        "_" : [ "BY_LINE", "BY_WORD", "BY_WORD_SPLIT", "BY_CHAR", "DO_NOT_HIGHLIGHT", "DEFAULT", "TRIM_WHITESPACES", "IGNORE_WHITESPACES", "IGNORE_WHITESPACES_CHUNKS", "FORMATTING", "Side-by-side_viewer", "Unified_viewer", "Binary_file_viewer" ],
        "_1" : [ "toggle.highlight.policy", "toggle.ignore.policy", "toggle.diff.tool" ],
        "diff_place" : [ "Default", "ChangesView", "VcsLogView", "CommitDialog", "TestsFiledAssertions", "Merge", "DirDiff", "External", "unknown" ],
        "value" : [ "Side-by-side_viewer", "Binary_file_viewer", "Unified_viewer", "Error_viewer", "Patch_content_viewer", "Apply_patch_somehow", "Data_Diff_Viewer", "Database_Schema_Diff_Viewer", "Directory_viewer", "SVN_properties_viewer", "DEFAULT", "TRIM_WHITESPACES", "IGNORE_WHITESPACES", "IGNORE_WHITESPACES_CHUNKS", "FORMATTING", "BY_LINE", "BY_WORD", "BY_WORD_SPLIT", "BY_CHAR", "DO_NOT_HIGHLIGHT" ]
      }
    }
  }, {
    "id" : "vcs.git.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "config.repo.sync.{enum#sync_state}", "config.update.type.{enum#upd_method}", "config.save.policy.{enum#upd_changes}", "config.ssh.{enum#state}", "config.push.autoupdate.{enum#state}", "config.push.update.all.roots.{enum#state}", "config.cherry-pick.autocommit.{enum#state}", "config.warn.about.crlf.{enum#state}", "config.warn.about.detached.{enum#state}", "data.local.branches.count.{regexp#count}", "data.remote.branches.count.{regexp#count}", "data.remotes.in.project.{regexp#count}", "data.remote.servers.{enum#_}.{regexp#count}", "version" ],
      "event_data" : {
        "type" : [ "{enum#type}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "_" : [ "github.com", "gitlab.com", "bitbucket.org", "github.custom", "gitlab.custom", "bitbucket.custom" ],
        "sync_state" : [ "SYNC", "DONT_SYNC", "NOT_DECIDED" ],
        "type" : [ "UNIX", "MSYS", "CYGWIN", "UNDEFINED", "NULL" ],
        "upd_changes" : [ "STASH", "SHELVE" ],
        "upd_method" : [ "BRANCH_DEFAULT", "MERGE", "REBASE" ]
      }
    }
  }, {
    "id" : "vcs.github",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "github.accounts.count.{regexp#count}", "github.accounts.not.default.host.{enum#state}", "{enum:accounts}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "has_enterprise" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vcs.github.pullrequest.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action" : [ "{enum:REQUEST_REVIEW|REQUEST_REVIEW_MYSELF|RE_REQUEST_REVIEW|CLOSE|REOPEN|POST_REVIEW|MERGE|SQUASH_MERGE|REBASE_MERGE}" ],
        "anonymized_id" : [ "{regexp#hash}" ],
        "count" : [ "{regexp#integer}" ],
        "has_assignee" : [ "{enum#boolean}" ],
        "has_author" : [ "{enum#boolean}" ],
        "has_label" : [ "{enum#boolean}" ],
        "has_review_state" : [ "{enum#boolean}" ],
        "has_search" : [ "{enum#boolean}" ],
        "has_state" : [ "{enum#boolean}" ],
        "is_default" : [ "{enum#boolean}" ],
        "method" : [ "{enum:MERGE|SQUASH|REBASE}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "timeline.opened", "diff.opened", "merged", "server.meta.collected", "list.opened", "details.branch.checked.out", "details.opened", "details.prev.commit.chosen", "details.checks.opened", "list.filters.applied", "details.next.commit.chosen", "details.branches.opened", "details.commit.chosen", "details.additional.actions.invoked", "selectors.opened", "details.change.selected", "new.pr.view.opened" ]
      }
    }
  }, {
    "id" : "vcs.github.pullrequests",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:toolwindow}" ],
      "event_data" : {
        "initialized_tabs" : [ "{regexp#integer}" ],
        "tabs" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "vcs.gitlab",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:accounts}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "has_enterprise" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vcs.gitlab.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action" : [ "{enum:MERGE|SQUASH_MERGE|APPROVE|UNAPPROVE|CLOSE|REOPEN|SET_REVIEWERS|ADD_NOTE|ADD_DIFF_NOTE|ADD_DISCUSSION_NOTE|CHANGE_DISCUSSION_RESOLVE|UPDATE_NOTE|DELETE_NOTE|SUBMIT_DRAFT_NOTES|POST_REVIEW}", "{enum:REBASE}", "{enum:REVIEWER_REREVIEW}" ],
        "class" : [ "{util#class_name}" ],
        "has_assignee" : [ "{enum#boolean}" ],
        "has_author" : [ "{enum#boolean}" ],
        "has_label" : [ "{enum#boolean}" ],
        "has_reviewer" : [ "{enum#boolean}" ],
        "has_search" : [ "{enum#boolean}" ],
        "has_state" : [ "{enum#boolean}" ],
        "is_cumulative" : [ "{enum#boolean}" ],
        "is_default_server" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "query" : [ "{enum:GET_CURRENT_USER|GET_MERGE_REQUEST|GET_MERGE_REQUEST_DISCUSSIONS|GET_PROJECT_LABELS|GET_PROJECT_MEMBERS|TOGGLE_MERGE_REQUEST_DISCUSSION_RESOLVE|CREATE_NOTE|CREATE_DIFF_NOTE|CREATE_REPLY_NOTE|UPDATE_NOTE|DESTROY_NOTE|MERGE_REQUEST_ACCEPT|MERGE_REQUEST_SET_DRAFT|MERGE_REQUEST_SET_REVIEWERS|MERGE_REQUEST_UPDATE}", "{enum:MERGE_REQUEST_REVIEWER_REREVIEW}", "{enum:CREATE_SNIPPET|UPDATE_SNIPPET_BLOB|GET_MEMBER_PROJECTS}", "{enum:FIND_MERGE_REQUESTS}" ],
        "request_name" : [ "{enum:REST_GET_CURRENT_USER|REST_GET_PROJECT_USERS|REST_GET_COMMIT|REST_GET_COMMIT_DIFF|REST_GET_MERGE_REQUEST_DIFF|REST_DELETE_DRAFT_NOTE|REST_GET_DRAFT_NOTES|REST_SUBMIT_DRAFT_NOTES|REST_UPDATE_DRAFT_NOTE|REST_GET_MERGE_REQUESTS|REST_APPROVE_MERGE_REQUEST|REST_UNAPPROVE_MERGE_REQUEST|REST_REBASE_MERGE_REQUEST|REST_GET_MERGE_REQUEST_STATE_EVENTS|REST_GET_MERGE_REQUEST_LABEL_EVENTS|REST_GET_MERGE_REQUEST_MILESTONE_EVENTS|GQL_GET_CURRENT_USER|GQL_GET_MERGE_REQUEST|GQL_GET_MERGE_REQUEST_DISCUSSIONS|GQL_GET_PROJECT_LABELS|GQL_TOGGLE_MERGE_REQUEST_DISCUSSION_RESOLVE|GQL_CREATE_NOTE|GQL_CREATE_DIFF_NOTE|GQL_CREATE_REPLY_NOTE|GQL_UPDATE_NOTE|GQL_DESTROY_NOTE|GQL_MERGE_REQUEST_ACCEPT|GQL_MERGE_REQUEST_SET_DRAFT|GQL_MERGE_REQUEST_SET_REVIEWERS|GQL_MERGE_REQUEST_UPDATE}", "{enum:GQL_MERGE_REQUEST_REVIEWER_REREVIEW}", "{enum:GQL_UPDATE_SNIPPET_BLOB|GQL_CREATE_SNIPPET|GQL_GET_MEMBER_PROJECTS}", "{enum:GQL_FIND_MERGE_REQUEST}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "mergerequests.toolwindow.login.opened", "mergerequests.list.filters.applied", "mergerequests.details.opened", "mergerequests.list.opened", "mergerequests.diff.opened", "mergerequests.action.performed", "api.gql.model.error.occurred", "api.server.error.occurred", "api.json.deserialization.error.occurred" ]
      }
    }
  }, {
    "id" : "vcs.log.data",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "commit.count.{regexp#count}", "branches.count.{regexp#count}", "users.count.{regexp#count}", "third.party.root.count.{regexp#count}", "{enum#vcs}.root.count.{regexp#count}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "vcs" : [ "{enum#vcs}", "{enum:third.party}" ]
      },
      "enums" : {
        "__event_id" : [ "commit.count", "branches.count", "users.count", "root.count", "dataInitialized" ]
      }
    }
  }, {
    "id" : "vcs.log.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:file.history.collected.renames|file.history.computed}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "vcs" : [ "{enum:Git|hg4idea|Perforce}" ],
        "with_index" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vcs.log.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "log.Go_to_{enum#_}_Commit.Select_from_Popup", "history.Go_to_{enum#_}_Commit.Select_from_Popup", "log.{enum#vcs_trigger}", "history.{enum#vcs_trigger}", "{enum#vcs_trigger}", "{util#vcs_log_trigger_event_id}", "{enum#__event_id}" ],
      "event_data" : {
        "class" : [ "{util#class_name}" ],
        "context" : [ "{enum:history|log}" ],
        "filter_name" : [ "{enum:branch|revision|range|user|hash|date|text|structure|roots}" ],
        "has_revision" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "kind" : [ "{enum:multiple|folder|file}" ],
        "parent_commit" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "target" : [ "{enum:node|arrow|root.column}" ],
        "type" : [ "{enum:ALL_OPTION|CLOSE_BUTTON}" ]
      },
      "enums" : {
        "_" : [ "Parent", "Child" ],
        "__event_id" : [ "action.called", "tab.navigated", "column.reset", "table.clicked", "filter.set", "history.shown", "filter.reset", "idle.indexer.started" ],
        "vcs_trigger" : [ "com.intellij.vcs.log.ui.actions.RefreshLogAction", "com.intellij.vcs.log.ui.actions.GoToHashOrRefAction", "VcsLogCreatePatchActionProvider$Dialog", "VcsLogCreatePatchActionProvider$Clipboard", "UserFilterSet", "ToggleLogColumnsActionGroup$ToggleColumnAction", "TextFilterSet", "StructureFilterSet", "ShowDiffAfterWithLocalFromLogActionProvider", "ShowCommitTooltipAction", "RootsFilterSet", "RootColumnClick", "RefreshLogAction", "Refresh", "RangeFilterSet", "OpenAnotherLogTabAction", "HashFilterSet", "GraphNodeClick", "GraphArrowClick", "Go_to_Parent_Commit.Select_from_Popup", "Go_to_Child_Commit.Select_from_Popup", "Go_To_Hash/Branch/Tag", "GoToParentRowAction", "GoToHashOrRefAction", "GoToChildRowAction", "FocusTextFilterAction", "Expand_Linear_Branches", "ExpandGraphAction", "DeepCompareAction", "DateFilterSet", "CompareRevisionsFromLogAction", "CollapseGraphAction", "BranchFilterSet", "com.intellij.vcs.log.ui.actions.history.CompareRevisionsFromFileHistoryActionProvider", "Show_Diff", "ShowDiffAfterWithLocalFromFileHistoryActionProvider", "ShowAllAffectedFromHistoryAction", "OpenRepositoryVersionFromHistoryAction", "GetVersionFromHistoryAction", "CreatePatchFromHistoryActionProvider$Dialog", "Compare_with_Local", "CompareRevisionsFromFolderHistoryActionProvider", "CompareRevisionsFromFileHistoryActionProvider", "AnnotateRevisionFromHistoryAction", "TableRowClick", "TabNavigation", "ShowFolderHistory", "ShowFileHistoryForRevision", "ShowFileHistory", "ColumnWidthReset" ]
      }
    }
  }, {
    "id" : "vcs.log.ui",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "id" : [ "{enum:MY_COMMITS|MERGE_COMMITS|CURRENT_BRANCH|THIRD_PARTY}" ],
        "name" : [ "{enum:branch|revision|range|user|hash|date|text|structure|roots}", "{enum:default.author|default.hash|default.date}" ],
        "value" : [ "{enum:Normal|Bek|LinearBek}" ]
      },
      "enums" : {
        "__event_id" : [ "onlyAffectedChanges", "textFilter.matchCase", "labels.onTheLeft", "long.edges", "details", "parentChanges", "roots", "diffPreview", "uiInitialized", "filter", "column", "labels.showTagNames", "labels.compact", "sort", "highlighter", "textFilter.regex", "diffPreviewOnTheBottom", "additionalTabs" ]
      }
    }
  }, {
    "id" : "vcs.metrics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "active.changelists.count.{regexp#count}", "unversioned.files.count.{regexp#count}", "ignored.files.count.{regexp#count}", "vcs.roots.count.{regexp#count}", "has.default.vcs.root.mapping.{enum#state}" ]
    }
  }, {
    "id" : "vcs.names",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "third.party.{util#plugin}", "third.parth.other", "{enum#vcs}" ]
    }
  }, {
    "id" : "vcs.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "offer.move.partially.committed{enum#_1}", "offer.move.failed.committed.{enum#_}", "offer.remove.empty.changelist.{enum#_}", "changelist.make.new.active{enum#_1}", "changelist.preselect.existing{enum#_1}", "perform.update.in.background{enum#_1}", "perform.commit.in.background{enum#_1}", "perform.edit.in.background{enum#_1}", "perform.checkout.in.background{enum#_1}", "perform.add_remove.in.background{enum#_1}", "perform.rollback.in.background{enum#_1}", "commit.before.check.code.smell{enum#_1}", "commit.before.check.code.cleanup{enum#_1}", "commit.before.check.todo{enum#_1}", "commit.before.check.non.empty.comment{enum#_1}", "commit.before.optimize.imports{enum#_1}", "commit.before.reformat.project{enum#_1}", "commit.before.rearrange{enum#_1}", "commit.clear.initial.comment{enum#_1}", "commit.use.right.margin{enum#_1}", "commit.show.unversioned{enum#_1}", "show.changes.preview{enum#_1}", "include.text.into.shelf{enum#_1}", "check.conflicts.in.background{enum#_1}" ],
      "enums" : {
        "_" : [ "ask", "disabled", "silently", "unknown" ],
        "_1" : [ "", ".disabled" ]
      }
    }
  }, {
    "id" : "vcs.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value}" ]
      },
      "enums" : {
        "_" : [ "offer.move.partially.committed", "offer.move.failed.committed", "offer.remove.empty.changelist", "changelist.make.new.active", "changelist.preselect.existing", "perform.update.in.background", "perform.commit.in.background", "perform.edit.in.background", "perform.checkout.in.background", "perform.add_remove.in.background", "perform.rollback.in.background", "commit.before.check.code.smell", "commit.before.check.code.cleanup", "commit.before.check.todo", "commit.before.check.non.empty.comment", "commit.before.optimize.imports", "commit.before.reformat.project", "commit.before.rearrange", "commit.clear.initial.comment", "commit.use.right.margin", "commit.show.unversioned", "show.changes.preview", "include.text.into.shelf", "check.conflicts.in.background" ],
        "__event_id" : [ "offer.move.failed.committed", "commit.before.check.code.smell", "commit.before.check.non.empty.comment", "changelist.preselect.existing", "commit.use.right.margin", "offer.remove.empty.changelist", "show.changes.preview", "commit.before.optimize.imports", "include.text.into.shelf", "offer.move.partially.committed", "commit.before.reformat.project", "commit.before.check.todo", "commit.show.unversioned", "check.conflicts.in.background", "commit.before.check.code.cleanup", "commit.clear.initial.comment", "commit.before.rearrange", "changelist.make.new.active", "asked.add.external.files", "asked.share.project.configuration.files", "share.project.configuration.files", "add.external.files.silently" ],
        "value" : [ "ask", "disabled", "silently", "unknown" ]
      }
    }
  }, {
    "id" : "vcs.svn.format",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#version}" ]
    }
  }, {
    "id" : "vfs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "accumulated_errors" : [ "{regexp#integer}" ],
        "attributes_errors" : [ "{regexp#integer}" ],
        "cancelled" : [ "{enum#boolean}" ],
        "check_duration_ms" : [ "{regexp#integer}" ],
        "contents_checked" : [ "{regexp#integer}" ],
        "contents_errors" : [ "{regexp#integer}" ],
        "creation_timestamp" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "errors_happened" : [ "{enum:SCHEDULED_REBUILD|NOT_CLOSED_PROPERLY|IMPL_VERSION_MISMATCH|NAME_STORAGE_INCOMPLETE|CONTENT_STORAGES_NOT_MATCH|CONTENT_STORAGES_INCOMPLETE|UNRECOGNIZED}", "{enum:HAS_ERRORS_IN_PREVIOUS_SESSION}", "{enum:RECOVERED_FROM_LOG}" ],
        "events" : [ "{regexp#integer}" ],
        "file_records_checked" : [ "{regexp#integer}" ],
        "file_records_children_checked" : [ "{regexp#integer}" ],
        "file_records_children_inconsistent" : [ "{regexp#integer}" ],
        "file_records_content_not_null" : [ "{regexp#integer}" ],
        "file_records_content_unresolvable" : [ "{regexp#integer}" ],
        "file_records_deleted" : [ "{regexp#integer}" ],
        "file_records_general_errors" : [ "{regexp#integer}" ],
        "file_records_name_null" : [ "{regexp#integer}" ],
        "file_records_name_unresolvable" : [ "{regexp#integer}" ],
        "file_records_null_parents" : [ "{regexp#integer}" ],
        "finish_time_ms" : [ "{regexp#integer}" ],
        "full_scans" : [ "{regexp#integer}" ],
        "impl_version" : [ "{regexp#integer}" ],
        "init_attempts" : [ "{regexp#integer}" ],
        "init_duration_ms" : [ "{regexp#integer}" ],
        "init_kind" : [ "{enum:CREATED_EMPTY|LOADED_NORMALLY|RECOVERED|SCHEDULED_REBUILD|NOT_CLOSED_PROPERLY|IMPL_VERSION_MISMATCH|NAME_STORAGE_INCOMPLETE|CONTENT_STORAGES_NOT_MATCH|CONTENT_STORAGES_INCOMPLETE|UNRECOGNIZED}", "{enum:RECOVERED_FROM_LOG}" ],
        "io_time_ms" : [ "{regexp#integer}" ],
        "listeners_ms" : [ "{regexp#integer}" ],
        "names_checked" : [ "{regexp#integer}" ],
        "names_general_errors" : [ "{regexp#integer}" ],
        "names_ids_resolved_to_null" : [ "{regexp#integer}" ],
        "names_inconsistent_resolution" : [ "{regexp#integer}" ],
        "names_resolved_to_null" : [ "{regexp#integer}" ],
        "partial_scans" : [ "{regexp#integer}" ],
        "rebuild_cause" : [ "{enum:NONE|INITIAL|DATA_INCONSISTENT|SCHEDULED_REBUILD|NOT_CLOSED_PROPERLY|IMPL_VERSION_MISMATCH}", "{enum:CONTENT_STORAGES_NOT_MATCH|CONTENT_STORAGES_INCOMPLETE|NAME_STORAGE_INCOMPLETE|UNRECOGNIZED}" ],
        "recursive" : [ "{enum#boolean}" ],
        "retries" : [ "{regexp#integer}" ],
        "roots_arc" : [ "{regexp#integer}" ],
        "roots_checked" : [ "{regexp#integer}" ],
        "roots_deleted_but_not_removed" : [ "{regexp#integer}" ],
        "roots_errors" : [ "{regexp#integer}" ],
        "roots_local" : [ "{regexp#integer}" ],
        "roots_other" : [ "{regexp#integer}" ],
        "roots_with_parents" : [ "{regexp#integer}" ],
        "start_time_ms" : [ "{regexp#integer}" ],
        "time_since_startup_ms" : [ "{regexp#integer}" ],
        "tries" : [ "{regexp#integer}" ],
        "vfs_creation_timestamp_ms" : [ "{regexp#integer}" ],
        "vfs_time_ms" : [ "{regexp#integer}" ],
        "wait_ms" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "refreshed", "events", "refresh_scan", "refresh_session", "initial_refresh", "initialization", "health_check", "internal_errors" ]
      }
    }
  }, {
    "id" : "vim.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:tracked|copied}" ],
      "event_data" : {
        "action_id" : [ "{util#action}" ]
      }
    }
  }, {
    "id" : "vim.common",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vim.common}" ],
      "event_data" : {
        "enabled_extensions" : [ "{enum:textobj-entire|argtextobj|ReplaceWithRegister|vim-paragraph-motion|highlightedyank|multiple-cursors|exchange|NERDTree|surround|commentary|matchit|textobj-indent}" ],
        "is_EAP_active" : [ "{enum#boolean}" ],
        "is_plugin_enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vim.handlers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vim.handler}" ],
      "event_data" : {
        "handler" : [ "{enum:NORMAL_UNDEFINED|NORMAL_IDE|NORMAL_VIM|INSERT_UNDEFINED|INSERT_IDE|INSERT_VIM|VISUAL_AND_SELECT_UNDEFINED|VISUAL_AND_SELECT_IDE|VISUAL_AND_SELECT_VIM}" ],
        "key_stroke" : [ "{enum:Ctrl+1|Ctrl+2|Ctrl+3|Ctrl+4|Ctrl+5|Ctrl+6|Ctrl+7|Ctrl+8|Ctrl+9|Ctrl+0|Ctrl+Shift+1|Ctrl+Shift+2|Ctrl+Shift+3|Ctrl+Shift+4|Ctrl+Shift+5|Ctrl+Shift+6|Ctrl+Shift+7|Ctrl+Shift+8|Ctrl+Shift+9|Ctrl+Shift+0|Ctrl+A|Ctrl+B|Ctrl+C|Ctrl+D|Ctrl+E|Ctrl+F|Ctrl+G|Ctrl+H|Ctrl+I|Ctrl+J|Ctrl+K|Ctrl+L|Ctrl+M|Ctrl+N|Ctrl+O|Ctrl+P|Ctrl+Q|Ctrl+R|Ctrl+S|Ctrl+T|Ctrl+U|Ctrl+V|Ctrl+W|Ctrl+X|Ctrl+Y|Ctrl+Z|Ctrl+Open Bracket|Ctrl+Close Bracket|Ctrl+Shift+A|Ctrl+Shift+B|Ctrl+Shift+C|Ctrl+Shift+D|Ctrl+Shift+E|Ctrl+Shift+F|Ctrl+Shift+G|Ctrl+Shift+H|Ctrl+Shift+I|Ctrl+Shift+J|Ctrl+Shift+K|Ctrl+Shift+L|Ctrl+Shift+M|Ctrl+Shift+N|Ctrl+Shift+O|Ctrl+Shift+P|Ctrl+Shift+Q|Ctrl+Shift+R|Ctrl+Shift+S|Ctrl+Shift+T|Ctrl+Shift+U|Ctrl+Shift+V|Ctrl+Shift+W|Ctrl+Shift+X|Ctrl+Shift+Y|Ctrl+Shift+Z|Ctrl+Shift+Open Bracket|Ctrl+Shift+Close Bracket}" ]
      }
    }
  }, {
    "id" : "vim.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vim.options}" ],
      "event_data" : {
        "ideajoin" : [ "{enum#boolean}" ],
        "ideamarks" : [ "{enum:keep|select|visual}", "{enum#boolean}" ],
        "ideaput" : [ "{enum#boolean}" ],
        "ideaselection" : [ "{enum#boolean}" ],
        "ideastatusicon" : [ "{enum:enabled|gray|disabled}" ],
        "ideavimsupport" : [ "{enum:dialog|singleline|dialoglegacy}" ],
        "ideawrite" : [ "{enum:all|file}" ]
      }
    }
  }, {
    "id" : "vim.vimscript",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vim.vimscript}" ],
      "event_data" : {
        "extensions_enabled_by_plug" : [ "{enum:textobj-entire|argtextobj|ReplaceWithRegister|vim-paragraph-motion|highlightedyank|multiple-cursors|exchange|NERDTree|surround|commentary|matchit|textobj-indent}" ],
        "extensions_enabled_by_set" : [ "{enum:textobj-entire|argtextobj|ReplaceWithRegister|vim-paragraph-motion|highlightedyank|multiple-cursors|exchange|NERDTree|surround|commentary|matchit|textobj-indent}" ],
        "ideavimrc_size" : [ "{regexp#integer}" ],
        "is_IDE-specific_configuration_used" : [ "{enum#boolean}" ],
        "is_function_call_used" : [ "{enum#boolean}" ],
        "is_function_declaration_used" : [ "{enum#boolean}" ],
        "is_if_used" : [ "{enum#boolean}" ],
        "is_loop_used" : [ "{enum#boolean}" ],
        "is_map_expr_used" : [ "{enum#boolean}" ],
        "number_of_sourced_files" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "vulnerability.package.checker",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "fixLocal", "navigateInfo", "showInfo", "fixGlobal", "globalResult", "localResult", "runGlobal", "localPathResult", "problemTabSelected", "problemTabClosed" ]
      }
    }
  }, {
    "id" : "web.inspector.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum:locator.evaluated|selection.updated|url.updated}" ],
      "event_data" : {
        "isAqua" : [ "{enum#boolean}" ],
        "locatorType" : [ "{enum:XPATH|CSS|TAG_WITH_CLASSES|ID|NAME|TEXT|DATA|ARIA_LABEL}" ],
        "source" : [ "{enum:intention|navigation}", "{enum:NONE|BROWSER|PAGE_STRUCTURE|EVALUATOR|CODE_EDITOR|CACHE}" ]
      }
    }
  }, {
    "id" : "welcome.screen",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:projects.tab.created}" ],
      "event_data" : {
        "recent_paths_count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "welcome_screen.clone",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:canceled|success|added|failed}" ],
      "event_data" : {
        "cloneable_projects" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "workspace.model",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cache.loaded|jps.iml.loaded|cache.saved}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "size_bytes" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "wrs.article",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:deleted|created}" ],
      "event_data" : {
        "anonymous_id" : [ "{regexp#hash}" ],
        "article_id" : [ "{regexp#hash}" ],
        "template" : [ "{regexp#hash}" ],
        "template_id" : [ "{regexp#hash}" ]
      }
    }
  }, {
    "id" : "wrs.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:buildprofiles.update|buildprofiles.updated}" ],
      "event_data" : {
        "solution_name" : [ "{regexp#hash}" ]
      }
    }
  }, {
    "id" : "wrs.instance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:create|delete}" ],
      "event_data" : {
        "anonymous_id" : [ "{regexp#hash}" ]
      }
    }
  }, {
    "id" : "wrs.toc",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:move.nextTo|move.into|insert|remove}" ],
      "event_data" : {
        "above" : [ "{enum#boolean}" ],
        "anonymous_id" : [ "{regexp#hash}" ],
        "article_id" : [ "{regexp#hash}" ],
        "article_ids" : [ "{regexp#hash}" ],
        "target_id" : [ "{regexp#hash}" ]
      }
    }
  }, {
    "id" : "xdebugger.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:thread.selected|frame.selected|session.selected|frames.updated}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#frame_type}" ],
        "frames_per_file_type" : [ "{regexp#integer}" ],
        "location" : [ "{enum:framesView|threadsView}" ],
        "total_frames" : [ "{regexp#integer}" ]
      }
    }
  } ],
  "rules" : {
    "enums" : {
      "boolean" : [ "true", "false", "TRUE", "FALSE", "True", "False" ],
      "build_tools" : [ "Maven", "Gradle", "gradle", "sbt", "Clojure_Deps", "clojure_deps", "Pants", "pants", "bsp", "Kobalt", "kobalt", "undefined.system", "third.party", "SPM", "CompDB", "Compilation_Database", "Makefile", "Meson", "PlatformIO" ],
      "dotnet_technologies" : [ ".NET_Core", ".NET Core", ".NET_Classic", ".NET Classic", "Avalonia", "C++", "Godot", "Managed_C++", "Managed C++", "Silverlight", "UE4", "UE5", "UWP", "Unity", "UnitySidecar", "MAUI", "WPF", "Web_Classic", "Web Classic", "Web_Core", "Web Core", "WebSite", "WinRT", "Sql Database Project", "WindowsForms_Classic", "WindowsForms Classic", "WindowsForms Core", "WindowsForms_Core", "WindowsPhone", "Uno", "Xamarin", "XamarinForms", "Azure_Function", "Azure Function", "AzureFunction", "Xamarin.Mac", "Xamarin.Android", "Xamarin.iOS", "Xamarin.PlayStation3", "Xamarin.PlayStation4", "Xamarin.PlayStationVita", "Xamarin.WatchOS", "Xamarin.TVOS", "Xamarin.Xbox360", "Xamarin.XboxOne", "UnrealGame", "UnrealModule", "UnrealPlugin", "UnrealFolder", "Unreal Engine (any)" ],
      "grazie_rule_ids" : [ "Google_Developer_Documentation_Style_Guide.Contractions", "Google_Developer_Documentation_Style_Guide.Ellipses", "Google_Developer_Documentation_Style_Guide.EmDash", "Google_Developer_Documentation_Style_Guide.Exclamation", "Google_Developer_Documentation_Style_Guide.HeadingPunctuation", "Google_Developer_Documentation_Style_Guide.Latin", "Google_Developer_Documentation_Style_Guide.LyHyphens", "Google_Developer_Documentation_Style_Guide.OptionalPlurals", "Google_Developer_Documentation_Style_Guide.Parens", "Google_Developer_Documentation_Style_Guide.Spacing", "Google_Developer_Documentation_Style_Guide.WordList", "Insensitive_Writing_(alex).Ablist", "Insensitive_Writing_(alex).Gendered", "Insensitive_Writing_(alex).LGBTQ", "Insensitive_Writing_(alex).ProfanityLikely", "Insensitive_Writing_(alex).Race", "Insensitive_Writing_(alex).Suicide", "JetBrains_Documentation_Style_Guide.En-dashes", "JetBrains_Documentation_Style_Guide.Latin", "JetBrains_Documentation_Style_Guide.Terms", "JetBrains_Documentation_Style_Guide.Unambiguous_contractions", "Legal.Contracts.actual", "Legal.Contracts.actually", "Legal.Contracts.also", "Legal.Contracts.provided", "Legal.Generic.couplets", "Legal.Generic.plainLegalEnglish", "Microsoft_Writing_Style_Guide.Adverbs", "Microsoft_Writing_Style_Guide.Auto", "Microsoft_Writing_Style_Guide.ComplexWords", "Microsoft_Writing_Style_Guide.Contractions", "Microsoft_Writing_Style_Guide.Dashes", "Microsoft_Writing_Style_Guide.Ellipses", "Microsoft_Writing_Style_Guide.GeneralURL", "Microsoft_Writing_Style_Guide.Negative", "Microsoft_Writing_Style_Guide.RangeFormat", "Microsoft_Writing_Style_Guide.Terms", "Microsoft_Writing_Style_Guide.Wordiness", "All", "Grammar.ADJECTIVE_POSITION", "Grammar.ADVERB_ADJECTIVE_CONFUSION", "Grammar.ADVERB_WORD_ORDER", "Grammar.ARTICLE_ISSUES", "Grammar.AUX_MAIN_VERB_FORM", "Grammar.CLAUSE_NEGATION", "Grammar.COMPARATIVE_SUPERLATIVE", "Grammar.CONDITIONAL_ISSUES", "Grammar.GERUND_VS_INFINITIVE", "Grammar.LETS_CONFUSION", "Grammar.MISSING_INFINITIVE_TO", "Grammar.MISSING_OBJECT", "Grammar.MISSING_SUBJECT", "Grammar.MISSING_VERB", "Grammar.OBJECT_PRONOUNS", "Grammar.PLURALS_IN_COMPOUNDS", "Grammar.POLARITY", "Grammar.POSSESSIVE_ISSUES", "Grammar.PREPOSITION_ISSUES", "Grammar.QUANTIFIER_NOUN_COMPATIBILITY", "Grammar.QUESTION_WORD_CONFUSION", "Grammar.RELATIVE_PRONOUN_CONFUSION", "Grammar.SUBJECT_VERB_AGREEMENT", "Grammar.SUBJECT_VERB_INVERSION", "Grammar.TENSE_ADVERBIALS", "Grammar.TO_FINITE", "Grammar.UNEXPECTED_VERB", "Grammar.WORD_REPETITION", "Grammar.WORD_SEPARATION", "Punctuation.ADVERBIAL_COMMA", "Punctuation.COMMA_BEFORE_CC_CLAUSE", "Punctuation.EG_IE_COMMA", "Punctuation.EG_IE_PUNCTUATION", "Punctuation.EXCESSIVE_COLON", "Punctuation.EXCESSIVE_COMMA", "Punctuation.FORMATTING_ISSUES", "Punctuation.HYPHEN_TO_DASH", "Punctuation.HYPHEN_VS_DASH", "Punctuation.JOINING_CLAUSES_WITH_COMMA", "Punctuation.LIST_COLON", "Punctuation.MISSING_QUESTION_MARK", "Punctuation.POLITE_COMMA", "Punctuation.RELATIVE_CLAUSE_COMMA", "Punctuation.RELATIVE_CLAUSE_COMMA_WITH_PROPER_NOUN", "Punctuation.RELATIVE_CLAUSE_COMMA_WITH_THAT", "Punctuation.SUBORDINATION_COMMA", "Semantics.ABSOLUTE_DATE_ISSUES", "Semantics.COMMONLY_CONFUSED_WORDS", "Semantics.RELATIVE_DATE_ISSUES", "Spelling.MISPLACED_SPACE", "Spelling.MISSING_DIACRITIC", "Spelling.NUMBER_ENDING", "Spelling.PROPER_NAMES", "Spelling.SIMILAR_WORD_CONFUSION", "Style.COLLOQUIAL_SPEECH", "Style.DISPREFERRED_SERIAL_COMMA", "Style.ENFORCE_CONTRACTION_USE", "Style.EXCLAMATION_MARK", "Style.EXPRESSIVE_PUNCTUATION", "Style.FAULTY_PARALLELISM", "Style.INFORMAL_SHORT_FORMS", "Style.LESS_READABLE_PASSIVE", "Style.LONG_DEPENDENCY", "Style.LOOKS_LIKE", "Style.MISSING_SERIAL_COMMA", "Style.NOUN_GENDER_BIAS", "Style.OF_CHAIN", "Style.PASSIVE_VOICE", "Style.PRONOUN_GENDER_BIAS", "Style.PUNCTUATION_MARKEDNESS", "Style.REDUNDANCY_GENERAL", "Style.REDUNDANT_OF", "Style.SENTENCE_CAPITALIZATION", "Style.VARIANT_LEXICAL_DIFFERENCES", "Style.VERY_ABUSE", "DE_AGREEMENT", "DE_CASE", "KOMMA_INFINITIVGRUPPEN", "KOMMA_ZWISCHEN_HAUPT_UND_NEBENSATZ", "KOMMA_ZWISCHEN_HAUPT_UND_NEBENSATZ_2", "PFEILE", "PRAEP_PLUS_VERB", "A_GOOGLE", "A_INFINITIVE", "ABOUT_ITS_NN", "AFFECT_EFFECT", "AFTERWARDS_US", "AGREEMENT_SENT_START", "ALL_OF_THE", "ATD_VERBS_TO_COLLOCATION", "AUXILIARY_DO_WITH_INCORRECT_VERB_FORM", "BE_VBP_IN", "BEEN_PART_AGREEMENT", "BY_DEFAULT_COMMA", "COMMA_COMPOUND_SENTENCE", "COMP_THAN", "COMPARISONS_THEN", "DEPEND_ON", "DID_BASEFORM", "DIFFERENT_THAN", "DOUBLE_PUNCTUATION", "DT_DT", "EN_A_VS_AN", "EN_COMPOUNDS", "EN_CONTRACTION_SPELLING", "EN_SPLIT_WORDS_HYPHEN", "EN_UNPAIRED_BRACKETS", "ENGLISH_WORD_REPEAT_RULE", "ETC_PERIOD", "EVERY_EACH_SINGULAR", "FEWER_LESS", "GITHUB", "GOOGLE_PRODUCTS", "HAVE_PART_AGREEMENT", "I_LOWERCASE", "IF_VB", "INFORMATIONS", "IT_IS", "IT_VBZ", "KIND_OF_A", "LC_AFTER_PERIOD", "LETS_LET", "LOG_IN", "LOGGED_IN_HYPHEN", "MD_BASEFORM", "MD_BE_NON_VBP", "MISSING_COMMA_AFTER_INTRODUCTORY_PHRASE", "MISSING_GENITIVE", "MISSING_HYPHEN", "MISSING_TO_BEFORE_A_VERB", "NON_ANTI_JJ", "NOUN_VERB_CONFUSION", "NUMBERS_IN_WORDS", "ON_EXCEL", "OUTSIDE_OF", "PHRASE_REPETITION", "PLURAL_VERB_AFTER_THIS", "POSSESSIVE_APOSTROPHE", "PREPOSITION_VERB", "PRP_VBG", "RECOMMENDED_COMPOUNDS", "SENT_START_CONJUNCTIVE_LINKING_ADVERB_COMMA", "SETUP_VERB", "SOME_OF_THE", "SPLITTED", "THE_SUPERLATIVE", "THIS_NNS", "TO_NON_BASE", "UNLIKELY_OPENING_PUNCTUATION", "UP_TO_DATE_HYPHEN", "VERB_NOUN_CONFUSION", "WHETHER", "DIACRITICS_VERB_N_ADJ", "ES_SIMPLE_REPLACE", "A_INFINITIF", "ACCORD_SUJET_VERBE", "AGREEMENT_POSTPONED_ADJ", "D_N", "FLECHES", "FRENCH_WHITESPACE", "OE", "ON_VERBE", "PLACE_DE_LA_VIRGULE", "UPPERCASE_SENTENCE_START", "VIRG_NON_TROUVEE", "GR_04_002", "PT_BARBARISMS_REPLACE", "PT_WORDINESS_REPLACE", "VERB_COMMA_CONJUNCTION", "DotOrCase", "OPREDELENIA", "PREP_U_and_Noun", "Verb_and_Verb", "WHITESPACE_RULE", "BU", "wa5", "wb4" ],
      "grazie_rule_long_ids" : [ "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Contractions", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Ellipses", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.EmDash", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Exclamation", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.HeadingPunctuation", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Latin", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.LyHyphens", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.OptionalPlurals", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Parens", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Spacing", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.WordList", "Bundled.Yaml.Insensitive_Writing_(alex).Ablist", "Bundled.Yaml.Insensitive_Writing_(alex).Gendered", "Bundled.Yaml.Insensitive_Writing_(alex).LGBTQ", "Bundled.Yaml.Insensitive_Writing_(alex).ProfanityLikely", "Bundled.Yaml.Insensitive_Writing_(alex).Race", "Bundled.Yaml.Insensitive_Writing_(alex).Suicide", "Bundled.Yaml.JetBrains_Documentation_Style_Guide.En-dashes", "Bundled.Yaml.JetBrains_Documentation_Style_Guide.Latin", "Bundled.Yaml.JetBrains_Documentation_Style_Guide.Terms", "Bundled.Yaml.JetBrains_Documentation_Style_Guide.Unambiguous_contractions", "Bundled.Yaml.Legal.Contracts.actual", "Bundled.Yaml.Legal.Contracts.actually", "Bundled.Yaml.Legal.Contracts.also", "Bundled.Yaml.Legal.Contracts.provided", "Bundled.Yaml.Legal.Generic.couplets", "Bundled.Yaml.Legal.Generic.plainLegalEnglish", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Adverbs", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Auto", "Bundled.Yaml.Microsoft_Writing_Style_Guide.ComplexWords", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Contractions", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Dashes", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Ellipses", "Bundled.Yaml.Microsoft_Writing_Style_Guide.GeneralURL", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Negative", "Bundled.Yaml.Microsoft_Writing_Style_Guide.RangeFormat", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Terms", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Wordiness", "Grazie.MLEC.En.All", "Grazie.RuleEngine.En.Grammar.ADJECTIVE_POSITION", "Grazie.RuleEngine.En.Grammar.ADVERB_ADJECTIVE_CONFUSION", "Grazie.RuleEngine.En.Grammar.ADVERB_WORD_ORDER", "Grazie.RuleEngine.En.Grammar.ARTICLE_ISSUES", "Grazie.RuleEngine.En.Grammar.AUX_MAIN_VERB_FORM", "Grazie.RuleEngine.En.Grammar.CLAUSE_NEGATION", "Grazie.RuleEngine.En.Grammar.COMPARATIVE_SUPERLATIVE", "Grazie.RuleEngine.En.Grammar.CONDITIONAL_ISSUES", "Grazie.RuleEngine.En.Grammar.GERUND_VS_INFINITIVE", "Grazie.RuleEngine.En.Grammar.LETS_CONFUSION", "Grazie.RuleEngine.En.Grammar.MISSING_INFINITIVE_TO", "Grazie.RuleEngine.En.Grammar.MISSING_OBJECT", "Grazie.RuleEngine.En.Grammar.MISSING_SUBJECT", "Grazie.RuleEngine.En.Grammar.MISSING_VERB", "Grazie.RuleEngine.En.Grammar.OBJECT_PRONOUNS", "Grazie.RuleEngine.En.Grammar.PLURALS_IN_COMPOUNDS", "Grazie.RuleEngine.En.Grammar.POLARITY", "Grazie.RuleEngine.En.Grammar.POSSESSIVE_ISSUES", "Grazie.RuleEngine.En.Grammar.PREPOSITION_ISSUES", "Grazie.RuleEngine.En.Grammar.QUANTIFIER_NOUN_COMPATIBILITY", "Grazie.RuleEngine.En.Grammar.QUESTION_WORD_CONFUSION", "Grazie.RuleEngine.En.Grammar.RELATIVE_PRONOUN_CONFUSION", "Grazie.RuleEngine.En.Grammar.SUBJECT_VERB_AGREEMENT", "Grazie.RuleEngine.En.Grammar.SUBJECT_VERB_INVERSION", "Grazie.RuleEngine.En.Grammar.TENSE_ADVERBIALS", "Grazie.RuleEngine.En.Grammar.TO_FINITE", "Grazie.RuleEngine.En.Grammar.UNEXPECTED_VERB", "Grazie.RuleEngine.En.Grammar.WORD_REPETITION", "Grazie.RuleEngine.En.Grammar.WORD_SEPARATION", "Grazie.RuleEngine.En.Punctuation.ADVERBIAL_COMMA", "Grazie.RuleEngine.En.Punctuation.COMMA_BEFORE_CC_CLAUSE", "Grazie.RuleEngine.En.Punctuation.EG_IE_COMMA", "Grazie.RuleEngine.En.Punctuation.EG_IE_PUNCTUATION", "Grazie.RuleEngine.En.Punctuation.EXCESSIVE_COLON", "Grazie.RuleEngine.En.Punctuation.EXCESSIVE_COMMA", "Grazie.RuleEngine.En.Punctuation.FORMATTING_ISSUES", "Grazie.RuleEngine.En.Punctuation.HYPHEN_TO_DASH", "Grazie.RuleEngine.En.Punctuation.HYPHEN_VS_DASH", "Grazie.RuleEngine.En.Punctuation.JOINING_CLAUSES_WITH_COMMA", "Grazie.RuleEngine.En.Punctuation.LIST_COLON", "Grazie.RuleEngine.En.Punctuation.MISSING_QUESTION_MARK", "Grazie.RuleEngine.En.Punctuation.POLITE_COMMA", "Grazie.RuleEngine.En.Punctuation.RELATIVE_CLAUSE_COMMA", "Grazie.RuleEngine.En.Punctuation.RELATIVE_CLAUSE_COMMA_WITH_PROPER_NOUN", "Grazie.RuleEngine.En.Punctuation.RELATIVE_CLAUSE_COMMA_WITH_THAT", "Grazie.RuleEngine.En.Punctuation.SUBORDINATION_COMMA", "Grazie.RuleEngine.En.Semantics.ABSOLUTE_DATE_ISSUES", "Grazie.RuleEngine.En.Semantics.COMMONLY_CONFUSED_WORDS", "Grazie.RuleEngine.En.Semantics.RELATIVE_DATE_ISSUES", "Grazie.RuleEngine.En.Spelling.MISPLACED_SPACE", "Grazie.RuleEngine.En.Spelling.MISSING_DIACRITIC", "Grazie.RuleEngine.En.Spelling.NUMBER_ENDING", "Grazie.RuleEngine.En.Spelling.PROPER_NAMES", "Grazie.RuleEngine.En.Spelling.SIMILAR_WORD_CONFUSION", "Grazie.RuleEngine.En.Style.COLLOQUIAL_SPEECH", "Grazie.RuleEngine.En.Style.DISPREFERRED_SERIAL_COMMA", "Grazie.RuleEngine.En.Style.ENFORCE_CONTRACTION_USE", "Grazie.RuleEngine.En.Style.EXCLAMATION_MARK", "Grazie.RuleEngine.En.Style.EXPRESSIVE_PUNCTUATION", "Grazie.RuleEngine.En.Style.FAULTY_PARALLELISM", "Grazie.RuleEngine.En.Style.INFORMAL_SHORT_FORMS", "Grazie.RuleEngine.En.Style.LESS_READABLE_PASSIVE", "Grazie.RuleEngine.En.Style.LONG_DEPENDENCY", "Grazie.RuleEngine.En.Style.LOOKS_LIKE", "Grazie.RuleEngine.En.Style.MISSING_SERIAL_COMMA", "Grazie.RuleEngine.En.Style.NOUN_GENDER_BIAS", "Grazie.RuleEngine.En.Style.OF_CHAIN", "Grazie.RuleEngine.En.Style.PASSIVE_VOICE", "Grazie.RuleEngine.En.Style.PRONOUN_GENDER_BIAS", "Grazie.RuleEngine.En.Style.PUNCTUATION_MARKEDNESS", "Grazie.RuleEngine.En.Style.REDUNDANCY_GENERAL", "Grazie.RuleEngine.En.Style.REDUNDANT_OF", "Grazie.RuleEngine.En.Style.SENTENCE_CAPITALIZATION", "Grazie.RuleEngine.En.Style.VARIANT_LEXICAL_DIFFERENCES", "Grazie.RuleEngine.En.Style.VERY_ABUSE", "LanguageTool.DE.DE_AGREEMENT", "LanguageTool.DE.DE_CASE", "LanguageTool.DE.KOMMA_INFINITIVGRUPPEN", "LanguageTool.DE.KOMMA_ZWISCHEN_HAUPT_UND_NEBENSATZ", "LanguageTool.DE.KOMMA_ZWISCHEN_HAUPT_UND_NEBENSATZ_2", "LanguageTool.DE.PFEILE", "LanguageTool.DE.PRAEP_PLUS_VERB", "LanguageTool.EN.A_GOOGLE", "LanguageTool.EN.A_INFINITIVE", "LanguageTool.EN.ABOUT_ITS_NN", "LanguageTool.EN.AFFECT_EFFECT", "LanguageTool.EN.AFTERWARDS_US", "LanguageTool.EN.AGREEMENT_SENT_START", "LanguageTool.EN.ALL_OF_THE", "LanguageTool.EN.ATD_VERBS_TO_COLLOCATION", "LanguageTool.EN.AUXILIARY_DO_WITH_INCORRECT_VERB_FORM", "LanguageTool.EN.BE_VBP_IN", "LanguageTool.EN.BEEN_PART_AGREEMENT", "LanguageTool.EN.BY_DEFAULT_COMMA", "LanguageTool.EN.COMMA_COMPOUND_SENTENCE", "LanguageTool.EN.COMP_THAN", "LanguageTool.EN.COMPARISONS_THEN", "LanguageTool.EN.DEPEND_ON", "LanguageTool.EN.DID_BASEFORM", "LanguageTool.EN.DIFFERENT_THAN", "LanguageTool.EN.DOUBLE_PUNCTUATION", "LanguageTool.EN.DT_DT", "LanguageTool.EN.EN_A_VS_AN", "LanguageTool.EN.EN_COMPOUNDS", "LanguageTool.EN.EN_CONTRACTION_SPELLING", "LanguageTool.EN.EN_SPLIT_WORDS_HYPHEN", "LanguageTool.EN.EN_UNPAIRED_BRACKETS", "LanguageTool.EN.ENGLISH_WORD_REPEAT_RULE", "LanguageTool.EN.ETC_PERIOD", "LanguageTool.EN.EVERY_EACH_SINGULAR", "LanguageTool.EN.FEWER_LESS", "LanguageTool.EN.GITHUB", "LanguageTool.EN.GOOGLE_PRODUCTS", "LanguageTool.EN.HAVE_PART_AGREEMENT", "LanguageTool.EN.I_LOWERCASE", "LanguageTool.EN.IF_VB", "LanguageTool.EN.INFORMATIONS", "LanguageTool.EN.IT_IS", "LanguageTool.EN.IT_VBZ", "LanguageTool.EN.KIND_OF_A", "LanguageTool.EN.LC_AFTER_PERIOD", "LanguageTool.EN.LETS_LET", "LanguageTool.EN.LOG_IN", "LanguageTool.EN.LOGGED_IN_HYPHEN", "LanguageTool.EN.MD_BASEFORM", "LanguageTool.EN.MD_BE_NON_VBP", "LanguageTool.EN.MISSING_COMMA_AFTER_INTRODUCTORY_PHRASE", "LanguageTool.EN.MISSING_GENITIVE", "LanguageTool.EN.MISSING_HYPHEN", "LanguageTool.EN.MISSING_TO_BEFORE_A_VERB", "LanguageTool.EN.NON_ANTI_JJ", "LanguageTool.EN.NOUN_VERB_CONFUSION", "LanguageTool.EN.NUMBERS_IN_WORDS", "LanguageTool.EN.ON_EXCEL", "LanguageTool.EN.OUTSIDE_OF", "LanguageTool.EN.PHRASE_REPETITION", "LanguageTool.EN.PLURAL_VERB_AFTER_THIS", "LanguageTool.EN.POSSESSIVE_APOSTROPHE", "LanguageTool.EN.PREPOSITION_VERB", "LanguageTool.EN.PRP_VBG", "LanguageTool.EN.RECOMMENDED_COMPOUNDS", "LanguageTool.EN.SENT_START_CONJUNCTIVE_LINKING_ADVERB_COMMA", "LanguageTool.EN.SETUP_VERB", "LanguageTool.EN.SOME_OF_THE", "LanguageTool.EN.SPLITTED", "LanguageTool.EN.THE_SUPERLATIVE", "LanguageTool.EN.THIS_NNS", "LanguageTool.EN.TO_NON_BASE", "LanguageTool.EN.UNLIKELY_OPENING_PUNCTUATION", "LanguageTool.EN.UP_TO_DATE_HYPHEN", "LanguageTool.EN.VERB_NOUN_CONFUSION", "LanguageTool.EN.WHETHER", "LanguageTool.ES.DIACRITICS_VERB_N_ADJ", "LanguageTool.ES.ES_SIMPLE_REPLACE", "LanguageTool.FR.A_INFINITIF", "LanguageTool.FR.ACCORD_SUJET_VERBE", "LanguageTool.FR.AGREEMENT_POSTPONED_ADJ", "LanguageTool.FR.D_N", "LanguageTool.FR.FLECHES", "LanguageTool.FR.FRENCH_WHITESPACE", "LanguageTool.FR.OE", "LanguageTool.FR.ON_VERBE", "LanguageTool.FR.PLACE_DE_LA_VIRGULE", "LanguageTool.FR.UPPERCASE_SENTENCE_START", "LanguageTool.FR.VIRG_NON_TROUVEE", "LanguageTool.IT.GR_04_002", "LanguageTool.PT.PT_BARBARISMS_REPLACE", "LanguageTool.PT.PT_WORDINESS_REPLACE", "LanguageTool.PT.VERB_COMMA_CONJUNCTION", "LanguageTool.RU.DotOrCase", "LanguageTool.RU.OPREDELENIA", "LanguageTool.RU.PREP_U_and_Noun", "LanguageTool.RU.UPPERCASE_SENTENCE_START", "LanguageTool.RU.Verb_and_Verb", "LanguageTool.RU.WHITESPACE_RULE", "LanguageTool.ZH.BU", "LanguageTool.ZH.wa5", "LanguageTool.ZH.wb4" ],
      "keymaps" : [ "Mac_OS_X_10.5+", "Default_for_GNOME", "Rider", "Eclipse", "Emacs", "Default_for_KDE", "Mac_OS_X", "ReSharper_OSX", "NetBeans_6.5", "Visual_Studio", "Rider_OSX", "TextMate", "Eclipse_(Mac_OS_X)", "ReSharper", "Xcode", "unknown", "custom", "Sublime_Text_(Mac_OS_X)", "Sublime_Text", "Default_for_XWin", "$default", "JBuilder", "VS_Code", "Visual_Studio_OSX", "Visual_Studio_2022", "Visual_Assist", "VSCode", "macOS_System_Shortcuts" ],
      "look_and_feel" : [ "Acme", "Apricode_Monokai", "Arc_Dark", "Arc_Dark_(Material)", "Arc_Dark_Contrast", "Arc_Theme", "Arc_Theme_-_Orange", "Arc_Theme_Dark", "Arc_Theme_Dark_-_Orange", "Astra_Dark", "AtomOneDarkByMayke", "Atom_One_Dark", "Atom_One_Dark_(Material)", "Atom_One_Dark_Contrast", "Atom_One_Light", "Atom_One_Light_(Material)", "Atom_One_Light_Contrast", "Aura", "Ayu_Mirage", "AzurLane:_Essex", "Bas_Tools_Black", "Bas_Tools_Dark", "Bas_Tools_White", "Base16_Monokai", "Base16_Tomorrow_Dark", "BattleField", "Blackbird", "BlendS:_Maika", "Blue_Dolphin", "Blue_Whale", "Breeze_Dark", "Bright_and_Sheen_Theme", "BunnySenpai:_Mai_Dark", "BunnySenpai:_Mai_Light", "Burnt", "Calm", "Carbon", "Cell_Dark_Theme", "Chicken", "Chuunibyou:_Takanashi_Rikka", "City_Pop", "Clean_Sheet", "Cobalt", "Cobalt9", "Cobalt_2", "Codely", "Codely_Blue", "Codely_Dark", "Codely_Light", "Coderpillr_Dusk", "CoffeeBean", "Construction_Paper", "Core", "Custom_Theme_(Material)", "Cute_Pink_Light", "Cyan_light", "Cyberpunk_Theme", "DDLC:_Monika_Dark", "DDLC:_Monika_Light", "DDLC:_Natsuki_Dark", "DDLC:_Natsuki_Light", "DDLC:_Sayori_Dark", "DDLC:_Sayori_Light", "DDLC:_Yuri_Dark", "DDLC:_Yuri_Light", "DM:_Kanna", "DM:_Tohru", "DR:_Mioda_Ibuki_Dark", "DR:_Mioda_Ibuki_Light", "DTWMMN:_Hayase_Nagatoro", "Darcula", "Darcula_(blacker)", "Darcula_Darker", "Darcula_Pitch_Black", "Darcula_Solid", "Darcula_Sombre", "Darcula_Sombre_(transparent_selection)", "Darcula_Sombre_(with_bright_borders)", "Darcula_Sombre_(with_dark_borders)", "Dark", "DarkCode", "DarkCode_Contrast", "DarkDark", "DarkTheme", "Dark_Candy", "Dark_Flat", "Dark_Orange", "Dark_purple", "Dark_ubuntu", "Deep_Ocean_Theme", "Dracula", "Dracula_(Material)", "Dracula_Colorful", "Dracula_Contrast", "DxD:_Rias:_Crimson", "DxD:_Rias:_Onyx", "Dysh_Unreal_Simple", "Dysh_Unreal_Simple_Vivid", "EVA:_Katsuragi_Misato", "EVA:_Rei", "Eclipse_Plus", "El_Chalten", "Elements", "Emerald", "Ender_Theme", "EroManga:_Sagiri", "Espresso_Light", "Espresso_Lightgram", "Field_Lights", "FlatAndMinimalistic_-_dark", "FlatAndMinimalistic_-_gray", "FlatOcean", "Forest_Night", "Foundation_Dark", "Foundation_Light", "Franxx:_Zero_Two_Dark", "Franxx:_Zero_Two_Light", "FutureDiary:_Gasai_Yuno", "Galaxy", "Galizur", "Gate:_Rory_Mercury", "Gerry_Oceanic", "Gerry_Space", "Gerry_Violet", "Giraffe", "GitHub", "GitHub_(Material)", "GitHub_Contrast", "GitHub_Dark", "GitHub_Dark_(Material)", "GitHub_Dark_Contrast", "GitHub_Dark_Dimmed", "GitHub_Light", "Gloom", "Glowing_Darcula", "Godot_Theme", "Golden_Blue", "Gradianto_Dark_Fuchsia", "Gradianto_Deep_Ocean", "Gradianto_Midnight_Blue", "Gradianto_Nature_Green", "Gray", "Green_Haze", "Green_lite", "Greenly", "Gruvbox", "Gruvbox_Dark_Hard", "Gruvbox_Dark_Medium", "Gruvbox_Dark_Soft", "Gruvbox_Github", "Gruvbox_Light_Hard", "Gruvbox_Light_Medium", "Gruvbox_Light_Soft", "Gruvbox_Material", "Hack_The_Box", "Hacker_Theme", "Haikyu:_Hinata_Shoyo", "Halcyon", "Helsing", "Hiberbee_Dark", "High-Contrast-Theme", "High_contrast", "HyperTheme", "Iceberg", "InBedBy7", "IntelliJ", "IntelliJ_Light", "Interesting", "JahySama:_Jahy", "JavierSC_dark", "KCoroutine", "Kakegurui:_Jabami_Yumeko", "KillLaKill:_Ryuko_Dark", "KillLaKill:_Ryuko_Light", "KillLaKill:_Satsuki_Dark", "KillLaKill:_Satsuki_Light", "KonoSuba:_Aqua", "KonoSuba:_Darkness_Dark", "KonoSuba:_Darkness_Light", "KonoSuba:_Megumin", "Kromatic", "Kyoto", "LS:_Konata", "Light", "Light_Custom_Theme_(Material)", "Light_Flat", "Light_Owl", "Light_Owl_(Material)", "Light_Owl_Contrast", "Light_green", "Light_with_Light_Header", "Lotus_Dark", "Lotus_Light", "LoveLive:_Sonoda_Umi", "Lumio", "MacchuPicchu", "Material_Darker", "Material_Darker_Contrast", "Material_Deep_Ocean", "Material_Deep_Ocean_Contrast", "Material_Forest", "Material_Forest_Contrast", "Material_Lighter", "Material_Lighter_Contrast", "Material_Oceanic", "Material_Oceanic_Contrast", "Material_Palenight", "Material_Palenight_Contrast", "Material_Sandy_Beach", "Material_Sandy_Beach_Contrast", "Material_Sky_Blue", "Material_Sky_Blue_Contrast", "Material_Theme:_Default", "Material_Theme:_Lighter", "Material_Theme:_Night", "Material_Theme:_Ocean", "Material_Volcano", "Material_Volcano_Contrast", "Mayukai_Alucard", "Mayukai_Mirage", "Mayukai_Mono", "Mayukai_Reversal", "Monarcula", "Monarcula_Pro", "Monarcula_Soft", "Monocai", "Monogatari:_Hanekawa_Tsubasa", "Monokai_Pro", "Monokai_Pro_(Classic)", "Monokai_Pro_(Filter_Machine)", "Monokai_Pro_(Filter_Octagon)", "Monokai_Pro_(Filter_Ristretto)", "Monokai_Pro_(Filter_Spectrum)", "Monokai_Pro_(Material)", "Monokai_Pro_Contrast", "MonsterMusume:_Miia", "Moonlight", "Moonlight_(Material)", "Moonlight_Contrast", "Moto_Ducat", "MyGruvbox", "Napalmpapalam", "NekoPara:_Azuki", "NekoPara:_Chocola", "NekoPara:_Christmas_Chocola", "NekoPara:_Cinnamon", "NekoPara:_Coconut", "NekoPara:_Maple_Dark", "NekoPara:_Maple_Light", "NekoPara:_Shigure", "NekoPara:_Vanilla", "Nier:Automata_Theme", "Night_Owl", "Night_Owl_(Material)", "Night_Owl_Contrast", "Noctis", "Noctis_Azureus", "Noctis_Bordo", "Noctis_Sereno", "Noctis_Uva", "Noctis_Voila", "Nord", "NotReallyMDTheme", "OPM:_Genos", "Obsidian", "Obsidian_Bright", "Oceanic_Dark_Theme", "Oceanic_Primal", "OneDarkMonokai", "One_Dark", "One_Dark_Italic", "One_Dark_Vivid", "One_Dark_Vivid_Italic", "OreGairu:_Yukinoshita_Yukino", "OreImo:_Kirino", "Pink_as_Heck", "Polar", "Prpl", "Purple", "QQ:_Nakano_Miku", "QQ:_Nakano_Nino", "QQ:_Nakano_Yotsuba", "Railgun:_Misaka_Mikoto", "Re:Zero:_Beatrice", "Re:Zero:_Echidna", "Re:Zero:_Emilia_Dark", "Re:Zero:_Emilia_Light", "Re:Zero:_Ram", "Re:Zero:_Rem", "ReSharper_Dark", "ReSharper_Light", "Red", "Red2", "Rider_Dark", "Rider_Light", "Rider_Day", "Rider_Night", "Rider_Melon_Dark", "Rider_Melon_Light", "Roboticket_Light", "Romeo-Theme", "Rouge", "SAO:_Asuna_Dark", "SAO:_Asuna_Light", "SG:_Makise_Kurisu", "Sage", "Salmon", "Sepia", "ShadeSmear_Dark", "ShadeSmear_Light", "Shades_Of_Purple", "Shape", "ShieldHero:_Raphtalia", "Shokugeki:_Yukihira_Soma", "Slime:_Rimiru_Tempest", "Solarized_Dark", "Solarized_Dark_(Material)", "Solarized_Dark_Contrast", "Solarized_Light", "Solarized_Light_(Material)", "Solarized_Light_Contrast", "Solo_Coding", "SpaceDay", "Spacegray", "Spacemacs", "Starlight", "StarlightDark", "Sublime", "Super_Dark", "SynthWave_'84", "SynthWave_'84_(Material)", "SynthWave_'84_Contrast", "Synthwave_Blue", "Synthwave_Refined", "System", "Tanne", "The_Above_Dark", "The_Above_Light", "Trash_Panda_Theme", "Twitch_Dark_Theme", "TypeMoon:_Astolfo", "TypeMoon:_Gray", "TypeMoon:_Ishtar_Dark", "TypeMoon:_Ishtar_Light", "TypeMoon:_Tohsaka_Rin", "Ubuntu_Theme", "Universe", "Universe_Purple", "VSCode_Dark", "Visual_Assist_Dark", "Visual_Assist_Light", "Visual_Studio_2019_Dark", "Visual_Studio_Code_Dark_Plus", "Visual_Studio_Dark", "Visual_Studio_Light", "Vocaloid:_Hatsune_Miku", "VoidTheme", "VsCode_Monokai_HC", "Windows_10_Light", "Winter_Is_Coming", "Xcode-Dark", "Xcode_Dark", "Xcode_Light", "Yaru_Dark", "YuruCamp:_Nadeshiko", "YuruCamp:_Shima_Rin", "[Doki]_AzurLane:_Essex", "[Doki]_BlendS:_Maika", "[Doki]_BunnySenpai:_Mai_Dark", "[Doki]_BunnySenpai:_Mai_Light", "[Doki]_DDLC:_Monika_Dark", "[Doki]_DDLC:_Monika_Light", "[Doki]_DDLC:_Natsuki_Dark", "[Doki]_DDLC:_Natsuki_Light", "[Doki]_DDLC:_Sayori_Dark", "[Doki]_DDLC:_Sayori_Light", "[Doki]_DDLC:_Yuri_Dark", "[Doki]_DDLC:_Yuri_Light", "[Doki]_DM:_Kanna", "[Doki]_DM:_Tohru", "[Doki]_DR:_Mioda_Ibuki_Dark", "[Doki]_DR:_Mioda_Ibuki_Light", "[Doki]_DTWMMN:_Hayase_Nagatoro", "[Doki]_DxD:_Rias:_Crimson", "[Doki]_DxD:_Rias:_Onyx", "[Doki]_EVA:_Katsuragi_Misato", "[Doki]_EVA:_Rei", "[Doki]_EroManga:_Sagiri", "[Doki]_Franxx:_Zero_Two_Dark", "[Doki]_Franxx:_Zero_Two_Light", "[Doki]_FutureDiary:_Gasai_Yuno", "[Doki]_Gate:_Rory_Mercury", "[Doki]_JahySama:_Jahy", "[Doki]_Kakegurui:_Jabami_Yumeko", "[Doki]_KillLaKill:_Ryuko_Dark", "[Doki]_KillLaKill:_Ryuko_Light", "[Doki]_KillLaKill:_Satsuki_Dark", "[Doki]_KillLaKill:_Satsuki_Light", "[Doki]_KonoSuba:_Aqua", "[Doki]_KonoSuba:_Darkness_Dark", "a.onji", "ajaaibu", "asiimov", "celestial", "color_blind_theme", "dark-jeff", "darkerla", "deep-focus-theme", "flat", "foggy-night", "hibNet_Midnight_Blue", "jDark", "jake-theme", "macOS_Light", "madrid", "metalheart", "minimal", "naysayer88", "nevaTheme", "night-owl-native", "nightfall", "plaid", "qubTheme", "reykjavik", "shirotelin", "silkworm", "soft-charcoal", "spectre_theme", "subtle-hacker-theme", "theme-oldirony-dark", "theme_eclipse", "thursday", "vuesion-theme", "warm-night", "white-sand", "xndlnk-monokai" ],
      "os" : [ "Windows", "Mac", "Linux", "FreeBSD", "ChromeOS", "Solaris", "Other" ],
      "plugin_type" : [ "PLATFORM", "JB_BUNDLED", "JB_NOT_BUNDLED", "LISTED", "NOT_LISTED", "UNKNOWN" ],
      "state" : [ "enabled", "disabled" ],
      "vcs" : [ "Git", "git", "SVN", "svn", "hg4idea", "Perforce", "perforce", "TFS", "tfs", "SourceSafe", "sourcesafe", "ClearCase", "clearcase", "CVS", "cvs", "TFVS", "tfvs", "VSS", "vss" ]
    },
    "regexps" : {
      "count" : "\\d+K?M?\\+?",
      "date_short_hash" : "[0-9]{2}[01][0-9][0123][0-9]-(([0-9A-Fa-f]{12})|undefined)",
      "float" : "-?\\d+(\\.\\d+(E\\-?\\d+)?)?",
      "hash" : "([0-9A-Fa-f]{40,64})|undefined",
      "integer" : "-?\\d+(\\+)?",
      "kotlin_version" : "(\\d+-)?\\d\\.\\d\\.\\d{1,3}-(dev|eap|release)-(\\d+-)?(AppCode|CLion|IJ|Studio)[0-9\\-\\.]+",
      "license_metadata" : "[0-9]{10}[A-Z]{4}[-0-9X]{6}",
      "mcu_name" : "UNKNOWN|UPDATE_FAILED|(STM32[A-Z]{1,2}\\w+)",
      "series" : "^(?:AreaRange|Area|Bubble|Heatmap|Pie|Stock|Scatter|Line|Bar)+(?:_(?:AreaRange|Area|Bubble|Heatmap|Pie|Stock|Scatter|Line|Bar)+)*$",
      "short_hash" : "([0-9A-Fa-f]{12})|undefined",
      "version" : "Unknown|unknown.format|unknown|UNKNOWN|((\\d+\\.?)*\\d+)"
    }
  },
  "version" : "3527"
}